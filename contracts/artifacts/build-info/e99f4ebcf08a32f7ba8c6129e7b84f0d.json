{
	"id": "e99f4ebcf08a32f7ba8c6129e7b84f0d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BlastFurnace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n/*\r\n\r\n    ,---,.   ,--,                             ___                ,---,.\r\n  ,'  .'  \\,--.'|                           ,--.'|_            ,'  .' |\r\n,---.' .' ||  | :                           |  | :,'         ,---.'   |         ,--,  __  ,-.      ,---,\r\n|   |  |: |:  : '                 .--.--.   :  : ' :         |   |   .'       ,'_ /|,' ,'/ /|  ,-+-. /  |\r\n:   :  :  /|  ' |     ,--.--.    /  /    '.;__,'  /          :   :  :    .--. |  | :'  | |' | ,--.'|'   |  ,--.--.     ,---.     ,---.\r\n:   |    ; '  | |    /       \\  |  :  /`./|  |   |           :   |  |-,,'_ /| :  . ||  |   ,'|   |  ,\"' | /       \\   /     \\   /     \\\r\n|   :     \\|  | :   .--.  .-. | |  :  ;_  :__,'| :           |   :  ;/||  ' | |  . .'  :  /  |   | /  | |.--.  .-. | /    / '  /    /  |\r\n|   |   . |'  : |__  \\__\\/: . .  \\  \\    `. '  : |__         |   |   .'|  | ' |  | ||  | '   |   | |  | | \\__\\/: . ..    ' /  .    ' / |\r\n'   :  '; ||  | '.'| ,\" .--.; |   `----.   \\|  | '.'|        '   :  '  :  | : ;  ; |;  : |   |   | |  |/  ,\" .--.; |'   ; :__ '   ;   /|\r\n|   |  | ; ;  :    ;/  /  ,.  |  /  /`--'  /;  :    ;        |   |  |  '  :  `--'   \\  , ;   |   | |--'  /  /  ,.  |'   | '.'|'   |  / |\r\n|   :   /  |  ,   /;  :   .'   \\'--'.     / |  ,   /         |   :  \\  :  ,      .-./---'    |   |/     ;  :   .'   \\   :    :|   :    |\r\n|   | ,'    ---`-' |  ,     .-./  `--'---'   ---`-'          |   | ,'   `--`----'            '---'      |  ,     .-./\\   \\  /  \\   \\  /\r\n`----'              `--`---'                                 `----'                                      `--`---'     `----'    `----'\r\n*/\r\n\r\npragma solidity ^0.8.24;\r\nimport \"./BlastClaimable.sol\";\r\nimport \"./NativeTransferable.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\ncontract BlastFurnace is BlastClaimable, NativeTransferable {\r\n\tusing SafeMath for uint256;\r\n\r\n\tuint256 private ORES_TO_HATCH_1MINERS = 1080000; //for final version should be seconds in a day\r\n\r\n\tuint256 private constant MAX_INGOTS = 10000;\r\n\tuint256 private constant BIG_INGOT_REWARD = 200;\r\n\tuint256 private constant SMALL_REF_INGOT_REWARD = 40;\r\n\r\n\tuint256 private constant INGOT_FRAGMENT = 200;\r\n\tuint256 private constant INGOT_REWARD_MULTIPLIER = 16; // .16%\r\n\r\n\tuint256 private constant REFERRAL_REWARD = 12_500; // 12.5% => x / 1000\r\n\r\n\tuint256 private PSN = 10000;\r\n\tuint256 private PSNH = 5000;\r\n\tuint256 private devFeeVal = 3;\r\n\tbool private initialized = false;\r\n\taddress payable private recAdd;\r\n\tmapping(address => uint256) private hatcheryMiners;\r\n\tmapping(address => uint256) private claimedOres;\r\n\tmapping(address => uint256) private lastHatch;\r\n\tmapping(address => address) private referrals;\r\n\tuint256 private marketOres;\r\n\r\n\tmapping(address => uint256) private _ingotBalances;\r\n\r\n\taddress[] private _holders;\r\n\tmapping(address => bool) private _isHolder;\r\n\taddress[] private _airdropQualifiers;\r\n\r\n\tconstructor() {\r\n\t\trecAdd = payable(msg.sender);\r\n\t}\r\n\r\n\tfunction ingotBalanceOf(address who) public view returns (uint256) {\r\n\t\treturn _ingotBalances[who];\r\n\t}\r\n\r\n\tfunction _hatchOres(address ref, uint256 amount) private {\r\n\t\trequire(initialized);\r\n\r\n\t\tif (ref == msg.sender) {\r\n\t\t\tref = address(0);\r\n\t\t}\r\n\r\n\t\tif (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {\r\n\t\t\treferrals[msg.sender] = ref;\r\n\r\n\t\t\tif (amount >= 1e18) {\r\n\t\t\t\t_addIngots(ref, BIG_INGOT_REWARD);\r\n\t\t\t} else if (amount >= .1e18) {\r\n\t\t\t\t_addIngots(ref, SMALL_REF_INGOT_REWARD);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tuint256 oresUsed = getMyOres(msg.sender);\r\n\t\tuint256 newMiners = SafeMath.div(oresUsed, ORES_TO_HATCH_1MINERS);\r\n\t\thatcheryMiners[msg.sender] = SafeMath.add(hatcheryMiners[msg.sender], newMiners);\r\n\t\t_setClaimed(msg.sender, 0);\r\n\t\tlastHatch[msg.sender] = block.timestamp;\r\n\r\n\t\t//send referral ores\r\n\t\t_rewardReferral(referrals[msg.sender], oresUsed);\r\n\r\n\t\t//boost market to nerf miners hoarding\r\n\t\tmarketOres = SafeMath.add(marketOres, SafeMath.div(oresUsed, 5));\r\n\t}\r\n\r\n\tfunction sellOres() public {\r\n\t\trequire(initialized);\r\n\t\tuint256 hasOres = getMyOres(msg.sender);\r\n\t\tuint256 oreValue = calculateOreSell(hasOres);\r\n\t\tuint256 fee = devFee(oreValue);\r\n\t\t_setClaimed(msg.sender, 0);\r\n\t\tlastHatch[msg.sender] = block.timestamp;\r\n\t\tmarketOres = SafeMath.add(marketOres, hasOres);\r\n\t\trecAdd.transfer(fee);\r\n\t\tpayable(msg.sender).transfer(SafeMath.sub(oreValue, fee));\r\n\t}\r\n\r\n\tfunction furnaceRewards(address adr) public view returns (uint256) {\r\n\t\tuint256 hasOres = getMyOres(adr);\r\n\t\tuint256 oreValue = calculateOreSell(hasOres);\r\n\t\treturn oreValue;\r\n\t}\r\n\r\n\tfunction buyOres(address ref) public payable {\r\n\t\trequire(initialized);\r\n\t\tuint256 oresBought = calculateOreBuy(msg.value, SafeMath.sub(address(this).balance, msg.value));\r\n\t\toresBought = SafeMath.sub(oresBought, devFee(oresBought));\r\n\t\tuint256 fee = devFee(msg.value);\r\n\t\trecAdd.transfer(fee);\r\n\t\t_addClaimed(msg.sender, oresBought);\r\n\t\t_hatchOres(ref, msg.value);\r\n\r\n\t\tif (msg.value >= 1e18) {\r\n\t\t\t_addIngots(msg.sender, BIG_INGOT_REWARD);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {\r\n\t\treturn SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)));\r\n\t}\r\n\r\n\tfunction calculateOreSell(uint256 ores) public view returns (uint256) {\r\n\t\treturn calculateTrade(ores, marketOres, address(this).balance);\r\n\t}\r\n\r\n\tfunction calculateOreBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {\r\n\t\treturn calculateTrade(eth, contractBalance, marketOres);\r\n\t}\r\n\r\n\tfunction calculateOreBuySimple(uint256 eth) public view returns (uint256) {\r\n\t\treturn calculateOreBuy(eth, address(this).balance);\r\n\t}\r\n\r\n\tfunction devFee(uint256 amount) private view returns (uint256) {\r\n\t\treturn SafeMath.div(SafeMath.mul(amount, devFeeVal), 100);\r\n\t}\r\n\r\n\tfunction seedMarket() public payable onlyOwner {\r\n\t\trequire(marketOres == 0);\r\n\t\tinitialized = true;\r\n\t\tmarketOres = 108000000000;\r\n\t}\r\n\r\n\tfunction getBalance() public view returns (uint256) {\r\n\t\treturn address(this).balance;\r\n\t}\r\n\r\n\tfunction getMyMiners(address adr) public view returns (uint256) {\r\n\t\treturn hatcheryMiners[adr];\r\n\t}\r\n\r\n\tfunction getMyOres(address adr) public view returns (uint256) {\r\n\t\treturn SafeMath.add(claimedOres[adr], getOresSinceLastHatch(adr));\r\n\t}\r\n\r\n\tfunction getOresSinceLastHatch(address addr) public view returns (uint256) {\r\n\t\tuint256 secondsPassed = min(ORES_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[addr]));\r\n\r\n\t\t// Ingots make time pass faster\r\n\t\tuint256 ingots = _ingotBalances[addr];\r\n\t\tuint256 timeIncrease = secondsPassed.mul(ingots).div(INGOT_FRAGMENT.mul(100));\r\n\r\n\t\tsecondsPassed = secondsPassed.add(timeIncrease);\r\n\r\n\t\treturn SafeMath.mul(secondsPassed, hatcheryMiners[addr]);\r\n\t}\r\n\r\n\tfunction min(uint256 a, uint256 b) private pure returns (uint256) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\r\n\tfunction _addIngots(address addr, uint256 amount) private {\r\n\t\tuint256 balance = _ingotBalances[addr].add(amount);\r\n\r\n\t\tif (balance > MAX_INGOTS) {\r\n\t\t\tbalance = MAX_INGOTS;\r\n\t\t}\r\n\r\n\t\t_ingotBalances[addr] = balance;\r\n\t}\r\n\r\n\tfunction _rewardReferral(address ref, uint256 ores) private {\r\n\t\tuint256 ingots = _ingotBalances[ref];\r\n\t\tuint256 ingotPM = (ingots.mul(INGOT_REWARD_MULTIPLIER).div(INGOT_FRAGMENT));\r\n\t\tuint256 rewardIncByT = REFERRAL_REWARD + ingotPM;\r\n\r\n\t\tuint256 referralOres = SafeMath.mul(ores, rewardIncByT).div(100000);\r\n\t\t_addClaimed(ref, referralOres);\r\n\t}\r\n\r\n\tfunction getAirdropQualifier(uint256 index) external view returns (address, uint256) {\r\n\t\tif (index >= _airdropQualifiers.length) {\r\n\t\t\treturn (address(0), 0);\r\n\t\t}\r\n\r\n\t\taddress addr = _airdropQualifiers[index];\r\n\t\tuint256 balance = claimedOres[addr];\r\n\r\n\t\treturn (addr, balance);\r\n\t}\r\n\r\n\tfunction blastFeesClaimed(uint256 value) internal virtual override {\r\n\t\t_distributeNative(value);\r\n\t}\r\n\r\n\tfunction _addClaimed(address addr, uint256 value) private {\r\n\t\t_setClaimed(addr, claimedOres[addr].add(value));\r\n\t}\r\n\r\n\tfunction _setClaimed(address addr, uint256 value) private {\r\n\t\tif (_isHolder[addr] != true) {\r\n\t\t\t_holders.push(addr);\r\n\t\t\t_isHolder[addr] = true;\r\n\t\t}\r\n\r\n\t\tclaimedOres[addr] = value;\r\n\t}\r\n\r\n\tfunction _distributeNative(uint256 amount) internal {\r\n\t\tif (amount <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddress holder;\r\n\t\tuint256 cut;\r\n\r\n\t\tfor (uint i = 0; i < _holders.length; i++) {\r\n\t\t\tholder = _holders[i];\r\n\t\t\tcut = amount.mul(claimedOres[holder]).div(marketOres);\r\n\r\n\t\t\tif (cut > 0) {\r\n\t\t\t\t_transferNative(holder, cut);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nlibrary SafeMath {\r\n\t/**\r\n\t * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tuint256 c = a + b;\r\n\t\t\tif (c < a) return (false, 0);\r\n\t\t\treturn (true, c);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b > a) return (false, 0);\r\n\t\t\treturn (true, a - b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\t// Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n\t\t\t// benefit is lost if 'b' is also tested.\r\n\t\t\t// See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n\t\t\tif (a == 0) return (true, 0);\r\n\t\t\tuint256 c = a * b;\r\n\t\t\tif (c / a != b) return (false, 0);\r\n\t\t\treturn (true, c);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b == 0) return (false, 0);\r\n\t\t\treturn (true, a / b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b == 0) return (false, 0);\r\n\t\t\treturn (true, a % b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the addition of two unsigned integers, reverting on\r\n\t * overflow.\r\n\t *\r\n\t * Counterpart to Solidity's `+` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Addition cannot overflow.\r\n\t */\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a + b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the subtraction of two unsigned integers, reverting on\r\n\t * overflow (when the result is negative).\r\n\t *\r\n\t * Counterpart to Solidity's `-` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Subtraction cannot overflow.\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the multiplication of two unsigned integers, reverting on\r\n\t * overflow.\r\n\t *\r\n\t * Counterpart to Solidity's `*` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Multiplication cannot overflow.\r\n\t */\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a * b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the integer division of two unsigned integers, reverting on\r\n\t * division by zero. The result is rounded towards zero.\r\n\t *\r\n\t * Counterpart to Solidity's `/` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n\t * reverting when dividing by zero.\r\n\t *\r\n\t * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n\t * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n\t * invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a % b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n\t * overflow (when the result is negative).\r\n\t *\r\n\t * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n\t * message unnecessarily. For custom revert reasons use {trySub}.\r\n\t *\r\n\t * Counterpart to Solidity's `-` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Subtraction cannot overflow.\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b <= a, errorMessage);\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n\t * division by zero. The result is rounded towards zero.\r\n\t *\r\n\t * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n\t * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n\t * uses an invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b > 0, errorMessage);\r\n\t\t\treturn a / b;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n\t * reverting with custom message when dividing by zero.\r\n\t *\r\n\t * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n\t * message unnecessarily. For custom revert reasons use {tryMod}.\r\n\t *\r\n\t * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n\t * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n\t * invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b > 0, errorMessage);\r\n\t\t\treturn a % b;\r\n\t\t}\r\n\t}\r\n}\r\n"
			},
			"contracts/NativeTransferable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nabstract contract NativeTransferable {\r\n\tfunction _transferNative(address to, uint256 amount) internal returns (bool) {\r\n\t\tif (payable(to).send(amount)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tevent NativeTransfer(address recipient, uint256 amount);\r\n}\r\n"
			},
			"contracts/BlastClaimable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\nimport \"./Ownable.sol\";\r\n\r\ninterface IBlast {\r\n\tfunction configureClaimableGas() external;\r\n\r\n\tfunction claimAllGas(address contractAddress, address recipient) external returns (uint256);\r\n}\r\n\r\nabstract contract BlastClaimable is Ownable {\r\n\tIBlast public BLAST;\r\n\tmapping(address => uint256) _lastBlastClaim;\r\n\r\n\tuint256 public _blastClaimInterval = 1 days;\r\n\tuint256 internal _feesClaimed;\r\n\r\n\tfunction claimMyGasFees() external {\r\n\t\taddress recipient = msg.sender;\r\n\t\tuint256 lastClaim = _lastBlastClaim[recipient];\r\n\r\n\t\tif (lastClaim + _blastClaimInterval < block.timestamp) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_lastBlastClaim[recipient] = block.timestamp;\r\n\t\tuint256 claimed = BLAST.claimAllGas(address(this), recipient);\r\n\r\n\t\tif (claimed > 0) {\r\n\t\t\t_feesClaimed += claimed;\r\n\t\t\tblastFeesClaimed(claimed);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setupBlast(address blastAddr) external onlyOwner {\r\n\t\tif (blastAddr == address(0)) {\r\n\t\t\tblastAddr = 0x4300000000000000000000000000000000000002;\r\n\t\t}\r\n\t\tBLAST = IBlast(blastAddr);\r\n\t\tBLAST.configureClaimableGas();\r\n\t}\r\n\r\n\tfunction setBlastClaimInterval(uint256 interval) external onlyOwner {\r\n\t\t_blastClaimInterval = interval;\r\n\t}\r\n\r\n\tfunction blastFeesClaimed(uint256 value) internal virtual;\r\n}\r\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ncontract Ownable {\r\n\taddress private _owner;\r\n\r\n\tevent OwnershipRenounced(address indexed previousOwner);\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor() {\r\n\t\t_owner = msg.sender;\r\n\t}\r\n\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn _owner;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(isOwner());\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction isOwner() public view returns (bool) {\r\n\t\treturn msg.sender == _owner;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public onlyOwner {\r\n\t\temit OwnershipRenounced(_owner);\r\n\t\t_owner = address(0);\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\t_transferOwnership(newOwner);\r\n\t}\r\n\r\n\tfunction _transferOwnership(address newOwner) internal {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(_owner, newOwner);\r\n\t\t_owner = newOwner;\r\n\t}\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/BlastClaimable.sol": {
				"BlastClaimable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLAST",
							"outputs": [
								{
									"internalType": "contract IBlast",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_blastClaimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimMyGasFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBlastClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "blastAddr",
									"type": "address"
								}
							],
							"name": "setupBlast",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BLAST()": "97d75776",
							"_blastClaimInterval()": "4addc0e8",
							"claimMyGasFees()": "23084e5f",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBlastClaimInterval(uint256)": "eaca243b",
							"setupBlast(address)": "f2e809e0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blastClaimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMyGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBlastClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blastAddr\",\"type\":\"address\"}],\"name\":\"setupBlast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastClaimable.sol\":\"BlastClaimable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1056,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "BLAST",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBlast)15"
							},
							{
								"astId": 24,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_lastBlastClaim",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_blastClaimInterval",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_feesClaimed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IBlast)15": {
								"encoding": "inplace",
								"label": "contract IBlast",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBlast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimAllGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "configureClaimableGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimAllGas(address,address)": "954fa5ee",
							"configureClaimableGas()": "4e606c47"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimAllGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureClaimableGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastClaimable.sol\":\"IBlast\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BlastFurnace.sol": {
				"BlastFurnace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLAST",
							"outputs": [
								{
									"internalType": "contract IBlast",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_blastClaimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								}
							],
							"name": "buyOres",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractBalance",
									"type": "uint256"
								}
							],
							"name": "calculateOreBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "calculateOreBuySimple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ores",
									"type": "uint256"
								}
							],
							"name": "calculateOreSell",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimMyGasFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "furnaceRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getAirdropQualifier",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getMyMiners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getMyOres",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "getOresSinceLastHatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "ingotBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seedMarket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellOres",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBlastClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "blastAddr",
									"type": "address"
								}
							],
							"name": "setupBlast",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BlastFurnace.sol\":1772:8494  contract BlastFurnace is BlastClaimable, NativeTransferable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BlastClaimable.sol\":410:416  1 days */\n  0x015180\n    /* \"contracts/BlastClaimable.sol\":373:416  uint256 public _blastClaimInterval = 1 days */\n  0x03\n  sstore\n    /* \"contracts/BlastFurnace.sol\":1908:1915  1080000 */\n  0x107ac0\n    /* \"contracts/BlastFurnace.sol\":1868:1915  uint256 private ORES_TO_HATCH_1MINERS = 1080000 */\n  0x05\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2338:2343  10000 */\n  0x2710\n    /* \"contracts/BlastFurnace.sol\":2316:2343  uint256 private PSN = 10000 */\n  0x06\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2370:2374  5000 */\n  0x1388\n    /* \"contracts/BlastFurnace.sol\":2347:2374  uint256 private PSNH = 5000 */\n  0x07\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2406:2407  3 */\n  0x03\n    /* \"contracts/BlastFurnace.sol\":2378:2407  uint256 private devFeeVal = 3 */\n  0x08\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2438:2443  false */\n  0x00\n    /* \"contracts/BlastFurnace.sol\":2411:2443  bool private initialized = false */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":2890:2942  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":2926:2936  msg.sender */\n  caller\n    /* \"contracts/BlastFurnace.sol\":2909:2915  recAdd */\n  0x09\n  0x01\n    /* \"contracts/BlastFurnace.sol\":2909:2937  recAdd = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":1772:8494  contract BlastFurnace is BlastClaimable, NativeTransferable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BlastFurnace.sol\":1772:8494  contract BlastFurnace is BlastClaimable, NativeTransferable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6dc39ec8\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x97d75776\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x97d75776\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe3931607\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xeaca243b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2e809e0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf36f7c62\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x6dc39ec8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x88bedf91\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x450c9d7d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x450c9d7d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4ad47291\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4addc0e8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4b634b06\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x51546044\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6bd22962\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x224e80fc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23084e5f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3c5f07cb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x44bb9117\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BlastFurnace.sol\":5963:6053  function getBalance() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":6163:6300  function getMyOres(address adr) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":455:866  function claimMyGasFees() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5824:5958  function seedMarket() public payable onlyOwner {... */\n    tag_5:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5240:5382  function calculateOreSell(uint256 ores) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":4355:4533  function furnaceRewards(address adr) public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5387:5545  function calculateOreBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":373:416  uint256 public _blastClaimInterval = 1 days */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":6058:6158  function getMyMiners(address adr) public view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5550:5684  function calculateOreBuySimple(uint256 eth) public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":6305:6766  function getOresSinceLastHatch(address addr) public view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":7449:7733  function getAirdropQualifier(uint256 index) external view returns (address, uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/BlastFurnace.sol\":4538:4988  function buyOres(address ref) public payable {... */\n    tag_15:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":301:320  IBlast public BLAST */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":3952:4350  function sellOres() public {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/BlastClaimable.sol\":1102:1210  function setBlastClaimInterval(uint256 interval) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/BlastClaimable.sol\":871:1097  function setupBlast(address blastAddr) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/BlastFurnace.sol\":2947:3050  function ingotBalanceOf(address who) public view returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5963:6053  function getBalance() public view returns (uint256) {... */\n    tag_29:\n        /* \"contracts/BlastFurnace.sol\":6006:6013  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6027:6048  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":6020:6048  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5963:6053  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6163:6300  function getMyOres(address adr) public view returns (uint256) {... */\n    tag_36:\n        /* \"contracts/BlastFurnace.sol\":6216:6223  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6237:6295  SafeMath.add(claimedOres[adr], getOresSinceLastHatch(adr)) */\n      tag_128\n        /* \"contracts/BlastFurnace.sol\":6250:6261  claimedOres */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":6250:6266  claimedOres[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6262:6265  adr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6250:6266  claimedOres[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6268:6294  getOresSinceLastHatch(adr) */\n      tag_129\n        /* \"contracts/BlastFurnace.sol\":6290:6293  adr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6268:6289  getOresSinceLastHatch */\n      tag_77\n        /* \"contracts/BlastFurnace.sol\":6268:6294  getOresSinceLastHatch(adr) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/BlastFurnace.sol\":6237:6249  SafeMath.add */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":6237:6295  SafeMath.add(claimedOres[adr], getOresSinceLastHatch(adr)) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BlastFurnace.sol\":6230:6295  return SafeMath.add(claimedOres[adr], getOresSinceLastHatch(adr)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6163:6300  function getMyOres(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":455:866  function claimMyGasFees() external {... */\n    tag_40:\n        /* \"contracts/BlastClaimable.sol\":495:512  address recipient */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":515:525  msg.sender */\n      caller\n        /* \"contracts/BlastClaimable.sol\":495:525  address recipient = msg.sender */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":530:547  uint256 lastClaim */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":550:565  _lastBlastClaim */\n      0x02\n        /* \"contracts/BlastClaimable.sol\":550:576  _lastBlastClaim[recipient] */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":566:575  recipient */\n      dup4\n        /* \"contracts/BlastClaimable.sol\":550:576  _lastBlastClaim[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastClaimable.sol\":530:576  uint256 lastClaim = _lastBlastClaim[recipient] */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":621:636  block.timestamp */\n      timestamp\n        /* \"contracts/BlastClaimable.sol\":599:618  _blastClaimInterval */\n      sload(0x03)\n        /* \"contracts/BlastClaimable.sol\":587:596  lastClaim */\n      dup3\n        /* \"contracts/BlastClaimable.sol\":587:618  lastClaim + _blastClaimInterval */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/BlastClaimable.sol\":587:636  lastClaim + _blastClaimInterval < block.timestamp */\n      lt\n        /* \"contracts/BlastClaimable.sol\":583:656  if (lastClaim + _blastClaimInterval < block.timestamp) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/BlastClaimable.sol\":644:651  return; */\n      pop\n      pop\n      jump(tag_131)\n        /* \"contracts/BlastClaimable.sol\":583:656  if (lastClaim + _blastClaimInterval < block.timestamp) {... */\n    tag_134:\n        /* \"contracts/BlastClaimable.sol\":691:706  block.timestamp */\n      timestamp\n        /* \"contracts/BlastClaimable.sol\":662:677  _lastBlastClaim */\n      0x02\n        /* \"contracts/BlastClaimable.sol\":662:688  _lastBlastClaim[recipient] */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":678:687  recipient */\n      dup5\n        /* \"contracts/BlastClaimable.sol\":662:688  _lastBlastClaim[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastClaimable.sol\":662:706  _lastBlastClaim[recipient] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":711:726  uint256 claimed */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":729:734  BLAST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastClaimable.sol\":729:746  BLAST.claimAllGas */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x954fa5ee\n        /* \"contracts/BlastClaimable.sol\":755:759  this */\n      address\n        /* \"contracts/BlastClaimable.sol\":762:771  recipient */\n      dup6\n        /* \"contracts/BlastClaimable.sol\":729:772  BLAST.claimAllGas(address(this), recipient) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/BlastClaimable.sol\":711:772  uint256 claimed = BLAST.claimAllGas(address(this), recipient) */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":793:794  0 */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":783:790  claimed */\n      dup2\n        /* \"contracts/BlastClaimable.sol\":783:794  claimed > 0 */\n      gt\n        /* \"contracts/BlastClaimable.sol\":779:862  if (claimed > 0) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/BlastClaimable.sol\":818:825  claimed */\n      dup1\n        /* \"contracts/BlastClaimable.sol\":802:814  _feesClaimed */\n      0x04\n      0x00\n        /* \"contracts/BlastClaimable.sol\":802:825  _feesClaimed += claimed */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":831:856  blastFeesClaimed(claimed) */\n      tag_143\n        /* \"contracts/BlastClaimable.sol\":848:855  claimed */\n      dup2\n        /* \"contracts/BlastClaimable.sol\":831:847  blastFeesClaimed */\n      tag_144\n        /* \"contracts/BlastClaimable.sol\":831:856  blastFeesClaimed(claimed) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/BlastClaimable.sol\":779:862  if (claimed > 0) {... */\n    tag_141:\n        /* \"contracts/BlastClaimable.sol\":490:866  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/BlastClaimable.sol\":455:866  function claimMyGasFees() external {... */\n    tag_131:\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5824:5958  function seedMarket() public payable onlyOwner {... */\n    tag_42:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_146\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_98\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n        /* \"contracts/BlastFurnace.sol\":5898:5899  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5884:5894  marketOres */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":5884:5899  marketOres == 0 */\n      eq\n        /* \"contracts/BlastFurnace.sol\":5876:5900  require(marketOres == 0) */\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n        /* \"contracts/BlastFurnace.sol\":5919:5923  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":5905:5916  initialized */\n      0x09\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5905:5923  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":5941:5953  108000000000 */\n      0x19254d3800\n        /* \"contracts/BlastFurnace.sol\":5928:5938  marketOres */\n      0x0e\n        /* \"contracts/BlastFurnace.sol\":5928:5953  marketOres = 108000000000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":5824:5958  function seedMarket() public payable onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5240:5382  function calculateOreSell(uint256 ores) public view returns (uint256) {... */\n    tag_47:\n        /* \"contracts/BlastFurnace.sol\":5301:5308  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5322:5377  calculateTrade(ores, marketOres, address(this).balance) */\n      tag_151\n        /* \"contracts/BlastFurnace.sol\":5337:5341  ores */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":5343:5353  marketOres */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":5355:5376  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5322:5336  calculateTrade */\n      tag_152\n        /* \"contracts/BlastFurnace.sol\":5322:5377  calculateTrade(ores, marketOres, address(this).balance) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/BlastFurnace.sol\":5315:5377  return calculateTrade(ores, marketOres, address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5240:5382  function calculateOreSell(uint256 ores) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4355:4533  function furnaceRewards(address adr) public view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/BlastFurnace.sol\":4413:4420  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4427:4442  uint256 hasOres */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":4445:4459  getMyOres(adr) */\n      tag_154\n        /* \"contracts/BlastFurnace.sol\":4455:4458  adr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4445:4454  getMyOres */\n      tag_36\n        /* \"contracts/BlastFurnace.sol\":4445:4459  getMyOres(adr) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/BlastFurnace.sol\":4427:4459  uint256 hasOres = getMyOres(adr) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4464:4480  uint256 oreValue */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4483:4508  calculateOreSell(hasOres) */\n      tag_155\n        /* \"contracts/BlastFurnace.sol\":4500:4507  hasOres */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4483:4499  calculateOreSell */\n      tag_47\n        /* \"contracts/BlastFurnace.sol\":4483:4508  calculateOreSell(hasOres) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/BlastFurnace.sol\":4464:4508  uint256 oreValue = calculateOreSell(hasOres) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4520:4528  oreValue */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":4513:4528  return oreValue */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":4355:4533  function furnaceRewards(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5387:5545  function calculateOreBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n    tag_58:\n        /* \"contracts/BlastFurnace.sol\":5471:5478  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5492:5540  calculateTrade(eth, contractBalance, marketOres) */\n      tag_157\n        /* \"contracts/BlastFurnace.sol\":5507:5510  eth */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5512:5527  contractBalance */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5529:5539  marketOres */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":5492:5506  calculateTrade */\n      tag_152\n        /* \"contracts/BlastFurnace.sol\":5492:5540  calculateTrade(eth, contractBalance, marketOres) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/BlastFurnace.sol\":5485:5540  return calculateTrade(eth, contractBalance, marketOres) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5387:5545  function calculateOreBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":373:416  uint256 public _blastClaimInterval = 1 days */\n    tag_62:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6058:6158  function getMyMiners(address adr) public view returns (uint256) {... */\n    tag_67:\n        /* \"contracts/BlastFurnace.sol\":6113:6120  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6134:6148  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":6134:6153  hatcheryMiners[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6149:6152  adr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6134:6153  hatcheryMiners[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6127:6153  return hatcheryMiners[adr] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6058:6158  function getMyMiners(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5550:5684  function calculateOreBuySimple(uint256 eth) public view returns (uint256) {... */\n    tag_72:\n        /* \"contracts/BlastFurnace.sol\":5615:5622  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5636:5679  calculateOreBuy(eth, address(this).balance) */\n      tag_160\n        /* \"contracts/BlastFurnace.sol\":5652:5655  eth */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":5657:5678  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5636:5651  calculateOreBuy */\n      tag_58\n        /* \"contracts/BlastFurnace.sol\":5636:5679  calculateOreBuy(eth, address(this).balance) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/BlastFurnace.sol\":5629:5679  return calculateOreBuy(eth, address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5550:5684  function calculateOreBuySimple(uint256 eth) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6305:6766  function getOresSinceLastHatch(address addr) public view returns (uint256) {... */\n    tag_77:\n        /* \"contracts/BlastFurnace.sol\":6371:6378  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6385:6406  uint256 secondsPassed */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":6409:6483  min(ORES_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[addr])) */\n      tag_162\n        /* \"contracts/BlastFurnace.sol\":6413:6434  ORES_TO_HATCH_1MINERS */\n      sload(0x05)\n        /* \"contracts/BlastFurnace.sol\":6436:6482  SafeMath.sub(block.timestamp, lastHatch[addr]) */\n      tag_163\n        /* \"contracts/BlastFurnace.sol\":6449:6464  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":6466:6475  lastHatch */\n      0x0c\n        /* \"contracts/BlastFurnace.sol\":6466:6481  lastHatch[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6476:6480  addr */\n      dup9\n        /* \"contracts/BlastFurnace.sol\":6466:6481  lastHatch[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6436:6448  SafeMath.sub */\n      tag_164\n        /* \"contracts/BlastFurnace.sol\":6436:6482  SafeMath.sub(block.timestamp, lastHatch[addr]) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/BlastFurnace.sol\":6409:6412  min */\n      tag_165\n        /* \"contracts/BlastFurnace.sol\":6409:6483  min(ORES_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[addr])) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/BlastFurnace.sol\":6385:6483  uint256 secondsPassed = min(ORES_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[addr])) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6525:6539  uint256 ingots */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6542:6556  _ingotBalances */\n      0x0f\n        /* \"contracts/BlastFurnace.sol\":6542:6562  _ingotBalances[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6557:6561  addr */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":6542:6562  _ingotBalances[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6525:6562  uint256 ingots = _ingotBalances[addr] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6567:6587  uint256 timeIncrease */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6590:6644  secondsPassed.mul(ingots).div(INGOT_FRAGMENT.mul(100)) */\n      tag_166\n        /* \"contracts/BlastFurnace.sol\":6620:6643  INGOT_FRAGMENT.mul(100) */\n      tag_167\n        /* \"contracts/BlastFurnace.sol\":6639:6642  100 */\n      0x64\n        /* \"contracts/BlastFurnace.sol\":2166:2169  200 */\n      0xc8\n        /* \"contracts/BlastFurnace.sol\":6620:6638  INGOT_FRAGMENT.mul */\n      tag_168\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6620:6643  INGOT_FRAGMENT.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/BlastFurnace.sol\":6590:6615  secondsPassed.mul(ingots) */\n      tag_169\n        /* \"contracts/BlastFurnace.sol\":6608:6614  ingots */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6590:6603  secondsPassed */\n      dup7\n        /* \"contracts/BlastFurnace.sol\":6590:6607  secondsPassed.mul */\n      tag_168\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6590:6615  secondsPassed.mul(ingots) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/BlastFurnace.sol\":6590:6619  secondsPassed.mul(ingots).div */\n      tag_170\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6590:6644  secondsPassed.mul(ingots).div(INGOT_FRAGMENT.mul(100)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/BlastFurnace.sol\":6567:6644  uint256 timeIncrease = secondsPassed.mul(ingots).div(INGOT_FRAGMENT.mul(100)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6667:6698  secondsPassed.add(timeIncrease) */\n      tag_171\n        /* \"contracts/BlastFurnace.sol\":6685:6697  timeIncrease */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6667:6680  secondsPassed */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6667:6684  secondsPassed.add */\n      tag_130\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6667:6698  secondsPassed.add(timeIncrease) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/BlastFurnace.sol\":6651:6698  secondsPassed = secondsPassed.add(timeIncrease) */\n      swap3\n      pop\n        /* \"contracts/BlastFurnace.sol\":6712:6761  SafeMath.mul(secondsPassed, hatcheryMiners[addr]) */\n      tag_172\n        /* \"contracts/BlastFurnace.sol\":6725:6738  secondsPassed */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6740:6754  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":6740:6760  hatcheryMiners[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6755:6759  addr */\n      dup9\n        /* \"contracts/BlastFurnace.sol\":6740:6760  hatcheryMiners[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6712:6724  SafeMath.mul */\n      tag_168\n        /* \"contracts/BlastFurnace.sol\":6712:6761  SafeMath.mul(secondsPassed, hatcheryMiners[addr]) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/BlastFurnace.sol\":6705:6761  return SafeMath.mul(secondsPassed, hatcheryMiners[addr]) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":6305:6766  function getOresSinceLastHatch(address addr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":7449:7733  function getAirdropQualifier(uint256 index) external view returns (address, uint256) {... */\n    tag_82:\n        /* \"contracts/BlastFurnace.sol\":7516:7523  address */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7525:7532  uint256 */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":7552:7570  _airdropQualifiers */\n      0x12\n        /* \"contracts/BlastFurnace.sol\":7552:7577  _airdropQualifiers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7543:7548  index */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":7543:7577  index >= _airdropQualifiers.length */\n      lt\n        /* \"contracts/BlastFurnace.sol\":7539:7613  if (index >= _airdropQualifiers.length) {... */\n      tag_174\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":7601:7602  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7605:7606  0 */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":7585:7607  return (address(0), 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_173)\n        /* \"contracts/BlastFurnace.sol\":7539:7613  if (index >= _airdropQualifiers.length) {... */\n    tag_174:\n        /* \"contracts/BlastFurnace.sol\":7619:7631  address addr */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7634:7652  _airdropQualifiers */\n      0x12\n        /* \"contracts/BlastFurnace.sol\":7653:7658  index */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":7634:7659  _airdropQualifiers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n    tag_175:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":7619:7659  address addr = _airdropQualifiers[index] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7664:7679  uint256 balance */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7682:7693  claimedOres */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":7682:7699  claimedOres[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7694:7698  addr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":7682:7699  claimedOres[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":7664:7699  uint256 balance = claimedOres[addr] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7714:7718  addr */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":7720:7727  balance */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":7706:7728  return (addr, balance) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":7449:7733  function getAirdropQualifier(uint256 index) external view returns (address, uint256) {... */\n    tag_173:\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_87:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_180\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_98\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4538:4988  function buyOres(address ref) public payable {... */\n    tag_90:\n        /* \"contracts/BlastFurnace.sol\":4596:4607  initialized */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":4588:4608  require(initialized) */\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n        /* \"contracts/BlastFurnace.sol\":4613:4631  uint256 oresBought */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4634:4708  calculateOreBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      tag_185\n        /* \"contracts/BlastFurnace.sol\":4650:4659  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4661:4707  SafeMath.sub(address(this).balance, msg.value) */\n      tag_186\n        /* \"contracts/BlastFurnace.sol\":4674:4695  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":4697:4706  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4661:4673  SafeMath.sub */\n      tag_164\n        /* \"contracts/BlastFurnace.sol\":4661:4707  SafeMath.sub(address(this).balance, msg.value) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/BlastFurnace.sol\":4634:4649  calculateOreBuy */\n      tag_58\n        /* \"contracts/BlastFurnace.sol\":4634:4708  calculateOreBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/BlastFurnace.sol\":4613:4708  uint256 oresBought = calculateOreBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4726:4770  SafeMath.sub(oresBought, devFee(oresBought)) */\n      tag_187\n        /* \"contracts/BlastFurnace.sol\":4739:4749  oresBought */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":4751:4769  devFee(oresBought) */\n      tag_188\n        /* \"contracts/BlastFurnace.sol\":4758:4768  oresBought */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4751:4757  devFee */\n      tag_189\n        /* \"contracts/BlastFurnace.sol\":4751:4769  devFee(oresBought) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/BlastFurnace.sol\":4726:4738  SafeMath.sub */\n      tag_164\n        /* \"contracts/BlastFurnace.sol\":4726:4770  SafeMath.sub(oresBought, devFee(oresBought)) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/BlastFurnace.sol\":4713:4770  oresBought = SafeMath.sub(oresBought, devFee(oresBought)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4775:4786  uint256 fee */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4789:4806  devFee(msg.value) */\n      tag_190\n        /* \"contracts/BlastFurnace.sol\":4796:4805  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4789:4795  devFee */\n      tag_189\n        /* \"contracts/BlastFurnace.sol\":4789:4806  devFee(msg.value) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/BlastFurnace.sol\":4775:4806  uint256 fee = devFee(msg.value) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4811:4817  recAdd */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4811:4826  recAdd.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4811:4831  recAdd.transfer(fee) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4827:4830  fee */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4811:4831  recAdd.transfer(fee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n        /* \"contracts/BlastFurnace.sol\":4836:4871  _addClaimed(msg.sender, oresBought) */\n      tag_193\n        /* \"contracts/BlastFurnace.sol\":4848:4858  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4860:4870  oresBought */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4836:4847  _addClaimed */\n      tag_194\n        /* \"contracts/BlastFurnace.sol\":4836:4871  _addClaimed(msg.sender, oresBought) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/BlastFurnace.sol\":4876:4902  _hatchOres(ref, msg.value) */\n      tag_195\n        /* \"contracts/BlastFurnace.sol\":4887:4890  ref */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4892:4901  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4876:4886  _hatchOres */\n      tag_196\n        /* \"contracts/BlastFurnace.sol\":4876:4902  _hatchOres(ref, msg.value) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/BlastFurnace.sol\":4926:4930  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BlastFurnace.sol\":4913:4922  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4913:4930  msg.value >= 1e18 */\n      lt\n        /* \"contracts/BlastFurnace.sol\":4909:4984  if (msg.value >= 1e18) {... */\n      tag_197\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":4938:4978  _addIngots(msg.sender, BIG_INGOT_REWARD) */\n      tag_198\n        /* \"contracts/BlastFurnace.sol\":4949:4959  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":2059:2062  200 */\n      0xc8\n        /* \"contracts/BlastFurnace.sol\":4938:4948  _addIngots */\n      tag_199\n        /* \"contracts/BlastFurnace.sol\":4938:4978  _addIngots(msg.sender, BIG_INGOT_REWARD) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/BlastFurnace.sol\":4909:4984  if (msg.value >= 1e18) {... */\n    tag_197:\n        /* \"contracts/BlastFurnace.sol\":4583:4988  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":4538:4988  function buyOres(address ref) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_93:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_98:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":301:320  IBlast public BLAST */\n    tag_103:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":3952:4350  function sellOres() public {... */\n    tag_108:\n        /* \"contracts/BlastFurnace.sol\":3992:4003  initialized */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":3984:4004  require(initialized) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"contracts/BlastFurnace.sol\":4009:4024  uint256 hasOres */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4027:4048  getMyOres(msg.sender) */\n      tag_204\n        /* \"contracts/BlastFurnace.sol\":4037:4047  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4027:4036  getMyOres */\n      tag_36\n        /* \"contracts/BlastFurnace.sol\":4027:4048  getMyOres(msg.sender) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/BlastFurnace.sol\":4009:4048  uint256 hasOres = getMyOres(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4053:4069  uint256 oreValue */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4072:4097  calculateOreSell(hasOres) */\n      tag_205\n        /* \"contracts/BlastFurnace.sol\":4089:4096  hasOres */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4072:4088  calculateOreSell */\n      tag_47\n        /* \"contracts/BlastFurnace.sol\":4072:4097  calculateOreSell(hasOres) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/BlastFurnace.sol\":4053:4097  uint256 oreValue = calculateOreSell(hasOres) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4102:4113  uint256 fee */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4116:4132  devFee(oreValue) */\n      tag_206\n        /* \"contracts/BlastFurnace.sol\":4123:4131  oreValue */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4116:4122  devFee */\n      tag_189\n        /* \"contracts/BlastFurnace.sol\":4116:4132  devFee(oreValue) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/BlastFurnace.sol\":4102:4132  uint256 fee = devFee(oreValue) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4137:4163  _setClaimed(msg.sender, 0) */\n      tag_207\n        /* \"contracts/BlastFurnace.sol\":4149:4159  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4161:4162  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4137:4148  _setClaimed */\n      tag_208\n        /* \"contracts/BlastFurnace.sol\":4137:4163  _setClaimed(msg.sender, 0) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/BlastFurnace.sol\":4192:4207  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":4168:4177  lastHatch */\n      0x0c\n        /* \"contracts/BlastFurnace.sol\":4168:4189  lastHatch[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4178:4188  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4168:4189  lastHatch[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":4168:4207  lastHatch[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4225:4258  SafeMath.add(marketOres, hasOres) */\n      tag_209\n        /* \"contracts/BlastFurnace.sol\":4238:4248  marketOres */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":4250:4257  hasOres */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4225:4237  SafeMath.add */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":4225:4258  SafeMath.add(marketOres, hasOres) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/BlastFurnace.sol\":4212:4222  marketOres */\n      0x0e\n        /* \"contracts/BlastFurnace.sol\":4212:4258  marketOres = SafeMath.add(marketOres, hasOres) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4263:4269  recAdd */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4263:4278  recAdd.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4263:4283  recAdd.transfer(fee) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4279:4282  fee */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4263:4283  recAdd.transfer(fee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n        /* \"contracts/BlastFurnace.sol\":4296:4306  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4288:4316  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4288:4345  payable(msg.sender).transfer(SafeMath.sub(oreValue, fee)) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4317:4344  SafeMath.sub(oreValue, fee) */\n      tag_212\n        /* \"contracts/BlastFurnace.sol\":4330:4338  oreValue */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4340:4343  fee */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4317:4329  SafeMath.sub */\n      tag_164\n        /* \"contracts/BlastFurnace.sol\":4317:4344  SafeMath.sub(oreValue, fee) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/BlastFurnace.sol\":4288:4345  payable(msg.sender).transfer(SafeMath.sub(oreValue, fee)) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n        /* \"contracts/BlastFurnace.sol\":3979:4350  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":3952:4350  function sellOres() public {... */\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":1102:1210  function setBlastClaimInterval(uint256 interval) external onlyOwner {... */\n    tag_112:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_216\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_98\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n        /* \"contracts/BlastClaimable.sol\":1197:1205  interval */\n      dup1\n        /* \"contracts/BlastClaimable.sol\":1175:1194  _blastClaimInterval */\n      0x03\n        /* \"contracts/BlastClaimable.sol\":1175:1205  _blastClaimInterval = interval */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":1102:1210  function setBlastClaimInterval(uint256 interval) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":871:1097  function setupBlast(address blastAddr) external onlyOwner {... */\n    tag_116:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_220\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_98\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n        /* \"contracts/BlastClaimable.sol\":959:960  0 */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":938:961  blastAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastClaimable.sol\":938:947  blastAddr */\n      dup2\n        /* \"contracts/BlastClaimable.sol\":938:961  blastAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BlastClaimable.sol\":934:1029  if (blastAddr == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"contracts/BlastClaimable.sol\":981:1023  0x4300000000000000000000000000000000000002 */\n      0x4300000000000000000000000000000000000002\n        /* \"contracts/BlastClaimable.sol\":969:1023  blastAddr = 0x4300000000000000000000000000000000000002 */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":934:1029  if (blastAddr == address(0)) {... */\n    tag_223:\n        /* \"contracts/BlastClaimable.sol\":1048:1057  blastAddr */\n      dup1\n        /* \"contracts/BlastClaimable.sol\":1033:1038  BLAST */\n      0x01\n      0x00\n        /* \"contracts/BlastClaimable.sol\":1033:1058  BLAST = IBlast(blastAddr) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":1063:1068  BLAST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastClaimable.sol\":1063:1090  BLAST.configureClaimableGas */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4e606c47\n        /* \"contracts/BlastClaimable.sol\":1063:1092  BLAST.configureClaimableGas() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BlastClaimable.sol\":871:1097  function setupBlast(address blastAddr) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_120:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_228\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_98\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_231\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_232\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":2947:3050  function ingotBalanceOf(address who) public view returns (uint256) {... */\n    tag_124:\n        /* \"contracts/BlastFurnace.sol\":3005:3012  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3026:3040  _ingotBalances */\n      0x0f\n        /* \"contracts/BlastFurnace.sol\":3026:3045  _ingotBalances[who] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3041:3044  who */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":3026:3045  _ingotBalances[who] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":3019:3045  return _ingotBalances[who] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":2947:3050  function ingotBalanceOf(address who) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2070:2159  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"contracts/libraries/SafeMath.sol\":2128:2135  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2153:2154  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2149:2150  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2149:2154  a + b */\n      tag_235\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/SafeMath.sol\":2142:2154  return a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2070:2159  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":7738:7839  function blastFeesClaimed(uint256 value) internal virtual override {... */\n    tag_144:\n        /* \"contracts/BlastFurnace.sol\":7810:7834  _distributeNative(value) */\n      tag_237\n        /* \"contracts/BlastFurnace.sol\":7828:7833  value */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":7810:7827  _distributeNative */\n      tag_238\n        /* \"contracts/BlastFurnace.sol\":7810:7834  _distributeNative(value) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/BlastFurnace.sol\":7738:7839  function blastFeesClaimed(uint256 value) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4993:5235  function calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {... */\n    tag_152:\n        /* \"contracts/BlastFurnace.sol\":5075:5082  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5096:5230  SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      tag_240\n        /* \"contracts/BlastFurnace.sol\":5109:5130  SafeMath.mul(PSN, bs) */\n      tag_241\n        /* \"contracts/BlastFurnace.sol\":5122:5125  PSN */\n      sload(0x06)\n        /* \"contracts/BlastFurnace.sol\":5127:5129  bs */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":5109:5121  SafeMath.mul */\n      tag_168\n        /* \"contracts/BlastFurnace.sol\":5109:5130  SafeMath.mul(PSN, bs) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/BlastFurnace.sol\":5132:5229  SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)) */\n      tag_242\n        /* \"contracts/BlastFurnace.sol\":5145:5149  PSNH */\n      sload(0x07)\n        /* \"contracts/BlastFurnace.sol\":5151:5228  SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt) */\n      tag_243\n        /* \"contracts/BlastFurnace.sol\":5164:5223  SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)) */\n      tag_244\n        /* \"contracts/BlastFurnace.sol\":5177:5198  SafeMath.mul(PSN, rs) */\n      tag_245\n        /* \"contracts/BlastFurnace.sol\":5190:5193  PSN */\n      sload(0x06)\n        /* \"contracts/BlastFurnace.sol\":5195:5197  rs */\n      dup11\n        /* \"contracts/BlastFurnace.sol\":5177:5189  SafeMath.mul */\n      tag_168\n        /* \"contracts/BlastFurnace.sol\":5177:5198  SafeMath.mul(PSN, rs) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/BlastFurnace.sol\":5200:5222  SafeMath.mul(PSNH, rt) */\n      tag_246\n        /* \"contracts/BlastFurnace.sol\":5213:5217  PSNH */\n      sload(0x07)\n        /* \"contracts/BlastFurnace.sol\":5219:5221  rt */\n      dup13\n        /* \"contracts/BlastFurnace.sol\":5200:5212  SafeMath.mul */\n      tag_168\n        /* \"contracts/BlastFurnace.sol\":5200:5222  SafeMath.mul(PSNH, rt) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/BlastFurnace.sol\":5164:5176  SafeMath.add */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":5164:5223  SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/BlastFurnace.sol\":5225:5227  rt */\n      dup10\n        /* \"contracts/BlastFurnace.sol\":5151:5163  SafeMath.div */\n      tag_170\n        /* \"contracts/BlastFurnace.sol\":5151:5228  SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/BlastFurnace.sol\":5132:5144  SafeMath.add */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":5132:5229  SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/BlastFurnace.sol\":5096:5108  SafeMath.div */\n      tag_170\n        /* \"contracts/BlastFurnace.sol\":5096:5230  SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/BlastFurnace.sol\":5089:5230  return SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4993:5235  function calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2409:2498  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_164:\n        /* \"contracts/libraries/SafeMath.sol\":2467:2474  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2492:2493  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2488:2489  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2488:2493  a - b */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"contracts/libraries/SafeMath.sol\":2481:2493  return a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2409:2498  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6771:6867  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n    tag_165:\n        /* \"contracts/BlastFurnace.sol\":6828:6835  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6853:6854  b */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6849:6850  a */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6849:6854  a < b */\n      lt\n        /* \"contracts/BlastFurnace.sol\":6849:6862  a < b ? a : b */\n      tag_251\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":6861:6862  b */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6849:6862  a < b ? a : b */\n      jump(tag_252)\n    tag_251:\n        /* \"contracts/BlastFurnace.sol\":6857:6858  a */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":6849:6862  a < b ? a : b */\n    tag_252:\n        /* \"contracts/BlastFurnace.sol\":6842:6862  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6771:6867  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2724:2813  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"contracts/libraries/SafeMath.sol\":2782:2789  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2807:2808  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2803:2804  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2803:2808  a * b */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/libraries/SafeMath.sol\":2796:2808  return a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2724:2813  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":3081:3170  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"contracts/libraries/SafeMath.sol\":3139:3146  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":3164:3165  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":3160:3161  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":3160:3165  a / b */\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"contracts/libraries/SafeMath.sol\":3153:3165  return a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":3081:3170  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5689:5819  function devFee(uint256 amount) private view returns (uint256) {... */\n    tag_189:\n        /* \"contracts/BlastFurnace.sol\":5743:5750  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5764:5814  SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      tag_260\n        /* \"contracts/BlastFurnace.sol\":5777:5808  SafeMath.mul(amount, devFeeVal) */\n      tag_261\n        /* \"contracts/BlastFurnace.sol\":5790:5796  amount */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5798:5807  devFeeVal */\n      sload(0x08)\n        /* \"contracts/BlastFurnace.sol\":5777:5789  SafeMath.mul */\n      tag_168\n        /* \"contracts/BlastFurnace.sol\":5777:5808  SafeMath.mul(amount, devFeeVal) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/BlastFurnace.sol\":5810:5813  100 */\n      0x64\n        /* \"contracts/BlastFurnace.sol\":5764:5776  SafeMath.div */\n      tag_170\n        /* \"contracts/BlastFurnace.sol\":5764:5814  SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/BlastFurnace.sol\":5757:5814  return SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5689:5819  function devFee(uint256 amount) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":7844:7959  function _addClaimed(address addr, uint256 value) private {... */\n    tag_194:\n        /* \"contracts/BlastFurnace.sol\":7907:7954  _setClaimed(addr, claimedOres[addr].add(value)) */\n      tag_263\n        /* \"contracts/BlastFurnace.sol\":7919:7923  addr */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":7925:7953  claimedOres[addr].add(value) */\n      tag_264\n        /* \"contracts/BlastFurnace.sol\":7947:7952  value */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":7925:7936  claimedOres */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":7925:7942  claimedOres[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7937:7941  addr */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":7925:7942  claimedOres[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":7925:7946  claimedOres[addr].add */\n      tag_130\n      swap1\n        /* \"contracts/BlastFurnace.sol\":7925:7953  claimedOres[addr].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/BlastFurnace.sol\":7907:7918  _setClaimed */\n      tag_208\n        /* \"contracts/BlastFurnace.sol\":7907:7954  _setClaimed(addr, claimedOres[addr].add(value)) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/BlastFurnace.sol\":7844:7959  function _addClaimed(address addr, uint256 value) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":3055:3947  function _hatchOres(address ref, uint256 amount) private {... */\n    tag_196:\n        /* \"contracts/BlastFurnace.sol\":3125:3136  initialized */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":3117:3137  require(initialized) */\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n        /* \"contracts/BlastFurnace.sol\":3155:3165  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3148:3165  ref == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3148:3151  ref */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3148:3165  ref == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BlastFurnace.sol\":3144:3195  if (ref == msg.sender) {... */\n      tag_267\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3187:3188  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3173:3189  ref = address(0) */\n      swap2\n      pop\n        /* \"contracts/BlastFurnace.sol\":3144:3195  if (ref == msg.sender) {... */\n    tag_267:\n        /* \"contracts/BlastFurnace.sol\":3238:3239  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3205:3240  referrals[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3205:3214  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3205:3226  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3215:3225  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3205:3226  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3205:3240  referrals[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BlastFurnace.sol\":3205:3279  referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender */\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n        /* \"contracts/BlastFurnace.sol\":3269:3279  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3244:3279  referrals[msg.sender] != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3244:3253  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3244:3265  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3254:3264  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3244:3265  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3244:3279  referrals[msg.sender] != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BlastFurnace.sol\":3205:3279  referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender */\n    tag_268:\n        /* \"contracts/BlastFurnace.sol\":3201:3474  if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3311:3314  ref */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":3287:3296  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3287:3308  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3297:3307  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3287:3308  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3287:3314  referrals[msg.sender] = ref */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3336:3340  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/BlastFurnace.sol\":3326:3332  amount */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":3326:3340  amount >= 1e18 */\n      lt\n        /* \"contracts/BlastFurnace.sol\":3322:3469  if (amount >= 1e18) {... */\n      tag_270\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3349:3382  _addIngots(ref, BIG_INGOT_REWARD) */\n      tag_271\n        /* \"contracts/BlastFurnace.sol\":3360:3363  ref */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":2059:2062  200 */\n      0xc8\n        /* \"contracts/BlastFurnace.sol\":3349:3359  _addIngots */\n      tag_199\n        /* \"contracts/BlastFurnace.sol\":3349:3382  _addIngots(ref, BIG_INGOT_REWARD) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/BlastFurnace.sol\":3322:3469  if (amount >= 1e18) {... */\n      jump(tag_272)\n    tag_270:\n        /* \"contracts/BlastFurnace.sol\":3409:3414  .1e18 */\n      0x016345785d8a0000\n        /* \"contracts/BlastFurnace.sol\":3399:3405  amount */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":3399:3414  amount >= .1e18 */\n      lt\n        /* \"contracts/BlastFurnace.sol\":3395:3469  if (amount >= .1e18) {... */\n      tag_273\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3423:3462  _addIngots(ref, SMALL_REF_INGOT_REWARD) */\n      tag_274\n        /* \"contracts/BlastFurnace.sol\":3434:3437  ref */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":2116:2118  40 */\n      0x28\n        /* \"contracts/BlastFurnace.sol\":3423:3433  _addIngots */\n      tag_199\n        /* \"contracts/BlastFurnace.sol\":3423:3462  _addIngots(ref, SMALL_REF_INGOT_REWARD) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/BlastFurnace.sol\":3395:3469  if (amount >= .1e18) {... */\n    tag_273:\n        /* \"contracts/BlastFurnace.sol\":3322:3469  if (amount >= 1e18) {... */\n    tag_272:\n        /* \"contracts/BlastFurnace.sol\":3201:3474  if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {... */\n    tag_269:\n        /* \"contracts/BlastFurnace.sol\":3480:3496  uint256 oresUsed */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3499:3520  getMyOres(msg.sender) */\n      tag_275\n        /* \"contracts/BlastFurnace.sol\":3509:3519  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3499:3508  getMyOres */\n      tag_36\n        /* \"contracts/BlastFurnace.sol\":3499:3520  getMyOres(msg.sender) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/BlastFurnace.sol\":3480:3520  uint256 oresUsed = getMyOres(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3525:3542  uint256 newMiners */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3545:3590  SafeMath.div(oresUsed, ORES_TO_HATCH_1MINERS) */\n      tag_276\n        /* \"contracts/BlastFurnace.sol\":3558:3566  oresUsed */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3568:3589  ORES_TO_HATCH_1MINERS */\n      sload(0x05)\n        /* \"contracts/BlastFurnace.sol\":3545:3557  SafeMath.div */\n      tag_170\n        /* \"contracts/BlastFurnace.sol\":3545:3590  SafeMath.div(oresUsed, ORES_TO_HATCH_1MINERS) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/BlastFurnace.sol\":3525:3590  uint256 newMiners = SafeMath.div(oresUsed, ORES_TO_HATCH_1MINERS) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3624:3675  SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      tag_277\n        /* \"contracts/BlastFurnace.sol\":3637:3651  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":3637:3663  hatcheryMiners[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3652:3662  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3637:3663  hatcheryMiners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":3665:3674  newMiners */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3624:3636  SafeMath.add */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":3624:3675  SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/BlastFurnace.sol\":3595:3609  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":3595:3621  hatcheryMiners[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3610:3620  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3595:3621  hatcheryMiners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3595:3675  hatcheryMiners[msg.sender] = SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3680:3706  _setClaimed(msg.sender, 0) */\n      tag_278\n        /* \"contracts/BlastFurnace.sol\":3692:3702  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3704:3705  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3680:3691  _setClaimed */\n      tag_208\n        /* \"contracts/BlastFurnace.sol\":3680:3706  _setClaimed(msg.sender, 0) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/BlastFurnace.sol\":3735:3750  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":3711:3720  lastHatch */\n      0x0c\n        /* \"contracts/BlastFurnace.sol\":3711:3732  lastHatch[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3721:3731  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3711:3732  lastHatch[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3711:3750  lastHatch[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3781:3829  _rewardReferral(referrals[msg.sender], oresUsed) */\n      tag_279\n        /* \"contracts/BlastFurnace.sol\":3797:3806  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3797:3818  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3807:3817  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3797:3818  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3820:3828  oresUsed */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":3781:3796  _rewardReferral */\n      tag_280\n        /* \"contracts/BlastFurnace.sol\":3781:3829  _rewardReferral(referrals[msg.sender], oresUsed) */\n      jump\t// in\n    tag_279:\n        /* \"contracts/BlastFurnace.sol\":3891:3942  SafeMath.add(marketOres, SafeMath.div(oresUsed, 5)) */\n      tag_281\n        /* \"contracts/BlastFurnace.sol\":3904:3914  marketOres */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":3916:3941  SafeMath.div(oresUsed, 5) */\n      tag_282\n        /* \"contracts/BlastFurnace.sol\":3929:3937  oresUsed */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":3939:3940  5 */\n      0x05\n        /* \"contracts/BlastFurnace.sol\":3916:3928  SafeMath.div */\n      tag_170\n        /* \"contracts/BlastFurnace.sol\":3916:3941  SafeMath.div(oresUsed, 5) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/BlastFurnace.sol\":3891:3903  SafeMath.add */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":3891:3942  SafeMath.add(marketOres, SafeMath.div(oresUsed, 5)) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/BlastFurnace.sol\":3878:3888  marketOres */\n      0x0e\n        /* \"contracts/BlastFurnace.sol\":3878:3942  marketOres = SafeMath.add(marketOres, SafeMath.div(oresUsed, 5)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3112:3947  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":3055:3947  function _hatchOres(address ref, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6872:7091  function _addIngots(address addr, uint256 amount) private {... */\n    tag_199:\n        /* \"contracts/BlastFurnace.sol\":6935:6950  uint256 balance */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6953:6985  _ingotBalances[addr].add(amount) */\n      tag_284\n        /* \"contracts/BlastFurnace.sol\":6978:6984  amount */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":6953:6967  _ingotBalances */\n      0x0f\n        /* \"contracts/BlastFurnace.sol\":6953:6973  _ingotBalances[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6968:6972  addr */\n      dup7\n        /* \"contracts/BlastFurnace.sol\":6953:6973  _ingotBalances[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6953:6977  _ingotBalances[addr].add */\n      tag_130\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6953:6985  _ingotBalances[addr].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/BlastFurnace.sol\":6935:6985  uint256 balance = _ingotBalances[addr].add(amount) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":2006:2011  10000 */\n      0x2710\n        /* \"contracts/BlastFurnace.sol\":6996:7003  balance */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6996:7016  balance > MAX_INGOTS */\n      gt\n        /* \"contracts/BlastFurnace.sol\":6992:7050  if (balance > MAX_INGOTS) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":2006:2011  10000 */\n      0x2710\n        /* \"contracts/BlastFurnace.sol\":7024:7044  balance = MAX_INGOTS */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6992:7050  if (balance > MAX_INGOTS) {... */\n    tag_285:\n        /* \"contracts/BlastFurnace.sol\":7079:7086  balance */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":7056:7070  _ingotBalances */\n      0x0f\n        /* \"contracts/BlastFurnace.sol\":7056:7076  _ingotBalances[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7071:7075  addr */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":7056:7076  _ingotBalances[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":7056:7086  _ingotBalances[addr] = balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":6930:7091  {... */\n      pop\n        /* \"contracts/BlastFurnace.sol\":6872:7091  function _addIngots(address addr, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":7964:8151  function _setClaimed(address addr, uint256 value) private {... */\n    tag_208:\n        /* \"contracts/BlastFurnace.sol\":8050:8054  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":8031:8054  _isHolder[addr] != true */\n      iszero\n      iszero\n        /* \"contracts/BlastFurnace.sol\":8031:8040  _isHolder */\n      0x11\n        /* \"contracts/BlastFurnace.sol\":8031:8046  _isHolder[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8041:8045  addr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":8031:8046  _isHolder[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":8031:8054  _isHolder[addr] != true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BlastFurnace.sol\":8027:8115  if (_isHolder[addr] != true) {... */\n      tag_287\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":8062:8070  _holders */\n      0x10\n        /* \"contracts/BlastFurnace.sol\":8076:8080  addr */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":8062:8081  _holders.push(addr) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":8105:8109  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":8087:8096  _isHolder */\n      0x11\n        /* \"contracts/BlastFurnace.sol\":8087:8102  _isHolder[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8097:8101  addr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":8087:8102  _isHolder[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8087:8109  _isHolder[addr] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":8027:8115  if (_isHolder[addr] != true) {... */\n    tag_287:\n        /* \"contracts/BlastFurnace.sol\":8141:8146  value */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":8121:8132  claimedOres */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":8121:8138  claimedOres[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8133:8137  addr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":8121:8138  claimedOres[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":8121:8146  claimedOres[addr] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":7964:8151  function _setClaimed(address addr, uint256 value) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_232:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":8156:8491  function _distributeNative(uint256 amount) internal {... */\n    tag_238:\n        /* \"contracts/BlastFurnace.sol\":8227:8228  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8217:8223  amount */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":8217:8228  amount <= 0 */\n      gt\n        /* \"contracts/BlastFurnace.sol\":8213:8248  if (amount <= 0) {... */\n      iszero\n        /* \"contracts/BlastFurnace.sol\":8236:8243  return; */\n      tag_291\n        /* \"contracts/BlastFurnace.sol\":8213:8248  if (amount <= 0) {... */\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":8254:8268  address holder */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8273:8284  uint256 cut */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":8296:8302  uint i */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8291:8487  for (uint i = 0; i < _holders.length; i++) {... */\n    tag_293:\n        /* \"contracts/BlastFurnace.sol\":8312:8320  _holders */\n      0x10\n        /* \"contracts/BlastFurnace.sol\":8312:8327  _holders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":8308:8309  i */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":8308:8327  i < _holders.length */\n      lt\n        /* \"contracts/BlastFurnace.sol\":8291:8487  for (uint i = 0; i < _holders.length; i++) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":8349:8357  _holders */\n      0x10\n        /* \"contracts/BlastFurnace.sol\":8358:8359  i */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":8349:8360  _holders[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_297\n      tag_177\n      jump\t// in\n    tag_297:\n    tag_296:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":8340:8360  holder = _holders[i] */\n      swap3\n      pop\n        /* \"contracts/BlastFurnace.sol\":8372:8419  amount.mul(claimedOres[holder]).div(marketOres) */\n      tag_299\n        /* \"contracts/BlastFurnace.sol\":8408:8418  marketOres */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":8372:8403  amount.mul(claimedOres[holder]) */\n      tag_300\n        /* \"contracts/BlastFurnace.sol\":8383:8394  claimedOres */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":8383:8402  claimedOres[holder] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8395:8401  holder */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":8383:8402  claimedOres[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":8372:8378  amount */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":8372:8382  amount.mul */\n      tag_168\n      swap1\n        /* \"contracts/BlastFurnace.sol\":8372:8403  amount.mul(claimedOres[holder]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"contracts/BlastFurnace.sol\":8372:8407  amount.mul(claimedOres[holder]).div */\n      tag_170\n      swap1\n        /* \"contracts/BlastFurnace.sol\":8372:8419  amount.mul(claimedOres[holder]).div(marketOres) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/BlastFurnace.sol\":8366:8419  cut = amount.mul(claimedOres[holder]).div(marketOres) */\n      swap2\n      pop\n        /* \"contracts/BlastFurnace.sol\":8437:8438  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":8431:8434  cut */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":8431:8438  cut > 0 */\n      gt\n        /* \"contracts/BlastFurnace.sol\":8427:8482  if (cut > 0) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":8447:8475  _transferNative(holder, cut) */\n      tag_302\n        /* \"contracts/BlastFurnace.sol\":8463:8469  holder */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":8471:8474  cut */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":8447:8462  _transferNative */\n      tag_303\n        /* \"contracts/BlastFurnace.sol\":8447:8475  _transferNative(holder, cut) */\n      jump\t// in\n    tag_302:\n      pop\n        /* \"contracts/BlastFurnace.sol\":8427:8482  if (cut > 0) {... */\n    tag_301:\n        /* \"contracts/BlastFurnace.sol\":8329:8332  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":8291:8487  for (uint i = 0; i < _holders.length; i++) {... */\n      jump(tag_293)\n    tag_294:\n      pop\n        /* \"contracts/BlastFurnace.sol\":8208:8491  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":8156:8491  function _distributeNative(uint256 amount) internal {... */\n    tag_291:\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":7096:7444  function _rewardReferral(address ref, uint256 ores) private {... */\n    tag_280:\n        /* \"contracts/BlastFurnace.sol\":7161:7175  uint256 ingots */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7178:7192  _ingotBalances */\n      0x0f\n        /* \"contracts/BlastFurnace.sol\":7178:7197  _ingotBalances[ref] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7193:7196  ref */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":7178:7197  _ingotBalances[ref] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":7161:7197  uint256 ingots = _ingotBalances[ref] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7202:7217  uint256 ingotPM */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7221:7276  ingots.mul(INGOT_REWARD_MULTIPLIER).div(INGOT_FRAGMENT) */\n      tag_305\n        /* \"contracts/BlastFurnace.sol\":2166:2169  200 */\n      0xc8\n        /* \"contracts/BlastFurnace.sol\":7221:7256  ingots.mul(INGOT_REWARD_MULTIPLIER) */\n      tag_306\n        /* \"contracts/BlastFurnace.sol\":2224:2226  16 */\n      0x10\n        /* \"contracts/BlastFurnace.sol\":7221:7227  ingots */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":7221:7231  ingots.mul */\n      tag_168\n      swap1\n        /* \"contracts/BlastFurnace.sol\":7221:7256  ingots.mul(INGOT_REWARD_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_306:\n        /* \"contracts/BlastFurnace.sol\":7221:7260  ingots.mul(INGOT_REWARD_MULTIPLIER).div */\n      tag_170\n      swap1\n        /* \"contracts/BlastFurnace.sol\":7221:7276  ingots.mul(INGOT_REWARD_MULTIPLIER).div(INGOT_FRAGMENT) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"contracts/BlastFurnace.sol\":7202:7277  uint256 ingotPM = (ingots.mul(INGOT_REWARD_MULTIPLIER).div(INGOT_FRAGMENT)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7282:7302  uint256 rewardIncByT */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7323:7330  ingotPM */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":2283:2289  12_500 */\n      0x30d4\n        /* \"contracts/BlastFurnace.sol\":7305:7330  REFERRAL_REWARD + ingotPM */\n      tag_307\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_307:\n        /* \"contracts/BlastFurnace.sol\":7282:7330  uint256 rewardIncByT = REFERRAL_REWARD + ingotPM */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7337:7357  uint256 referralOres */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":7360:7404  SafeMath.mul(ores, rewardIncByT).div(100000) */\n      tag_308\n        /* \"contracts/BlastFurnace.sol\":7397:7403  100000 */\n      0x0186a0\n        /* \"contracts/BlastFurnace.sol\":7360:7392  SafeMath.mul(ores, rewardIncByT) */\n      tag_309\n        /* \"contracts/BlastFurnace.sol\":7373:7377  ores */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":7379:7391  rewardIncByT */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":7360:7372  SafeMath.mul */\n      tag_168\n        /* \"contracts/BlastFurnace.sol\":7360:7392  SafeMath.mul(ores, rewardIncByT) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/BlastFurnace.sol\":7360:7396  SafeMath.mul(ores, rewardIncByT).div */\n      tag_170\n      swap1\n        /* \"contracts/BlastFurnace.sol\":7360:7404  SafeMath.mul(ores, rewardIncByT).div(100000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_308:\n        /* \"contracts/BlastFurnace.sol\":7337:7404  uint256 referralOres = SafeMath.mul(ores, rewardIncByT).div(100000) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":7409:7439  _addClaimed(ref, referralOres) */\n      tag_310\n        /* \"contracts/BlastFurnace.sol\":7421:7424  ref */\n      dup7\n        /* \"contracts/BlastFurnace.sol\":7426:7438  referralOres */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":7409:7420  _addClaimed */\n      tag_194\n        /* \"contracts/BlastFurnace.sol\":7409:7439  _addClaimed(ref, referralOres) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/BlastFurnace.sol\":7156:7444  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":7096:7444  function _rewardReferral(address ref, uint256 ores) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NativeTransferable.sol\":102:260  function _transferNative(address to, uint256 amount) internal returns (bool) {... */\n    tag_303:\n        /* \"contracts/NativeTransferable.sol\":173:177  bool */\n      0x00\n        /* \"contracts/NativeTransferable.sol\":196:198  to */\n      dup3\n        /* \"contracts/NativeTransferable.sol\":188:204  payable(to).send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NativeTransferable.sol\":188:212  payable(to).send(amount) */\n      0x08fc\n        /* \"contracts/NativeTransferable.sol\":205:211  amount */\n      dup4\n        /* \"contracts/NativeTransferable.sol\":188:212  payable(to).send(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NativeTransferable.sol\":184:237  if (payable(to).send(amount)) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"contracts/NativeTransferable.sol\":227:231  true */\n      0x01\n        /* \"contracts/NativeTransferable.sol\":220:231  return true */\n      swap1\n      pop\n      jump(tag_311)\n        /* \"contracts/NativeTransferable.sol\":184:237  if (payable(to).send(amount)) {... */\n    tag_313:\n        /* \"contracts/NativeTransferable.sol\":250:255  false */\n      0x00\n        /* \"contracts/NativeTransferable.sol\":243:255  return false */\n      swap1\n      pop\n        /* \"contracts/NativeTransferable.sol\":102:260  function _transferNative(address to, uint256 amount) internal returns (bool) {... */\n    tag_311:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_314:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_315:\n        /* \"#utility.yul\":177:201   */\n      tag_339\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_314\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_31:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_341\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_315\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_317:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_319:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_320:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_347\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_319\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_321:\n        /* \"#utility.yul\":1076:1100   */\n      tag_349\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_320\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_350:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_322:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_352\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_321\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_35:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_355\n      tag_317\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1352:1471   */\n    tag_354:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_356\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_322\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_323:\n        /* \"#utility.yul\":1684:1708   */\n      tag_358\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_314\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_359:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_324:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_361\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_323\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_46:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_364\n      tag_317\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1960:2079   */\n    tag_363:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_365\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_324\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2693   */\n    tag_57:\n        /* \"#utility.yul\":2287:2293   */\n      0x00\n        /* \"#utility.yul\":2295:2301   */\n      dup1\n        /* \"#utility.yul\":2344:2346   */\n      0x40\n        /* \"#utility.yul\":2332:2341   */\n      dup4\n        /* \"#utility.yul\":2323:2330   */\n      dup6\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_368\n      tag_317\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2312:2431   */\n    tag_367:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_369\n        /* \"#utility.yul\":2540:2547   */\n      dup6\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup7\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_324\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2485:2548   */\n      swap3\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2623:2676   */\n      tag_370\n        /* \"#utility.yul\":2668:2675   */\n      dup6\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup7\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_324\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2568:2686   */\n      pop\n        /* \"#utility.yul\":2219:2693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_325:\n        /* \"#utility.yul\":2786:2810   */\n      tag_372\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_320\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3155   */\n    tag_84:\n        /* \"#utility.yul\":2944:2948   */\n      0x00\n        /* \"#utility.yul\":2982:2984   */\n      0x40\n        /* \"#utility.yul\":2971:2980   */\n      dup3\n        /* \"#utility.yul\":2967:2985   */\n      add\n        /* \"#utility.yul\":2959:2985   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3066   */\n      tag_374\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3052:3061   */\n      dup4\n        /* \"#utility.yul\":3048:3065   */\n      add\n        /* \"#utility.yul\":3039:3045   */\n      dup6\n        /* \"#utility.yul\":2995:3066   */\n      tag_325\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3076:3148   */\n      tag_375\n        /* \"#utility.yul\":3144:3146   */\n      0x20\n        /* \"#utility.yul\":3133:3142   */\n      dup4\n        /* \"#utility.yul\":3129:3147   */\n      add\n        /* \"#utility.yul\":3120:3126   */\n      dup5\n        /* \"#utility.yul\":3076:3148   */\n      tag_315\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2823:3155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3383   */\n    tag_95:\n        /* \"#utility.yul\":3254:3258   */\n      0x00\n        /* \"#utility.yul\":3292:3294   */\n      0x20\n        /* \"#utility.yul\":3281:3290   */\n      dup3\n        /* \"#utility.yul\":3277:3295   */\n      add\n        /* \"#utility.yul\":3269:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3305:3376   */\n      tag_377\n        /* \"#utility.yul\":3373:3374   */\n      0x00\n        /* \"#utility.yul\":3362:3371   */\n      dup4\n        /* \"#utility.yul\":3358:3375   */\n      add\n        /* \"#utility.yul\":3349:3355   */\n      dup5\n        /* \"#utility.yul\":3305:3376   */\n      tag_325\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3161:3383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3389:3479   */\n    tag_326:\n        /* \"#utility.yul\":3423:3430   */\n      0x00\n        /* \"#utility.yul\":3466:3471   */\n      dup2\n        /* \"#utility.yul\":3459:3472   */\n      iszero\n        /* \"#utility.yul\":3452:3473   */\n      iszero\n        /* \"#utility.yul\":3441:3473   */\n      swap1\n      pop\n        /* \"#utility.yul\":3389:3479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3594   */\n    tag_327:\n        /* \"#utility.yul\":3566:3587   */\n      tag_380\n        /* \"#utility.yul\":3581:3586   */\n      dup2\n        /* \"#utility.yul\":3566:3587   */\n      tag_326\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3561:3564   */\n      dup3\n        /* \"#utility.yul\":3554:3588   */\n      mstore\n        /* \"#utility.yul\":3485:3594   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3600:3810   */\n    tag_100:\n        /* \"#utility.yul\":3687:3691   */\n      0x00\n        /* \"#utility.yul\":3725:3727   */\n      0x20\n        /* \"#utility.yul\":3714:3723   */\n      dup3\n        /* \"#utility.yul\":3710:3728   */\n      add\n        /* \"#utility.yul\":3702:3728   */\n      swap1\n      pop\n        /* \"#utility.yul\":3738:3803   */\n      tag_382\n        /* \"#utility.yul\":3800:3801   */\n      0x00\n        /* \"#utility.yul\":3789:3798   */\n      dup4\n        /* \"#utility.yul\":3785:3802   */\n      add\n        /* \"#utility.yul\":3776:3782   */\n      dup5\n        /* \"#utility.yul\":3738:3803   */\n      tag_327\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3600:3810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3816:3876   */\n    tag_328:\n        /* \"#utility.yul\":3844:3847   */\n      0x00\n        /* \"#utility.yul\":3865:3870   */\n      dup2\n        /* \"#utility.yul\":3858:3870   */\n      swap1\n      pop\n        /* \"#utility.yul\":3816:3876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3882:4024   */\n    tag_329:\n        /* \"#utility.yul\":3932:3941   */\n      0x00\n        /* \"#utility.yul\":3965:4018   */\n      tag_385\n        /* \"#utility.yul\":3983:4017   */\n      tag_386\n        /* \"#utility.yul\":3992:4016   */\n      tag_387\n        /* \"#utility.yul\":4010:4015   */\n      dup5\n        /* \"#utility.yul\":3992:4016   */\n      tag_319\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3983:4017   */\n      tag_328\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3965:4018   */\n      tag_319\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3952:4018   */\n      swap1\n      pop\n        /* \"#utility.yul\":3882:4024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4156   */\n    tag_330:\n        /* \"#utility.yul\":4080:4089   */\n      0x00\n        /* \"#utility.yul\":4113:4150   */\n      tag_389\n        /* \"#utility.yul\":4144:4149   */\n      dup3\n        /* \"#utility.yul\":4113:4150   */\n      tag_329\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4100:4150   */\n      swap1\n      pop\n        /* \"#utility.yul\":4030:4156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4162:4301   */\n    tag_331:\n        /* \"#utility.yul\":4225:4234   */\n      0x00\n        /* \"#utility.yul\":4258:4295   */\n      tag_391\n        /* \"#utility.yul\":4289:4294   */\n      dup3\n        /* \"#utility.yul\":4258:4295   */\n      tag_330\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4245:4295   */\n      swap1\n      pop\n        /* \"#utility.yul\":4162:4301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4464   */\n    tag_332:\n        /* \"#utility.yul\":4407:4457   */\n      tag_393\n        /* \"#utility.yul\":4451:4456   */\n      dup2\n        /* \"#utility.yul\":4407:4457   */\n      tag_331\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4402:4405   */\n      dup3\n        /* \"#utility.yul\":4395:4458   */\n      mstore\n        /* \"#utility.yul\":4307:4464   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4470:4718   */\n    tag_105:\n        /* \"#utility.yul\":4576:4580   */\n      0x00\n        /* \"#utility.yul\":4614:4616   */\n      0x20\n        /* \"#utility.yul\":4603:4612   */\n      dup3\n        /* \"#utility.yul\":4599:4617   */\n      add\n        /* \"#utility.yul\":4591:4617   */\n      swap1\n      pop\n        /* \"#utility.yul\":4627:4711   */\n      tag_395\n        /* \"#utility.yul\":4708:4709   */\n      0x00\n        /* \"#utility.yul\":4697:4706   */\n      dup4\n        /* \"#utility.yul\":4693:4710   */\n      add\n        /* \"#utility.yul\":4684:4690   */\n      dup5\n        /* \"#utility.yul\":4627:4711   */\n      tag_332\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4470:4718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4724:4904   */\n    tag_333:\n        /* \"#utility.yul\":4772:4849   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4769:4770   */\n      0x00\n        /* \"#utility.yul\":4762:4850   */\n      mstore\n        /* \"#utility.yul\":4869:4873   */\n      0x11\n        /* \"#utility.yul\":4866:4867   */\n      0x04\n        /* \"#utility.yul\":4859:4874   */\n      mstore\n        /* \"#utility.yul\":4893:4897   */\n      0x24\n        /* \"#utility.yul\":4890:4891   */\n      0x00\n        /* \"#utility.yul\":4883:4898   */\n      revert\n        /* \"#utility.yul\":4910:5101   */\n    tag_133:\n        /* \"#utility.yul\":4950:4953   */\n      0x00\n        /* \"#utility.yul\":4969:4989   */\n      tag_398\n        /* \"#utility.yul\":4987:4988   */\n      dup3\n        /* \"#utility.yul\":4969:4989   */\n      tag_314\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4964:4989   */\n      swap2\n      pop\n        /* \"#utility.yul\":5003:5023   */\n      tag_399\n        /* \"#utility.yul\":5021:5022   */\n      dup4\n        /* \"#utility.yul\":5003:5023   */\n      tag_314\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4998:5023   */\n      swap3\n      pop\n        /* \"#utility.yul\":5046:5047   */\n      dup3\n        /* \"#utility.yul\":5043:5044   */\n      dup3\n        /* \"#utility.yul\":5039:5048   */\n      add\n        /* \"#utility.yul\":5032:5048   */\n      swap1\n      pop\n        /* \"#utility.yul\":5067:5070   */\n      dup1\n        /* \"#utility.yul\":5064:5065   */\n      dup3\n        /* \"#utility.yul\":5061:5071   */\n      gt\n        /* \"#utility.yul\":5058:5094   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":5074:5092   */\n      tag_401\n      tag_333\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5058:5094   */\n    tag_400:\n        /* \"#utility.yul\":4910:5101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5107:5439   */\n    tag_136:\n        /* \"#utility.yul\":5228:5232   */\n      0x00\n        /* \"#utility.yul\":5266:5268   */\n      0x40\n        /* \"#utility.yul\":5255:5264   */\n      dup3\n        /* \"#utility.yul\":5251:5269   */\n      add\n        /* \"#utility.yul\":5243:5269   */\n      swap1\n      pop\n        /* \"#utility.yul\":5279:5350   */\n      tag_403\n        /* \"#utility.yul\":5347:5348   */\n      0x00\n        /* \"#utility.yul\":5336:5345   */\n      dup4\n        /* \"#utility.yul\":5332:5349   */\n      add\n        /* \"#utility.yul\":5323:5329   */\n      dup6\n        /* \"#utility.yul\":5279:5350   */\n      tag_325\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5360:5432   */\n      tag_404\n        /* \"#utility.yul\":5428:5430   */\n      0x20\n        /* \"#utility.yul\":5417:5426   */\n      dup4\n        /* \"#utility.yul\":5413:5431   */\n      add\n        /* \"#utility.yul\":5404:5410   */\n      dup5\n        /* \"#utility.yul\":5360:5432   */\n      tag_325\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5107:5439   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5445:5588   */\n    tag_334:\n        /* \"#utility.yul\":5502:5507   */\n      0x00\n        /* \"#utility.yul\":5533:5539   */\n      dup2\n        /* \"#utility.yul\":5527:5540   */\n      mload\n        /* \"#utility.yul\":5518:5540   */\n      swap1\n      pop\n        /* \"#utility.yul\":5549:5582   */\n      tag_406\n        /* \"#utility.yul\":5576:5581   */\n      dup2\n        /* \"#utility.yul\":5549:5582   */\n      tag_323\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5445:5588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5594:5945   */\n    tag_140:\n        /* \"#utility.yul\":5664:5670   */\n      0x00\n        /* \"#utility.yul\":5713:5715   */\n      0x20\n        /* \"#utility.yul\":5701:5710   */\n      dup3\n        /* \"#utility.yul\":5692:5699   */\n      dup5\n        /* \"#utility.yul\":5688:5711   */\n      sub\n        /* \"#utility.yul\":5684:5716   */\n      slt\n        /* \"#utility.yul\":5681:5800   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":5719:5798   */\n      tag_409\n      tag_317\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5681:5800   */\n    tag_408:\n        /* \"#utility.yul\":5839:5840   */\n      0x00\n        /* \"#utility.yul\":5864:5928   */\n      tag_410\n        /* \"#utility.yul\":5920:5927   */\n      dup5\n        /* \"#utility.yul\":5911:5917   */\n      dup3\n        /* \"#utility.yul\":5900:5909   */\n      dup6\n        /* \"#utility.yul\":5896:5918   */\n      add\n        /* \"#utility.yul\":5864:5928   */\n      tag_334\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5854:5928   */\n      swap2\n      pop\n        /* \"#utility.yul\":5810:5938   */\n      pop\n        /* \"#utility.yul\":5594:5945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5951:6131   */\n    tag_177:\n        /* \"#utility.yul\":5999:6076   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5996:5997   */\n      0x00\n        /* \"#utility.yul\":5989:6077   */\n      mstore\n        /* \"#utility.yul\":6096:6100   */\n      0x32\n        /* \"#utility.yul\":6093:6094   */\n      0x04\n        /* \"#utility.yul\":6086:6101   */\n      mstore\n        /* \"#utility.yul\":6120:6124   */\n      0x24\n        /* \"#utility.yul\":6117:6118   */\n      0x00\n        /* \"#utility.yul\":6110:6125   */\n      revert\n        /* \"#utility.yul\":6137:6331   */\n    tag_249:\n        /* \"#utility.yul\":6177:6181   */\n      0x00\n        /* \"#utility.yul\":6197:6217   */\n      tag_413\n        /* \"#utility.yul\":6215:6216   */\n      dup3\n        /* \"#utility.yul\":6197:6217   */\n      tag_314\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6192:6217   */\n      swap2\n      pop\n        /* \"#utility.yul\":6231:6251   */\n      tag_414\n        /* \"#utility.yul\":6249:6250   */\n      dup4\n        /* \"#utility.yul\":6231:6251   */\n      tag_314\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6226:6251   */\n      swap3\n      pop\n        /* \"#utility.yul\":6275:6276   */\n      dup3\n        /* \"#utility.yul\":6272:6273   */\n      dup3\n        /* \"#utility.yul\":6268:6277   */\n      sub\n        /* \"#utility.yul\":6260:6277   */\n      swap1\n      pop\n        /* \"#utility.yul\":6299:6300   */\n      dup2\n        /* \"#utility.yul\":6293:6297   */\n      dup2\n        /* \"#utility.yul\":6290:6301   */\n      gt\n        /* \"#utility.yul\":6287:6324   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6304:6322   */\n      tag_416\n      tag_333\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6287:6324   */\n    tag_415:\n        /* \"#utility.yul\":6137:6331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6747   */\n    tag_255:\n        /* \"#utility.yul\":6377:6384   */\n      0x00\n        /* \"#utility.yul\":6400:6420   */\n      tag_418\n        /* \"#utility.yul\":6418:6419   */\n      dup3\n        /* \"#utility.yul\":6400:6420   */\n      tag_314\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6395:6420   */\n      swap2\n      pop\n        /* \"#utility.yul\":6434:6454   */\n      tag_419\n        /* \"#utility.yul\":6452:6453   */\n      dup4\n        /* \"#utility.yul\":6434:6454   */\n      tag_314\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6429:6454   */\n      swap3\n      pop\n        /* \"#utility.yul\":6489:6490   */\n      dup3\n        /* \"#utility.yul\":6486:6487   */\n      dup3\n        /* \"#utility.yul\":6482:6491   */\n      mul\n        /* \"#utility.yul\":6511:6541   */\n      tag_420\n        /* \"#utility.yul\":6529:6540   */\n      dup2\n        /* \"#utility.yul\":6511:6541   */\n      tag_314\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6500:6541   */\n      swap2\n      pop\n        /* \"#utility.yul\":6690:6691   */\n      dup3\n        /* \"#utility.yul\":6681:6688   */\n      dup3\n        /* \"#utility.yul\":6677:6692   */\n      div\n        /* \"#utility.yul\":6674:6675   */\n      dup5\n        /* \"#utility.yul\":6671:6693   */\n      eq\n        /* \"#utility.yul\":6651:6652   */\n      dup4\n        /* \"#utility.yul\":6644:6653   */\n      iszero\n        /* \"#utility.yul\":6624:6707   */\n      or\n        /* \"#utility.yul\":6601:6740   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_422\n      tag_333\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6601:6740   */\n    tag_421:\n        /* \"#utility.yul\":6385:6747   */\n      pop\n        /* \"#utility.yul\":6337:6747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6753:6933   */\n    tag_335:\n        /* \"#utility.yul\":6801:6878   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6798:6799   */\n      0x00\n        /* \"#utility.yul\":6791:6879   */\n      mstore\n        /* \"#utility.yul\":6898:6902   */\n      0x12\n        /* \"#utility.yul\":6895:6896   */\n      0x04\n        /* \"#utility.yul\":6888:6903   */\n      mstore\n        /* \"#utility.yul\":6922:6926   */\n      0x24\n        /* \"#utility.yul\":6919:6920   */\n      0x00\n        /* \"#utility.yul\":6912:6927   */\n      revert\n        /* \"#utility.yul\":6939:7124   */\n    tag_258:\n        /* \"#utility.yul\":6979:6980   */\n      0x00\n        /* \"#utility.yul\":6996:7016   */\n      tag_425\n        /* \"#utility.yul\":7014:7015   */\n      dup3\n        /* \"#utility.yul\":6996:7016   */\n      tag_314\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6991:7016   */\n      swap2\n      pop\n        /* \"#utility.yul\":7030:7050   */\n      tag_426\n        /* \"#utility.yul\":7048:7049   */\n      dup4\n        /* \"#utility.yul\":7030:7050   */\n      tag_314\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7025:7050   */\n      swap3\n      pop\n        /* \"#utility.yul\":7069:7070   */\n      dup3\n        /* \"#utility.yul\":7059:7094   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":7074:7092   */\n      tag_428\n      tag_335\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7059:7094   */\n    tag_427:\n        /* \"#utility.yul\":7116:7117   */\n      dup3\n        /* \"#utility.yul\":7113:7114   */\n      dup3\n        /* \"#utility.yul\":7109:7118   */\n      div\n        /* \"#utility.yul\":7104:7118   */\n      swap1\n      pop\n        /* \"#utility.yul\":6939:7124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122034e5785d2987a69127c9ff5249c806525da534562fb0b708e54e10f1f59195c164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526201518060035562107ac060055561271060065561138860075560036008555f60095f6101000a81548160ff021916908315150217905550348015610047575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600960016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611cbb806100d55f395ff3fe608060405260043610610134575f3560e01c80636dc39ec8116100aa57806397d757761161006e57806397d7577614610413578063e39316071461043d578063eaca243b14610453578063f2e809e01461047b578063f2fde38b146104a3578063f36f7c62146104cb57610134565b80636dc39ec814610350578063715018a61461038d57806388bedf91146103a35780638da5cb5b146103bf5780638f32d59b146103e957610134565b8063450c9d7d116100fc578063450c9d7d146101fa5780634ad47291146102365780634addc0e8146102725780634b634b061461029c57806351546044146102d85780636bd229621461031457610134565b806312065fe014610138578063224e80fc1461016257806323084e5f1461019e5780633c5f07cb146101b457806344bb9117146101be575b5f80fd5b348015610143575f80fd5b5061014c610507565b6040516101599190611896565b60405180910390f35b34801561016d575f80fd5b506101886004803603810190610183919061190d565b61050e565b6040516101959190611896565b60405180910390f35b3480156101a9575f80fd5b506101b2610565565b005b6101bc6106d7565b005b3480156101c9575f80fd5b506101e460048036038101906101df9190611962565b61071c565b6040516101f19190611896565b60405180910390f35b348015610205575f80fd5b50610220600480360381019061021b919061190d565b610731565b60405161022d9190611896565b60405180910390f35b348015610241575f80fd5b5061025c6004803603810190610257919061198d565b610754565b6040516102699190611896565b60405180910390f35b34801561027d575f80fd5b5061028661076a565b6040516102939190611896565b60405180910390f35b3480156102a7575f80fd5b506102c260048036038101906102bd919061190d565b610770565b6040516102cf9190611896565b60405180910390f35b3480156102e3575f80fd5b506102fe60048036038101906102f99190611962565b6107b6565b60405161030b9190611896565b60405180910390f35b34801561031f575f80fd5b5061033a6004803603810190610335919061190d565b6107c8565b6040516103479190611896565b60405180910390f35b34801561035b575f80fd5b5061037660048036038101906103719190611962565b610901565b6040516103849291906119da565b60405180910390f35b348015610398575f80fd5b506103a16109a8565b005b6103bd60048036038101906103b8919061190d565b610a5b565b005b3480156103ca575f80fd5b506103d3610b42565b6040516103e09190611a01565b60405180910390f35b3480156103f4575f80fd5b506103fd610b69565b60405161040a9190611a34565b60405180910390f35b34801561041e575f80fd5b50610427610bbe565b6040516104349190611aa8565b60405180910390f35b348015610448575f80fd5b50610451610be3565b005b34801561045e575f80fd5b5061047960048036038101906104749190611962565b610d34565b005b348015610486575f80fd5b506104a1600480360381019061049c919061190d565b610d4e565b005b3480156104ae575f80fd5b506104c960048036038101906104c4919061190d565b610e68565b005b3480156104d6575f80fd5b506104f160048036038101906104ec919061190d565b610e84565b6040516104fe9190611896565b60405180910390f35b5f47905090565b5f61055e600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610559846107c8565b610eca565b9050919050565b5f3390505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905042600354826105b99190611aee565b10156105c65750506106d5565b4260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663954fa5ee30856040518363ffffffff1660e01b8152600401610665929190611b21565b6020604051808303815f875af1158015610681573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a59190611b5c565b90505f8111156106d1578060045f8282546106c09190611aee565b925050819055506106d081610edf565b5b5050505b565b6106df610b69565b6106e7575f80fd5b5f600e54146106f4575f80fd5b600160095f6101000a81548160ff0219169083151502179055506419254d3800600e81905550565b5f61072a82600e5447610eeb565b9050919050565b5f8061073c8361050e565b90505f6107488261071c565b90508092505050919050565b5f6107628383600e54610eeb565b905092915050565b60035481565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6107c18247610754565b9050919050565b5f8061081c60055461081742600c5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f3d565b610f52565b90505f600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f610899610878606460c8610f6a90919063ffffffff16565b61088b8486610f6a90919063ffffffff16565b610f7f90919063ffffffff16565b90506108ae8184610eca90919063ffffffff16565b92506108f783600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f6a565b9350505050919050565b5f80601280549050831061091a575f80915091506109a3565b5f6012848154811061092f5761092e611b87565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081819350935050505b915091565b6109b0610b69565b6109b8575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60095f9054906101000a900460ff16610a72575f80fd5b5f610a8634610a814734610f3d565b610754565b9050610a9a81610a9583610f94565b610f3d565b90505f610aa634610f94565b9050600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610b0d573d5f803e3d5ffd5b50610b183383610fb2565b610b22833461100f565b670de0b6b3a76400003410610b3d57610b3c3360c86113af565b5b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900460ff16610bfa575f80fd5b5f610c043361050e565b90505f610c108261071c565b90505f610c1c82610f94565b9050610c28335f611459565b42600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c76600e5484610eca565b600e81905550600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610ce1573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc610d068484610f3d565b90811502906040515f60405180830381858888f19350505050158015610d2e573d5f803e3d5ffd5b50505050565b610d3c610b69565b610d44575f80fd5b8060038190555050565b610d56610b69565b610d5e575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610da95773430000000000000000000000000000000000000290505b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610e4f575f80fd5b505af1158015610e61573d5f803e3d5ffd5b5050505050565b610e70610b69565b610e78575f80fd5b610e81816115aa565b50565b5f600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8183610ed79190611aee565b905092915050565b610ee88161169c565b50565b5f610f34610efb60065484610f6a565b610f2f600754610f2a610f24610f136006548a610f6a565b610f1f6007548c610f6a565b610eca565b89610f7f565b610eca565b610f7f565b90509392505050565b5f8183610f4a9190611bb4565b905092915050565b5f818310610f605781610f62565b825b905092915050565b5f8183610f779190611be7565b905092915050565b5f8183610f8c9190611c55565b905092915050565b5f610fab610fa483600854610f6a565b6064610f7f565b9050919050565b61100b8261100683600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610eca90919063ffffffff16565b611459565b5050565b60095f9054906101000a900460ff16611026575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105d575f91505b5f73ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561117c57503373ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156112385781600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000811061121b576112168260c86113af565b611237565b67016345785d8a00008110611236576112358260286113af565b5b5b5b5f6112423361050e565b90505f61125182600554610f7f565b905061129a600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205482610eca565b600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112e5335f611459565b42600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061138d600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611781565b6113a3600e5461139e846005610f7f565b610eca565b600e8190555050505050565b5f61140082600f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610eca90919063ffffffff16565b90506127108111156114125761271090505b80600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b6001151560115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615151461156457601082908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115e1575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f81111561177e575f805f5b60108054905081101561177a57601081815481106116c9576116c8611b87565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250611757600e54611749600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205487610f6a90919063ffffffff16565b610f7f90919063ffffffff16565b91505f82111561176d5761176b8383611831565b505b80806001019150506116a8565b5050505b50565b5f600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f6117ea60c86117dc601085610f6a90919063ffffffff16565b610f7f90919063ffffffff16565b90505f816130d46117fb9190611aee565b90505f61181d620186a061180f8785610f6a565b610f7f90919063ffffffff16565b90506118298682610fb2565b505050505050565b5f8273ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050156118745760019050611878565b5f90505b92915050565b5f819050919050565b6118908161187e565b82525050565b5f6020820190506118a95f830184611887565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118dc826118b3565b9050919050565b6118ec816118d2565b81146118f6575f80fd5b50565b5f81359050611907816118e3565b92915050565b5f60208284031215611922576119216118af565b5b5f61192f848285016118f9565b91505092915050565b6119418161187e565b811461194b575f80fd5b50565b5f8135905061195c81611938565b92915050565b5f60208284031215611977576119766118af565b5b5f6119848482850161194e565b91505092915050565b5f80604083850312156119a3576119a26118af565b5b5f6119b08582860161194e565b92505060206119c18582860161194e565b9150509250929050565b6119d4816118d2565b82525050565b5f6040820190506119ed5f8301856119cb565b6119fa6020830184611887565b9392505050565b5f602082019050611a145f8301846119cb565b92915050565b5f8115159050919050565b611a2e81611a1a565b82525050565b5f602082019050611a475f830184611a25565b92915050565b5f819050919050565b5f611a70611a6b611a66846118b3565b611a4d565b6118b3565b9050919050565b5f611a8182611a56565b9050919050565b5f611a9282611a77565b9050919050565b611aa281611a88565b82525050565b5f602082019050611abb5f830184611a99565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611af88261187e565b9150611b038361187e565b9250828201905080821115611b1b57611b1a611ac1565b5b92915050565b5f604082019050611b345f8301856119cb565b611b4160208301846119cb565b9392505050565b5f81519050611b5681611938565b92915050565b5f60208284031215611b7157611b706118af565b5b5f611b7e84828501611b48565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611bbe8261187e565b9150611bc98361187e565b9250828203905081811115611be157611be0611ac1565b5b92915050565b5f611bf18261187e565b9150611bfc8361187e565b9250828202611c0a8161187e565b91508282048414831517611c2157611c20611ac1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c5f8261187e565b9150611c6a8361187e565b925082611c7a57611c79611c28565b5b82820490509291505056fea264697066735822122034e5785d2987a69127c9ff5249c806525da534562fb0b708e54e10f1f59195c164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x3 SSTORE PUSH3 0x107AC0 PUSH1 0x5 SSTORE PUSH2 0x2710 PUSH1 0x6 SSTORE PUSH2 0x1388 PUSH1 0x7 SSTORE PUSH1 0x3 PUSH1 0x8 SSTORE PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1CBB DUP1 PUSH2 0xD5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DC39EC8 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0x97D75776 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x97D75776 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xE3931607 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xEACA243B EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xF2E809E0 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xF36F7C62 EQ PUSH2 0x4CB JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6DC39EC8 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x88BEDF91 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x3E9 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x450C9D7D GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x450C9D7D EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x4AD47291 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x4ADDC0E8 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x4B634B06 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x51546044 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x6BD22962 EQ PUSH2 0x314 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x224E80FC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23084E5F EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x44BB9117 EQ PUSH2 0x1BE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x9A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0xBE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x55E PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x559 DUP5 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP TIMESTAMP PUSH1 0x3 SLOAD DUP3 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST LT ISZERO PUSH2 0x5C6 JUMPI POP POP PUSH2 0x6D5 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x954FA5EE ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP3 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x6D1 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6D0 DUP2 PUSH2 0xEDF JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x6DF PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x6E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD EQ PUSH2 0x6F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH5 0x19254D3800 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x72A DUP3 PUSH1 0xE SLOAD SELFBALANCE PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x73C DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x748 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x762 DUP4 DUP4 PUSH1 0xE SLOAD PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C1 DUP3 SELFBALANCE PUSH2 0x754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x81C PUSH1 0x5 SLOAD PUSH2 0x817 TIMESTAMP PUSH1 0xC PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF3D JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x899 PUSH2 0x878 PUSH1 0x64 PUSH1 0xC8 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x88B DUP5 DUP7 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8AE DUP2 DUP5 PUSH2 0xECA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x8F7 DUP4 PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF6A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x91A JUMPI PUSH0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x9A3 JUMP JUMPDEST PUSH0 PUSH1 0x12 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x92F JUMPI PUSH2 0x92E PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x9B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA72 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xA86 CALLVALUE PUSH2 0xA81 SELFBALANCE CALLVALUE PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9A DUP2 PUSH2 0xA95 DUP4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAA6 CALLVALUE PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB0D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xB18 CALLER DUP4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xB22 DUP4 CALLVALUE PUSH2 0x100F JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT PUSH2 0xB3D JUMPI PUSH2 0xB3C CALLER PUSH1 0xC8 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBFA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xC04 CALLER PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC10 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC1C DUP3 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP PUSH2 0xC28 CALLER PUSH0 PUSH2 0x1459 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC76 PUSH1 0xE SLOAD DUP5 PUSH2 0xECA JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0xD06 DUP5 DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD3C PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xD44 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD56 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xD5E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA9 JUMPI PUSH20 0x4300000000000000000000000000000000000002 SWAP1 POP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E606C47 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE61 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE70 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xE78 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE81 DUP2 PUSH2 0x15AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE8 DUP2 PUSH2 0x169C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xF34 PUSH2 0xEFB PUSH1 0x6 SLOAD DUP5 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xF2F PUSH1 0x7 SLOAD PUSH2 0xF2A PUSH2 0xF24 PUSH2 0xF13 PUSH1 0x6 SLOAD DUP11 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xF1F PUSH1 0x7 SLOAD DUP13 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST DUP10 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xF60 JUMPI DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFAB PUSH2 0xFA4 DUP4 PUSH1 0x8 SLOAD PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x64 PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100B DUP3 PUSH2 0x1006 DUP4 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xECA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1459 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1026 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105D JUMPI PUSH0 SWAP2 POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x117C JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1238 JUMPI DUP2 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x121B JUMPI PUSH2 0x1216 DUP3 PUSH1 0xC8 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 LT PUSH2 0x1236 JUMPI PUSH2 0x1235 DUP3 PUSH1 0x28 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH2 0x1242 CALLER PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1251 DUP3 PUSH1 0x5 SLOAD PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP PUSH2 0x129A PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12E5 CALLER PUSH0 PUSH2 0x1459 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x138D PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x13A3 PUSH1 0xE SLOAD PUSH2 0x139E DUP5 PUSH1 0x5 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1400 DUP3 PUSH1 0xF PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xECA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1412 JUMPI PUSH2 0x2710 SWAP1 POP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1564 JUMPI PUSH1 0x10 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x177E JUMPI PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x10 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x177A JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x1757 PUSH1 0xE SLOAD PUSH2 0x1749 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP8 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 GT ISZERO PUSH2 0x176D JUMPI PUSH2 0x176B DUP4 DUP4 PUSH2 0x1831 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16A8 JUMP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x17EA PUSH1 0xC8 PUSH2 0x17DC PUSH1 0x10 DUP6 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x30D4 PUSH2 0x17FB SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x181D PUSH3 0x186A0 PUSH2 0x180F DUP8 DUP6 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1829 DUP7 DUP3 PUSH2 0xFB2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x1874 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1878 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1890 DUP2 PUSH2 0x187E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DC DUP3 PUSH2 0x18B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EC DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x18F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1907 DUP2 PUSH2 0x18E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x192F DUP5 DUP3 DUP6 ADD PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1941 DUP2 PUSH2 0x187E JUMP JUMPDEST DUP2 EQ PUSH2 0x194B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195C DUP2 PUSH2 0x1938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1977 JUMPI PUSH2 0x1976 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1984 DUP5 DUP3 DUP6 ADD PUSH2 0x194E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x19A2 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B0 DUP6 DUP3 DUP7 ADD PUSH2 0x194E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C1 DUP6 DUP3 DUP7 ADD PUSH2 0x194E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D4 DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19ED PUSH0 DUP4 ADD DUP6 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x19FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A14 PUSH0 DUP4 ADD DUP5 PUSH2 0x19CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A47 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A70 PUSH2 0x1A6B PUSH2 0x1A66 DUP5 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x18B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A81 DUP3 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A92 DUP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH0 DUP4 ADD DUP5 PUSH2 0x1A99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF8 DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B03 DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B1B JUMPI PUSH2 0x1B1A PUSH2 0x1AC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B34 PUSH0 DUP4 ADD DUP6 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x1B41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B56 DUP2 PUSH2 0x1938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B71 JUMPI PUSH2 0x1B70 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B7E DUP5 DUP3 DUP6 ADD PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BBE DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC9 DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BE1 JUMPI PUSH2 0x1BE0 PUSH2 0x1AC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF1 DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFC DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C0A DUP2 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C21 JUMPI PUSH2 0x1C20 PUSH2 0x1AC1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5F DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6A DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0x1C28 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xE5 PUSH25 0x5D2987A69127C9FF5249C806525DA534562FB0B708E54E10F1 CREATE2 SWAP2 SWAP6 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1772:6722:1:-:0;;;410:6:0;373:43;;1908:7:1;1868:47;;2338:5;2316:27;;2370:4;2347:27;;2406:1;2378:29;;2438:5;2411:32;;;;;;;;;;;;;;;;;;;;2890:52;;;;;;;;;;288:10:3;279:6;;:19;;;;;;;;;;;;;;;;;;2926:10:1;2909:6;;:28;;;;;;;;;;;;;;;;;;1772:6722;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BLAST_20": {
									"entryPoint": 3006,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addClaimed_927": {
									"entryPoint": 4018,
									"id": 927,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_addIngots_812": {
									"entryPoint": 5039,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_blastClaimInterval_27": {
									"entryPoint": 1898,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeNative_1019": {
									"entryPoint": 5788,
									"id": 1019,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_hatchOres_370": {
									"entryPoint": 4111,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_rewardReferral_859": {
									"entryPoint": 6017,
									"id": 859,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setClaimed_960": {
									"entryPoint": 5209,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferNative_1045": {
									"entryPoint": 6193,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_1156": {
									"entryPoint": 5546,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1332": {
									"entryPoint": 3786,
									"id": 1332,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@blastFeesClaimed_909": {
									"entryPoint": 3807,
									"id": 909,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyOres_534": {
									"entryPoint": 2651,
									"id": 534,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateOreBuySimple_627": {
									"entryPoint": 1974,
									"id": 627,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateOreBuy_610": {
									"entryPoint": 1876,
									"id": 610,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateOreSell_594": {
									"entryPoint": 1820,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTrade_576": {
									"entryPoint": 3819,
									"id": 576,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@claimMyGasFees_84": {
									"entryPoint": 1381,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@devFee_645": {
									"entryPoint": 3988,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_1377": {
									"entryPoint": 3967,
									"id": 1377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@furnaceRewards_460": {
									"entryPoint": 1841,
									"id": 460,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAirdropQualifier_898": {
									"entryPoint": 2305,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getBalance_677": {
									"entryPoint": 1287,
									"id": 677,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyMiners_689": {
									"entryPoint": 1904,
									"id": 689,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyOres_707": {
									"entryPoint": 1294,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOresSinceLastHatch_763": {
									"entryPoint": 1992,
									"id": 763,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ingotBalanceOf_236": {
									"entryPoint": 3716,
									"id": 236,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOwner_1103": {
									"entryPoint": 2921,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_780": {
									"entryPoint": 3922,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1362": {
									"entryPoint": 3946,
									"id": 1362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_1083": {
									"entryPoint": 2882,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1120": {
									"entryPoint": 2472,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@seedMarket_665": {
									"entryPoint": 1751,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellOres_438": {
									"entryPoint": 3043,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlastClaimInterval_127": {
									"entryPoint": 3380,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setupBlast_115": {
									"entryPoint": 3406,
									"id": 115,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1347": {
									"entryPoint": 3901,
									"id": 1347,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_1132": {
									"entryPoint": 3688,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBlast_$15__to_t_address__fromStack_reversed": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBlast_$15_to_t_address": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7127:5",
										"nodeType": "YulBlock",
										"src": "0:7127:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:5",
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nativeSrc": "62:16:5",
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:5",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nativeSrc": "155:53:5",
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nativeSrc": "177:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nativeSrc": "165:37:5",
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nativeSrc": "165:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:5",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:5",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nativeSrc": "312:124:5",
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nativeSrc": "322:26:5",
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:5",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nativeSrc": "330:18:5",
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:5",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nativeSrc": "411:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nativeSrc": "358:71:5",
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nativeSrc": "358:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:5",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:5",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:5",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nativeSrc": "482:35:5",
													"nodeType": "YulBlock",
													"src": "482:35:5",
													"statements": [
														{
															"nativeSrc": "492:19:5",
															"nodeType": "YulAssignment",
															"src": "492:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:5",
																		"nodeType": "YulLiteral",
																		"src": "508:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:5"
																},
																"nativeSrc": "502:9:5",
																"nodeType": "YulFunctionCall",
																"src": "502:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:5",
														"nodeType": "YulTypedName",
														"src": "475:6:5",
														"type": ""
													}
												],
												"src": "442:75:5"
											},
											{
												"body": {
													"nativeSrc": "612:28:5",
													"nodeType": "YulBlock",
													"src": "612:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:5",
																		"nodeType": "YulLiteral",
																		"src": "629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:5",
																		"nodeType": "YulLiteral",
																		"src": "632:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:5"
																},
																"nativeSrc": "622:12:5",
																"nodeType": "YulFunctionCall",
																"src": "622:12:5"
															},
															"nativeSrc": "622:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:5"
											},
											{
												"body": {
													"nativeSrc": "735:28:5",
													"nodeType": "YulBlock",
													"src": "735:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:5",
																		"nodeType": "YulLiteral",
																		"src": "752:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:5",
																		"nodeType": "YulLiteral",
																		"src": "755:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:5"
																},
																"nativeSrc": "745:12:5",
																"nodeType": "YulFunctionCall",
																"src": "745:12:5"
															},
															"nativeSrc": "745:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:5"
											},
											{
												"body": {
													"nativeSrc": "814:81:5",
													"nodeType": "YulBlock",
													"src": "814:81:5",
													"statements": [
														{
															"nativeSrc": "824:65:5",
															"nodeType": "YulAssignment",
															"src": "824:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:5",
																		"nodeType": "YulLiteral",
																		"src": "846:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:5"
																},
																"nativeSrc": "835:54:5",
																"nodeType": "YulFunctionCall",
																"src": "835:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:5",
														"nodeType": "YulTypedName",
														"src": "796:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:5",
														"nodeType": "YulTypedName",
														"src": "806:7:5",
														"type": ""
													}
												],
												"src": "769:126:5"
											},
											{
												"body": {
													"nativeSrc": "946:51:5",
													"nodeType": "YulBlock",
													"src": "946:51:5",
													"statements": [
														{
															"nativeSrc": "956:35:5",
															"nodeType": "YulAssignment",
															"src": "956:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:5"
																},
																"nativeSrc": "967:24:5",
																"nodeType": "YulFunctionCall",
																"src": "967:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:5",
														"nodeType": "YulTypedName",
														"src": "928:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:5",
														"nodeType": "YulTypedName",
														"src": "938:7:5",
														"type": ""
													}
												],
												"src": "901:96:5"
											},
											{
												"body": {
													"nativeSrc": "1046:79:5",
													"nodeType": "YulBlock",
													"src": "1046:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:5",
																"nodeType": "YulBlock",
																"src": "1103:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:5"
																			},
																			"nativeSrc": "1105:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:5"
																		},
																		"nativeSrc": "1105:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:5"
																				},
																				"nativeSrc": "1076:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:5"
																		},
																		"nativeSrc": "1066:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:5"
																},
																"nativeSrc": "1059:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:5"
															},
															"nativeSrc": "1056:63:5",
															"nodeType": "YulIf",
															"src": "1056:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:5",
														"nodeType": "YulTypedName",
														"src": "1039:5:5",
														"type": ""
													}
												],
												"src": "1003:122:5"
											},
											{
												"body": {
													"nativeSrc": "1183:87:5",
													"nodeType": "YulBlock",
													"src": "1183:87:5",
													"statements": [
														{
															"nativeSrc": "1193:29:5",
															"nodeType": "YulAssignment",
															"src": "1193:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:5"
																},
																"nativeSrc": "1202:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:5"
																},
																"nativeSrc": "1231:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:5"
															},
															"nativeSrc": "1231:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:5",
														"nodeType": "YulTypedName",
														"src": "1161:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:5",
														"nodeType": "YulTypedName",
														"src": "1169:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:5",
														"nodeType": "YulTypedName",
														"src": "1177:5:5",
														"type": ""
													}
												],
												"src": "1131:139:5"
											},
											{
												"body": {
													"nativeSrc": "1342:263:5",
													"nodeType": "YulBlock",
													"src": "1342:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:5",
																"nodeType": "YulBlock",
																"src": "1388:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:5"
																			},
																			"nativeSrc": "1390:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:5"
																		},
																		"nativeSrc": "1390:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:5"
																		},
																		"nativeSrc": "1359:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:5"
																},
																"nativeSrc": "1355:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:5"
															},
															"nativeSrc": "1352:119:5",
															"nodeType": "YulIf",
															"src": "1352:119:5"
														},
														{
															"nativeSrc": "1481:117:5",
															"nodeType": "YulBlock",
															"src": "1481:117:5",
															"statements": [
																{
																	"nativeSrc": "1496:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:5"
																				},
																				"nativeSrc": "1556:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:5"
																		},
																		"nativeSrc": "1535:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:5",
														"nodeType": "YulTypedName",
														"src": "1312:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:5",
														"nodeType": "YulTypedName",
														"src": "1323:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:5",
														"nodeType": "YulTypedName",
														"src": "1335:6:5",
														"type": ""
													}
												],
												"src": "1276:329:5"
											},
											{
												"body": {
													"nativeSrc": "1654:79:5",
													"nodeType": "YulBlock",
													"src": "1654:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:5",
																"nodeType": "YulBlock",
																"src": "1711:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:5"
																		},
																		"nativeSrc": "1713:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:5"
																				},
																				"nativeSrc": "1684:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:5"
																		},
																		"nativeSrc": "1674:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:5"
																},
																"nativeSrc": "1667:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:5"
															},
															"nativeSrc": "1664:63:5",
															"nodeType": "YulIf",
															"src": "1664:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:5",
														"nodeType": "YulTypedName",
														"src": "1647:5:5",
														"type": ""
													}
												],
												"src": "1611:122:5"
											},
											{
												"body": {
													"nativeSrc": "1791:87:5",
													"nodeType": "YulBlock",
													"src": "1791:87:5",
													"statements": [
														{
															"nativeSrc": "1801:29:5",
															"nodeType": "YulAssignment",
															"src": "1801:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:5"
																},
																"nativeSrc": "1810:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:5"
																},
																"nativeSrc": "1839:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:5"
															},
															"nativeSrc": "1839:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:5",
														"nodeType": "YulTypedName",
														"src": "1777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:5",
														"nodeType": "YulTypedName",
														"src": "1785:5:5",
														"type": ""
													}
												],
												"src": "1739:139:5"
											},
											{
												"body": {
													"nativeSrc": "1950:263:5",
													"nodeType": "YulBlock",
													"src": "1950:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:5",
																"nodeType": "YulBlock",
																"src": "1996:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:5"
																			},
																			"nativeSrc": "1998:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:5"
																		},
																		"nativeSrc": "1998:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:5"
																		},
																		"nativeSrc": "1967:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:5"
																},
																"nativeSrc": "1963:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:5"
															},
															"nativeSrc": "1960:119:5",
															"nodeType": "YulIf",
															"src": "1960:119:5"
														},
														{
															"nativeSrc": "2089:117:5",
															"nodeType": "YulBlock",
															"src": "2089:117:5",
															"statements": [
																{
																	"nativeSrc": "2104:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:5"
																				},
																				"nativeSrc": "2164:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:5"
																		},
																		"nativeSrc": "2143:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:5",
														"nodeType": "YulTypedName",
														"src": "1920:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:5",
														"nodeType": "YulTypedName",
														"src": "1931:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:5",
														"nodeType": "YulTypedName",
														"src": "1943:6:5",
														"type": ""
													}
												],
												"src": "1884:329:5"
											},
											{
												"body": {
													"nativeSrc": "2302:391:5",
													"nodeType": "YulBlock",
													"src": "2302:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2348:83:5",
																"nodeType": "YulBlock",
																"src": "2348:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2350:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:5"
																			},
																			"nativeSrc": "2350:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:5"
																		},
																		"nativeSrc": "2350:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2323:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2319:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:5"
																		},
																		"nativeSrc": "2319:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:5"
																},
																"nativeSrc": "2315:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2315:32:5"
															},
															"nativeSrc": "2312:119:5",
															"nodeType": "YulIf",
															"src": "2312:119:5"
														},
														{
															"nativeSrc": "2441:117:5",
															"nodeType": "YulBlock",
															"src": "2441:117:5",
															"statements": [
																{
																	"nativeSrc": "2456:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2470:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2460:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2485:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2485:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2520:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2531:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2516:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:5"
																				},
																				"nativeSrc": "2516:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2540:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2495:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:5"
																		},
																		"nativeSrc": "2495:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2485:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2568:118:5",
															"nodeType": "YulBlock",
															"src": "2568:118:5",
															"statements": [
																{
																	"nativeSrc": "2583:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2583:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2597:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2587:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2587:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:5"
																				},
																				"nativeSrc": "2644:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2623:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:5"
																		},
																		"nativeSrc": "2623:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2613:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2219:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2264:9:5",
														"nodeType": "YulTypedName",
														"src": "2264:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2275:7:5",
														"nodeType": "YulTypedName",
														"src": "2275:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2287:6:5",
														"nodeType": "YulTypedName",
														"src": "2287:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2295:6:5",
														"nodeType": "YulTypedName",
														"src": "2295:6:5",
														"type": ""
													}
												],
												"src": "2219:474:5"
											},
											{
												"body": {
													"nativeSrc": "2764:53:5",
													"nodeType": "YulBlock",
													"src": "2764:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2781:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2804:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2786:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:5"
																		},
																		"nativeSrc": "2786:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2774:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:5"
																},
																"nativeSrc": "2774:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2774:37:5"
															},
															"nativeSrc": "2774:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2699:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:5",
														"nodeType": "YulTypedName",
														"src": "2752:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2759:3:5",
														"nodeType": "YulTypedName",
														"src": "2759:3:5",
														"type": ""
													}
												],
												"src": "2699:118:5"
											},
											{
												"body": {
													"nativeSrc": "2949:206:5",
													"nodeType": "YulBlock",
													"src": "2949:206:5",
													"statements": [
														{
															"nativeSrc": "2959:26:5",
															"nodeType": "YulAssignment",
															"src": "2959:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2971:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2971:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2982:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2967:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:5"
																},
																"nativeSrc": "2967:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2967:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2959:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2959:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3039:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3052:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3052:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3063:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3063:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3048:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3048:3:5"
																		},
																		"nativeSrc": "3048:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3048:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2995:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2995:43:5"
																},
																"nativeSrc": "2995:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2995:71:5"
															},
															"nativeSrc": "2995:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2995:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3120:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3120:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3133:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3144:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3144:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3129:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:5"
																		},
																		"nativeSrc": "3129:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3129:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3076:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3076:43:5"
																},
																"nativeSrc": "3076:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3076:72:5"
															},
															"nativeSrc": "3076:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3076:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2823:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2913:9:5",
														"nodeType": "YulTypedName",
														"src": "2913:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2925:6:5",
														"nodeType": "YulTypedName",
														"src": "2925:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2933:6:5",
														"nodeType": "YulTypedName",
														"src": "2933:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2944:4:5",
														"nodeType": "YulTypedName",
														"src": "2944:4:5",
														"type": ""
													}
												],
												"src": "2823:332:5"
											},
											{
												"body": {
													"nativeSrc": "3259:124:5",
													"nodeType": "YulBlock",
													"src": "3259:124:5",
													"statements": [
														{
															"nativeSrc": "3269:26:5",
															"nodeType": "YulAssignment",
															"src": "3269:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3281:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3281:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3292:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3292:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3277:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3277:3:5"
																},
																"nativeSrc": "3277:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3277:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3269:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3269:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3349:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3349:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3362:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3373:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3373:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3358:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:5"
																		},
																		"nativeSrc": "3358:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3305:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3305:43:5"
																},
																"nativeSrc": "3305:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3305:71:5"
															},
															"nativeSrc": "3305:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3305:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3161:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3231:9:5",
														"nodeType": "YulTypedName",
														"src": "3231:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3243:6:5",
														"nodeType": "YulTypedName",
														"src": "3243:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3254:4:5",
														"nodeType": "YulTypedName",
														"src": "3254:4:5",
														"type": ""
													}
												],
												"src": "3161:222:5"
											},
											{
												"body": {
													"nativeSrc": "3431:48:5",
													"nodeType": "YulBlock",
													"src": "3431:48:5",
													"statements": [
														{
															"nativeSrc": "3441:32:5",
															"nodeType": "YulAssignment",
															"src": "3441:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3466:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3466:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3459:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3459:6:5"
																		},
																		"nativeSrc": "3459:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3459:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3452:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:5"
																},
																"nativeSrc": "3452:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3452:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3441:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3441:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3389:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3413:5:5",
														"nodeType": "YulTypedName",
														"src": "3413:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3423:7:5",
														"nodeType": "YulTypedName",
														"src": "3423:7:5",
														"type": ""
													}
												],
												"src": "3389:90:5"
											},
											{
												"body": {
													"nativeSrc": "3544:50:5",
													"nodeType": "YulBlock",
													"src": "3544:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3561:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3561:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3581:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3581:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3566:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "3566:14:5"
																		},
																		"nativeSrc": "3566:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3566:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3554:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:5"
																},
																"nativeSrc": "3554:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3554:34:5"
															},
															"nativeSrc": "3554:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3554:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3485:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3532:5:5",
														"nodeType": "YulTypedName",
														"src": "3532:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3539:3:5",
														"nodeType": "YulTypedName",
														"src": "3539:3:5",
														"type": ""
													}
												],
												"src": "3485:109:5"
											},
											{
												"body": {
													"nativeSrc": "3692:118:5",
													"nodeType": "YulBlock",
													"src": "3692:118:5",
													"statements": [
														{
															"nativeSrc": "3702:26:5",
															"nodeType": "YulAssignment",
															"src": "3702:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3714:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3714:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3725:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3725:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3710:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3710:3:5"
																},
																"nativeSrc": "3710:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3710:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3702:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3702:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3776:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3776:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3789:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3789:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3800:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3800:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3785:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3785:3:5"
																		},
																		"nativeSrc": "3785:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3785:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3738:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3738:37:5"
																},
																"nativeSrc": "3738:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3738:65:5"
															},
															"nativeSrc": "3738:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3738:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3600:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3664:9:5",
														"nodeType": "YulTypedName",
														"src": "3664:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3676:6:5",
														"nodeType": "YulTypedName",
														"src": "3676:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3687:4:5",
														"nodeType": "YulTypedName",
														"src": "3687:4:5",
														"type": ""
													}
												],
												"src": "3600:210:5"
											},
											{
												"body": {
													"nativeSrc": "3848:28:5",
													"nodeType": "YulBlock",
													"src": "3848:28:5",
													"statements": [
														{
															"nativeSrc": "3858:12:5",
															"nodeType": "YulAssignment",
															"src": "3858:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "3865:5:5",
																"nodeType": "YulIdentifier",
																"src": "3865:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3858:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3858:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3816:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3834:5:5",
														"nodeType": "YulTypedName",
														"src": "3834:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3844:3:5",
														"nodeType": "YulTypedName",
														"src": "3844:3:5",
														"type": ""
													}
												],
												"src": "3816:60:5"
											},
											{
												"body": {
													"nativeSrc": "3942:82:5",
													"nodeType": "YulBlock",
													"src": "3942:82:5",
													"statements": [
														{
															"nativeSrc": "3952:66:5",
															"nodeType": "YulAssignment",
															"src": "3952:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4010:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4010:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3992:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3992:17:5"
																				},
																				"nativeSrc": "3992:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3992:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3983:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3983:8:5"
																		},
																		"nativeSrc": "3983:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3983:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3965:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3965:17:5"
																},
																"nativeSrc": "3965:53:5",
																"nodeType": "YulFunctionCall",
																"src": "3965:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3952:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3952:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3882:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3922:5:5",
														"nodeType": "YulTypedName",
														"src": "3922:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3932:9:5",
														"nodeType": "YulTypedName",
														"src": "3932:9:5",
														"type": ""
													}
												],
												"src": "3882:142:5"
											},
											{
												"body": {
													"nativeSrc": "4090:66:5",
													"nodeType": "YulBlock",
													"src": "4090:66:5",
													"statements": [
														{
															"nativeSrc": "4100:50:5",
															"nodeType": "YulAssignment",
															"src": "4100:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4144:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4144:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4113:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "4113:30:5"
																},
																"nativeSrc": "4113:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4113:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4100:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4100:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4030:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4070:5:5",
														"nodeType": "YulTypedName",
														"src": "4070:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4080:9:5",
														"nodeType": "YulTypedName",
														"src": "4080:9:5",
														"type": ""
													}
												],
												"src": "4030:126:5"
											},
											{
												"body": {
													"nativeSrc": "4235:66:5",
													"nodeType": "YulBlock",
													"src": "4235:66:5",
													"statements": [
														{
															"nativeSrc": "4245:50:5",
															"nodeType": "YulAssignment",
															"src": "4245:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4289:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4289:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4258:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "4258:30:5"
																},
																"nativeSrc": "4258:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4258:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4245:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4245:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBlast_$15_to_t_address",
												"nativeSrc": "4162:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4215:5:5",
														"nodeType": "YulTypedName",
														"src": "4215:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4225:9:5",
														"nodeType": "YulTypedName",
														"src": "4225:9:5",
														"type": ""
													}
												],
												"src": "4162:139:5"
											},
											{
												"body": {
													"nativeSrc": "4385:79:5",
													"nodeType": "YulBlock",
													"src": "4385:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4402:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4451:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4451:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBlast_$15_to_t_address",
																			"nativeSrc": "4407:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "4407:43:5"
																		},
																		"nativeSrc": "4407:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4407:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4395:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4395:6:5"
																},
																"nativeSrc": "4395:63:5",
																"nodeType": "YulFunctionCall",
																"src": "4395:63:5"
															},
															"nativeSrc": "4395:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "4395:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack",
												"nativeSrc": "4307:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4373:5:5",
														"nodeType": "YulTypedName",
														"src": "4373:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4380:3:5",
														"nodeType": "YulTypedName",
														"src": "4380:3:5",
														"type": ""
													}
												],
												"src": "4307:157:5"
											},
											{
												"body": {
													"nativeSrc": "4581:137:5",
													"nodeType": "YulBlock",
													"src": "4581:137:5",
													"statements": [
														{
															"nativeSrc": "4591:26:5",
															"nodeType": "YulAssignment",
															"src": "4591:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4603:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4603:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4614:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4614:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4599:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4599:3:5"
																},
																"nativeSrc": "4599:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4599:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4591:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4591:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4684:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4684:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4697:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4708:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4708:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4693:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4693:3:5"
																		},
																		"nativeSrc": "4693:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4693:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack",
																	"nativeSrc": "4627:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "4627:56:5"
																},
																"nativeSrc": "4627:84:5",
																"nodeType": "YulFunctionCall",
																"src": "4627:84:5"
															},
															"nativeSrc": "4627:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "4627:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBlast_$15__to_t_address__fromStack_reversed",
												"nativeSrc": "4470:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4553:9:5",
														"nodeType": "YulTypedName",
														"src": "4553:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4565:6:5",
														"nodeType": "YulTypedName",
														"src": "4565:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4576:4:5",
														"nodeType": "YulTypedName",
														"src": "4576:4:5",
														"type": ""
													}
												],
												"src": "4470:248:5"
											},
											{
												"body": {
													"nativeSrc": "4752:152:5",
													"nodeType": "YulBlock",
													"src": "4752:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4769:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4769:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4772:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4772:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4762:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:5"
																},
																"nativeSrc": "4762:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4762:88:5"
															},
															"nativeSrc": "4762:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4762:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4866:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4866:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4869:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4869:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4859:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:5"
																},
																"nativeSrc": "4859:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4859:15:5"
															},
															"nativeSrc": "4859:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4859:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4890:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4890:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4893:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4883:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4883:6:5"
																},
																"nativeSrc": "4883:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4883:15:5"
															},
															"nativeSrc": "4883:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4883:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4724:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4724:180:5"
											},
											{
												"body": {
													"nativeSrc": "4954:147:5",
													"nodeType": "YulBlock",
													"src": "4954:147:5",
													"statements": [
														{
															"nativeSrc": "4964:25:5",
															"nodeType": "YulAssignment",
															"src": "4964:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4987:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4987:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4969:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4969:17:5"
																},
																"nativeSrc": "4969:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4969:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4964:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4964:1:5"
																}
															]
														},
														{
															"nativeSrc": "4998:25:5",
															"nodeType": "YulAssignment",
															"src": "4998:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5021:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5021:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5003:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5003:17:5"
																},
																"nativeSrc": "5003:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5003:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4998:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4998:1:5"
																}
															]
														},
														{
															"nativeSrc": "5032:16:5",
															"nodeType": "YulAssignment",
															"src": "5032:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5043:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5043:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5046:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5046:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5039:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5039:3:5"
																},
																"nativeSrc": "5039:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5039:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5032:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5072:22:5",
																"nodeType": "YulBlock",
																"src": "5072:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5074:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5074:16:5"
																			},
																			"nativeSrc": "5074:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5074:18:5"
																		},
																		"nativeSrc": "5074:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5064:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5064:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5067:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5067:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5061:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5061:2:5"
																},
																"nativeSrc": "5061:10:5",
																"nodeType": "YulFunctionCall",
																"src": "5061:10:5"
															},
															"nativeSrc": "5058:36:5",
															"nodeType": "YulIf",
															"src": "5058:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4910:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4941:1:5",
														"nodeType": "YulTypedName",
														"src": "4941:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4944:1:5",
														"nodeType": "YulTypedName",
														"src": "4944:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4950:3:5",
														"nodeType": "YulTypedName",
														"src": "4950:3:5",
														"type": ""
													}
												],
												"src": "4910:191:5"
											},
											{
												"body": {
													"nativeSrc": "5233:206:5",
													"nodeType": "YulBlock",
													"src": "5233:206:5",
													"statements": [
														{
															"nativeSrc": "5243:26:5",
															"nodeType": "YulAssignment",
															"src": "5243:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5255:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5255:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5266:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5266:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5251:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5251:3:5"
																},
																"nativeSrc": "5251:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5251:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5243:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5243:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5323:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5336:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5336:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5347:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5347:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5332:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5332:3:5"
																		},
																		"nativeSrc": "5332:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5279:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5279:43:5"
																},
																"nativeSrc": "5279:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5279:71:5"
															},
															"nativeSrc": "5279:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5279:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5404:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5404:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5417:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5428:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5428:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5413:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:5"
																		},
																		"nativeSrc": "5413:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5413:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5360:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5360:43:5"
																},
																"nativeSrc": "5360:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5360:72:5"
															},
															"nativeSrc": "5360:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5360:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5107:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5197:9:5",
														"nodeType": "YulTypedName",
														"src": "5197:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5209:6:5",
														"nodeType": "YulTypedName",
														"src": "5209:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5217:6:5",
														"nodeType": "YulTypedName",
														"src": "5217:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5228:4:5",
														"nodeType": "YulTypedName",
														"src": "5228:4:5",
														"type": ""
													}
												],
												"src": "5107:332:5"
											},
											{
												"body": {
													"nativeSrc": "5508:80:5",
													"nodeType": "YulBlock",
													"src": "5508:80:5",
													"statements": [
														{
															"nativeSrc": "5518:22:5",
															"nodeType": "YulAssignment",
															"src": "5518:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5533:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5533:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5527:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5527:5:5"
																},
																"nativeSrc": "5527:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5527:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5518:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5518:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5576:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5576:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5549:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5549:26:5"
																},
																"nativeSrc": "5549:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5549:33:5"
															},
															"nativeSrc": "5549:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5549:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5445:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5486:6:5",
														"nodeType": "YulTypedName",
														"src": "5486:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5494:3:5",
														"nodeType": "YulTypedName",
														"src": "5494:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5502:5:5",
														"nodeType": "YulTypedName",
														"src": "5502:5:5",
														"type": ""
													}
												],
												"src": "5445:143:5"
											},
											{
												"body": {
													"nativeSrc": "5671:274:5",
													"nodeType": "YulBlock",
													"src": "5671:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5717:83:5",
																"nodeType": "YulBlock",
																"src": "5717:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5719:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5719:77:5"
																			},
																			"nativeSrc": "5719:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5719:79:5"
																		},
																		"nativeSrc": "5719:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5719:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5692:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5692:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5701:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5701:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5688:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:5"
																		},
																		"nativeSrc": "5688:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5713:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5713:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5684:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:5"
																},
																"nativeSrc": "5684:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5684:32:5"
															},
															"nativeSrc": "5681:119:5",
															"nodeType": "YulIf",
															"src": "5681:119:5"
														},
														{
															"nativeSrc": "5810:128:5",
															"nodeType": "YulBlock",
															"src": "5810:128:5",
															"statements": [
																{
																	"nativeSrc": "5825:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5825:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5829:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5829:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5854:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5854:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5900:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5900:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5911:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5911:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5896:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5896:3:5"
																				},
																				"nativeSrc": "5896:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5896:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5920:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5920:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5864:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5864:31:5"
																		},
																		"nativeSrc": "5864:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5864:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5854:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5854:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5594:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5641:9:5",
														"nodeType": "YulTypedName",
														"src": "5641:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5652:7:5",
														"nodeType": "YulTypedName",
														"src": "5652:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5664:6:5",
														"nodeType": "YulTypedName",
														"src": "5664:6:5",
														"type": ""
													}
												],
												"src": "5594:351:5"
											},
											{
												"body": {
													"nativeSrc": "5979:152:5",
													"nodeType": "YulBlock",
													"src": "5979:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5996:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5996:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5999:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5999:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5989:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:5"
																},
																"nativeSrc": "5989:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5989:88:5"
															},
															"nativeSrc": "5989:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5989:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6093:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6093:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6096:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6096:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6086:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:5"
																},
																"nativeSrc": "6086:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6086:15:5"
															},
															"nativeSrc": "6086:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6086:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6117:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6117:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6120:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6120:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6110:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:5"
																},
																"nativeSrc": "6110:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6110:15:5"
															},
															"nativeSrc": "6110:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6110:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5951:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5951:180:5"
											},
											{
												"body": {
													"nativeSrc": "6182:149:5",
													"nodeType": "YulBlock",
													"src": "6182:149:5",
													"statements": [
														{
															"nativeSrc": "6192:25:5",
															"nodeType": "YulAssignment",
															"src": "6192:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6215:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6215:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6197:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6197:17:5"
																},
																"nativeSrc": "6197:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6197:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6192:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6192:1:5"
																}
															]
														},
														{
															"nativeSrc": "6226:25:5",
															"nodeType": "YulAssignment",
															"src": "6226:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6249:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6249:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6231:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6231:17:5"
																},
																"nativeSrc": "6231:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6231:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6226:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:5"
																}
															]
														},
														{
															"nativeSrc": "6260:17:5",
															"nodeType": "YulAssignment",
															"src": "6260:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6272:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6272:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6275:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6275:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6268:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:5"
																},
																"nativeSrc": "6268:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6268:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6260:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6260:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6302:22:5",
																"nodeType": "YulBlock",
																"src": "6302:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6304:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6304:16:5"
																			},
																			"nativeSrc": "6304:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6304:18:5"
																		},
																		"nativeSrc": "6304:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6304:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6293:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6293:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6299:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6299:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6290:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6290:2:5"
																},
																"nativeSrc": "6290:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6290:11:5"
															},
															"nativeSrc": "6287:37:5",
															"nodeType": "YulIf",
															"src": "6287:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6137:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6168:1:5",
														"nodeType": "YulTypedName",
														"src": "6168:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6171:1:5",
														"nodeType": "YulTypedName",
														"src": "6171:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6177:4:5",
														"nodeType": "YulTypedName",
														"src": "6177:4:5",
														"type": ""
													}
												],
												"src": "6137:194:5"
											},
											{
												"body": {
													"nativeSrc": "6385:362:5",
													"nodeType": "YulBlock",
													"src": "6385:362:5",
													"statements": [
														{
															"nativeSrc": "6395:25:5",
															"nodeType": "YulAssignment",
															"src": "6395:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6418:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6418:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6400:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6400:17:5"
																},
																"nativeSrc": "6400:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6400:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6395:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:5"
																}
															]
														},
														{
															"nativeSrc": "6429:25:5",
															"nodeType": "YulAssignment",
															"src": "6429:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6452:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6452:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6434:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6434:17:5"
																},
																"nativeSrc": "6434:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6434:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6429:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6429:1:5"
																}
															]
														},
														{
															"nativeSrc": "6463:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6463:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6486:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6486:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6489:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6489:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6482:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6482:3:5"
																},
																"nativeSrc": "6482:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6482:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6467:11:5",
																	"nodeType": "YulTypedName",
																	"src": "6467:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6500:41:5",
															"nodeType": "YulAssignment",
															"src": "6500:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6529:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "6529:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6511:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6511:17:5"
																},
																"nativeSrc": "6511:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6511:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6500:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "6500:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6718:22:5",
																"nodeType": "YulBlock",
																"src": "6718:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6720:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:5"
																			},
																			"nativeSrc": "6720:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:5"
																		},
																		"nativeSrc": "6720:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6651:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6651:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6644:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6644:6:5"
																				},
																				"nativeSrc": "6644:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6644:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6674:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6674:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6681:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "6681:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6690:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "6690:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6677:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6677:3:5"
																						},
																						"nativeSrc": "6677:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6677:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6671:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6671:2:5"
																				},
																				"nativeSrc": "6671:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6671:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6624:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6624:2:5"
																		},
																		"nativeSrc": "6624:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6624:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6604:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:5"
																},
																"nativeSrc": "6604:113:5",
																"nodeType": "YulFunctionCall",
																"src": "6604:113:5"
															},
															"nativeSrc": "6601:139:5",
															"nodeType": "YulIf",
															"src": "6601:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6337:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6368:1:5",
														"nodeType": "YulTypedName",
														"src": "6368:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6371:1:5",
														"nodeType": "YulTypedName",
														"src": "6371:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6377:7:5",
														"nodeType": "YulTypedName",
														"src": "6377:7:5",
														"type": ""
													}
												],
												"src": "6337:410:5"
											},
											{
												"body": {
													"nativeSrc": "6781:152:5",
													"nodeType": "YulBlock",
													"src": "6781:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6798:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6798:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6801:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6791:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6791:6:5"
																},
																"nativeSrc": "6791:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6791:88:5"
															},
															"nativeSrc": "6791:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6791:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6895:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6895:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6898:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6898:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6888:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:5"
																},
																"nativeSrc": "6888:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6888:15:5"
															},
															"nativeSrc": "6888:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6888:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6919:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6919:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6922:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6922:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6912:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:5"
																},
																"nativeSrc": "6912:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6912:15:5"
															},
															"nativeSrc": "6912:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6912:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6753:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6753:180:5"
											},
											{
												"body": {
													"nativeSrc": "6981:143:5",
													"nodeType": "YulBlock",
													"src": "6981:143:5",
													"statements": [
														{
															"nativeSrc": "6991:25:5",
															"nodeType": "YulAssignment",
															"src": "6991:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7014:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7014:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6996:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6996:17:5"
																},
																"nativeSrc": "6996:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6996:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6991:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6991:1:5"
																}
															]
														},
														{
															"nativeSrc": "7025:25:5",
															"nodeType": "YulAssignment",
															"src": "7025:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7048:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7048:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7030:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7030:17:5"
																},
																"nativeSrc": "7030:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7030:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7025:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7025:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7072:22:5",
																"nodeType": "YulBlock",
																"src": "7072:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7074:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7074:16:5"
																			},
																			"nativeSrc": "7074:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7074:18:5"
																		},
																		"nativeSrc": "7074:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7074:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7069:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7069:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7062:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:5"
																},
																"nativeSrc": "7062:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7062:9:5"
															},
															"nativeSrc": "7059:35:5",
															"nodeType": "YulIf",
															"src": "7059:35:5"
														},
														{
															"nativeSrc": "7104:14:5",
															"nodeType": "YulAssignment",
															"src": "7104:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7113:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7113:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7116:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7116:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7109:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7109:3:5"
																},
																"nativeSrc": "7109:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7109:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7104:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7104:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6939:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6970:1:5",
														"nodeType": "YulTypedName",
														"src": "6970:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6973:1:5",
														"nodeType": "YulTypedName",
														"src": "6973:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6979:1:5",
														"nodeType": "YulTypedName",
														"src": "6979:1:5",
														"type": ""
													}
												],
												"src": "6939:185:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBlast_$15_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBlast_$15_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBlast_$15__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610134575f3560e01c80636dc39ec8116100aa57806397d757761161006e57806397d7577614610413578063e39316071461043d578063eaca243b14610453578063f2e809e01461047b578063f2fde38b146104a3578063f36f7c62146104cb57610134565b80636dc39ec814610350578063715018a61461038d57806388bedf91146103a35780638da5cb5b146103bf5780638f32d59b146103e957610134565b8063450c9d7d116100fc578063450c9d7d146101fa5780634ad47291146102365780634addc0e8146102725780634b634b061461029c57806351546044146102d85780636bd229621461031457610134565b806312065fe014610138578063224e80fc1461016257806323084e5f1461019e5780633c5f07cb146101b457806344bb9117146101be575b5f80fd5b348015610143575f80fd5b5061014c610507565b6040516101599190611896565b60405180910390f35b34801561016d575f80fd5b506101886004803603810190610183919061190d565b61050e565b6040516101959190611896565b60405180910390f35b3480156101a9575f80fd5b506101b2610565565b005b6101bc6106d7565b005b3480156101c9575f80fd5b506101e460048036038101906101df9190611962565b61071c565b6040516101f19190611896565b60405180910390f35b348015610205575f80fd5b50610220600480360381019061021b919061190d565b610731565b60405161022d9190611896565b60405180910390f35b348015610241575f80fd5b5061025c6004803603810190610257919061198d565b610754565b6040516102699190611896565b60405180910390f35b34801561027d575f80fd5b5061028661076a565b6040516102939190611896565b60405180910390f35b3480156102a7575f80fd5b506102c260048036038101906102bd919061190d565b610770565b6040516102cf9190611896565b60405180910390f35b3480156102e3575f80fd5b506102fe60048036038101906102f99190611962565b6107b6565b60405161030b9190611896565b60405180910390f35b34801561031f575f80fd5b5061033a6004803603810190610335919061190d565b6107c8565b6040516103479190611896565b60405180910390f35b34801561035b575f80fd5b5061037660048036038101906103719190611962565b610901565b6040516103849291906119da565b60405180910390f35b348015610398575f80fd5b506103a16109a8565b005b6103bd60048036038101906103b8919061190d565b610a5b565b005b3480156103ca575f80fd5b506103d3610b42565b6040516103e09190611a01565b60405180910390f35b3480156103f4575f80fd5b506103fd610b69565b60405161040a9190611a34565b60405180910390f35b34801561041e575f80fd5b50610427610bbe565b6040516104349190611aa8565b60405180910390f35b348015610448575f80fd5b50610451610be3565b005b34801561045e575f80fd5b5061047960048036038101906104749190611962565b610d34565b005b348015610486575f80fd5b506104a1600480360381019061049c919061190d565b610d4e565b005b3480156104ae575f80fd5b506104c960048036038101906104c4919061190d565b610e68565b005b3480156104d6575f80fd5b506104f160048036038101906104ec919061190d565b610e84565b6040516104fe9190611896565b60405180910390f35b5f47905090565b5f61055e600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610559846107c8565b610eca565b9050919050565b5f3390505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905042600354826105b99190611aee565b10156105c65750506106d5565b4260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663954fa5ee30856040518363ffffffff1660e01b8152600401610665929190611b21565b6020604051808303815f875af1158015610681573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a59190611b5c565b90505f8111156106d1578060045f8282546106c09190611aee565b925050819055506106d081610edf565b5b5050505b565b6106df610b69565b6106e7575f80fd5b5f600e54146106f4575f80fd5b600160095f6101000a81548160ff0219169083151502179055506419254d3800600e81905550565b5f61072a82600e5447610eeb565b9050919050565b5f8061073c8361050e565b90505f6107488261071c565b90508092505050919050565b5f6107628383600e54610eeb565b905092915050565b60035481565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6107c18247610754565b9050919050565b5f8061081c60055461081742600c5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f3d565b610f52565b90505f600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f610899610878606460c8610f6a90919063ffffffff16565b61088b8486610f6a90919063ffffffff16565b610f7f90919063ffffffff16565b90506108ae8184610eca90919063ffffffff16565b92506108f783600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f6a565b9350505050919050565b5f80601280549050831061091a575f80915091506109a3565b5f6012848154811061092f5761092e611b87565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081819350935050505b915091565b6109b0610b69565b6109b8575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60095f9054906101000a900460ff16610a72575f80fd5b5f610a8634610a814734610f3d565b610754565b9050610a9a81610a9583610f94565b610f3d565b90505f610aa634610f94565b9050600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610b0d573d5f803e3d5ffd5b50610b183383610fb2565b610b22833461100f565b670de0b6b3a76400003410610b3d57610b3c3360c86113af565b5b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900460ff16610bfa575f80fd5b5f610c043361050e565b90505f610c108261071c565b90505f610c1c82610f94565b9050610c28335f611459565b42600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c76600e5484610eca565b600e81905550600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610ce1573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc610d068484610f3d565b90811502906040515f60405180830381858888f19350505050158015610d2e573d5f803e3d5ffd5b50505050565b610d3c610b69565b610d44575f80fd5b8060038190555050565b610d56610b69565b610d5e575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610da95773430000000000000000000000000000000000000290505b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610e4f575f80fd5b505af1158015610e61573d5f803e3d5ffd5b5050505050565b610e70610b69565b610e78575f80fd5b610e81816115aa565b50565b5f600f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8183610ed79190611aee565b905092915050565b610ee88161169c565b50565b5f610f34610efb60065484610f6a565b610f2f600754610f2a610f24610f136006548a610f6a565b610f1f6007548c610f6a565b610eca565b89610f7f565b610eca565b610f7f565b90509392505050565b5f8183610f4a9190611bb4565b905092915050565b5f818310610f605781610f62565b825b905092915050565b5f8183610f779190611be7565b905092915050565b5f8183610f8c9190611c55565b905092915050565b5f610fab610fa483600854610f6a565b6064610f7f565b9050919050565b61100b8261100683600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610eca90919063ffffffff16565b611459565b5050565b60095f9054906101000a900460ff16611026575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105d575f91505b5f73ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561117c57503373ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156112385781600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a7640000811061121b576112168260c86113af565b611237565b67016345785d8a00008110611236576112358260286113af565b5b5b5b5f6112423361050e565b90505f61125182600554610f7f565b905061129a600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205482610eca565b600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112e5335f611459565b42600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061138d600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611781565b6113a3600e5461139e846005610f7f565b610eca565b600e8190555050505050565b5f61140082600f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610eca90919063ffffffff16565b90506127108111156114125761271090505b80600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b6001151560115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615151461156457601082908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115e1575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f81111561177e575f805f5b60108054905081101561177a57601081815481106116c9576116c8611b87565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250611757600e54611749600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205487610f6a90919063ffffffff16565b610f7f90919063ffffffff16565b91505f82111561176d5761176b8383611831565b505b80806001019150506116a8565b5050505b50565b5f600f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f6117ea60c86117dc601085610f6a90919063ffffffff16565b610f7f90919063ffffffff16565b90505f816130d46117fb9190611aee565b90505f61181d620186a061180f8785610f6a565b610f7f90919063ffffffff16565b90506118298682610fb2565b505050505050565b5f8273ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050156118745760019050611878565b5f90505b92915050565b5f819050919050565b6118908161187e565b82525050565b5f6020820190506118a95f830184611887565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118dc826118b3565b9050919050565b6118ec816118d2565b81146118f6575f80fd5b50565b5f81359050611907816118e3565b92915050565b5f60208284031215611922576119216118af565b5b5f61192f848285016118f9565b91505092915050565b6119418161187e565b811461194b575f80fd5b50565b5f8135905061195c81611938565b92915050565b5f60208284031215611977576119766118af565b5b5f6119848482850161194e565b91505092915050565b5f80604083850312156119a3576119a26118af565b5b5f6119b08582860161194e565b92505060206119c18582860161194e565b9150509250929050565b6119d4816118d2565b82525050565b5f6040820190506119ed5f8301856119cb565b6119fa6020830184611887565b9392505050565b5f602082019050611a145f8301846119cb565b92915050565b5f8115159050919050565b611a2e81611a1a565b82525050565b5f602082019050611a475f830184611a25565b92915050565b5f819050919050565b5f611a70611a6b611a66846118b3565b611a4d565b6118b3565b9050919050565b5f611a8182611a56565b9050919050565b5f611a9282611a77565b9050919050565b611aa281611a88565b82525050565b5f602082019050611abb5f830184611a99565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611af88261187e565b9150611b038361187e565b9250828201905080821115611b1b57611b1a611ac1565b5b92915050565b5f604082019050611b345f8301856119cb565b611b4160208301846119cb565b9392505050565b5f81519050611b5681611938565b92915050565b5f60208284031215611b7157611b706118af565b5b5f611b7e84828501611b48565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611bbe8261187e565b9150611bc98361187e565b9250828203905081811115611be157611be0611ac1565b5b92915050565b5f611bf18261187e565b9150611bfc8361187e565b9250828202611c0a8161187e565b91508282048414831517611c2157611c20611ac1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c5f8261187e565b9150611c6a8361187e565b925082611c7a57611c79611c28565b5b82820490509291505056fea264697066735822122034e5785d2987a69127c9ff5249c806525da534562fb0b708e54e10f1f59195c164736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DC39EC8 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0x97D75776 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x97D75776 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xE3931607 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xEACA243B EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xF2E809E0 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xF36F7C62 EQ PUSH2 0x4CB JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6DC39EC8 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x88BEDF91 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x3E9 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x450C9D7D GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x450C9D7D EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x4AD47291 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x4ADDC0E8 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x4B634B06 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x51546044 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x6BD22962 EQ PUSH2 0x314 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x224E80FC EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23084E5F EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x44BB9117 EQ PUSH2 0x1BE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x9A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0xBE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x55E PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x559 DUP5 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP TIMESTAMP PUSH1 0x3 SLOAD DUP3 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST LT ISZERO PUSH2 0x5C6 JUMPI POP POP PUSH2 0x6D5 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x954FA5EE ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP3 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x681 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x6D1 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6D0 DUP2 PUSH2 0xEDF JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x6DF PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x6E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD EQ PUSH2 0x6F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH5 0x19254D3800 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x72A DUP3 PUSH1 0xE SLOAD SELFBALANCE PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x73C DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x748 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x762 DUP4 DUP4 PUSH1 0xE SLOAD PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C1 DUP3 SELFBALANCE PUSH2 0x754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x81C PUSH1 0x5 SLOAD PUSH2 0x817 TIMESTAMP PUSH1 0xC PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF3D JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x899 PUSH2 0x878 PUSH1 0x64 PUSH1 0xC8 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x88B DUP5 DUP7 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8AE DUP2 DUP5 PUSH2 0xECA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x8F7 DUP4 PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF6A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x91A JUMPI PUSH0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x9A3 JUMP JUMPDEST PUSH0 PUSH1 0x12 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x92F JUMPI PUSH2 0x92E PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x9B0 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x9B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA72 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xA86 CALLVALUE PUSH2 0xA81 SELFBALANCE CALLVALUE PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9A DUP2 PUSH2 0xA95 DUP4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAA6 CALLVALUE PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB0D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xB18 CALLER DUP4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xB22 DUP4 CALLVALUE PUSH2 0x100F JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT PUSH2 0xB3D JUMPI PUSH2 0xB3C CALLER PUSH1 0xC8 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBFA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xC04 CALLER PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC10 DUP3 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC1C DUP3 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP PUSH2 0xC28 CALLER PUSH0 PUSH2 0x1459 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC76 PUSH1 0xE SLOAD DUP5 PUSH2 0xECA JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0xD06 DUP5 DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD3C PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xD44 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD56 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xD5E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA9 JUMPI PUSH20 0x4300000000000000000000000000000000000002 SWAP1 POP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E606C47 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE61 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE70 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xE78 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE81 DUP2 PUSH2 0x15AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xF PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE8 DUP2 PUSH2 0x169C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xF34 PUSH2 0xEFB PUSH1 0x6 SLOAD DUP5 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xF2F PUSH1 0x7 SLOAD PUSH2 0xF2A PUSH2 0xF24 PUSH2 0xF13 PUSH1 0x6 SLOAD DUP11 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xF1F PUSH1 0x7 SLOAD DUP13 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST DUP10 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xF60 JUMPI DUP2 PUSH2 0xF62 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFAB PUSH2 0xFA4 DUP4 PUSH1 0x8 SLOAD PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x64 PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100B DUP3 PUSH2 0x1006 DUP4 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xECA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1459 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1026 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105D JUMPI PUSH0 SWAP2 POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x117C JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1238 JUMPI DUP2 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP2 LT PUSH2 0x121B JUMPI PUSH2 0x1216 DUP3 PUSH1 0xC8 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 LT PUSH2 0x1236 JUMPI PUSH2 0x1235 DUP3 PUSH1 0x28 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH2 0x1242 CALLER PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1251 DUP3 PUSH1 0x5 SLOAD PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP PUSH2 0x129A PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12E5 CALLER PUSH0 PUSH2 0x1459 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x138D PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x13A3 PUSH1 0xE SLOAD PUSH2 0x139E DUP5 PUSH1 0x5 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1400 DUP3 PUSH1 0xF PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xECA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1412 JUMPI PUSH2 0x2710 SWAP1 POP JUMPDEST DUP1 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1564 JUMPI PUSH1 0x10 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x177E JUMPI PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x10 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x177A JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x1B87 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x1757 PUSH1 0xE SLOAD PUSH2 0x1749 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP8 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 GT ISZERO PUSH2 0x176D JUMPI PUSH2 0x176B DUP4 DUP4 PUSH2 0x1831 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x16A8 JUMP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xF PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH2 0x17EA PUSH1 0xC8 PUSH2 0x17DC PUSH1 0x10 DUP6 PUSH2 0xF6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x30D4 PUSH2 0x17FB SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x181D PUSH3 0x186A0 PUSH2 0x180F DUP8 DUP6 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0xF7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1829 DUP7 DUP3 PUSH2 0xFB2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x1874 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1878 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1890 DUP2 PUSH2 0x187E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DC DUP3 PUSH2 0x18B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EC DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x18F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1907 DUP2 PUSH2 0x18E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x192F DUP5 DUP3 DUP6 ADD PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1941 DUP2 PUSH2 0x187E JUMP JUMPDEST DUP2 EQ PUSH2 0x194B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195C DUP2 PUSH2 0x1938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1977 JUMPI PUSH2 0x1976 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1984 DUP5 DUP3 DUP6 ADD PUSH2 0x194E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x19A2 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B0 DUP6 DUP3 DUP7 ADD PUSH2 0x194E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19C1 DUP6 DUP3 DUP7 ADD PUSH2 0x194E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D4 DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19ED PUSH0 DUP4 ADD DUP6 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x19FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1887 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A14 PUSH0 DUP4 ADD DUP5 PUSH2 0x19CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x1A1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A47 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A70 PUSH2 0x1A6B PUSH2 0x1A66 DUP5 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x18B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A81 DUP3 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A92 DUP3 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH0 DUP4 ADD DUP5 PUSH2 0x1A99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AF8 DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B03 DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B1B JUMPI PUSH2 0x1B1A PUSH2 0x1AC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B34 PUSH0 DUP4 ADD DUP6 PUSH2 0x19CB JUMP JUMPDEST PUSH2 0x1B41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B56 DUP2 PUSH2 0x1938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B71 JUMPI PUSH2 0x1B70 PUSH2 0x18AF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B7E DUP5 DUP3 DUP6 ADD PUSH2 0x1B48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BBE DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC9 DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BE1 JUMPI PUSH2 0x1BE0 PUSH2 0x1AC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF1 DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFC DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C0A DUP2 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C21 JUMPI PUSH2 0x1C20 PUSH2 0x1AC1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5F DUP3 PUSH2 0x187E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6A DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0x1C28 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xE5 PUSH25 0x5D2987A69127C9FF5249C806525DA534562FB0B708E54E10F1 CREATE2 SWAP2 SWAP6 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1772:6722:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5963:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6163:137;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:411:0;;;;;;;;;;;;;:::i;:::-;;5824:134:1;;;:::i;:::-;;5240:142;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4355:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5387:158;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:43:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6058:100:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5550:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6305:461;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7449:284;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;531:111:3;;;;;;;;;;;;;:::i;:::-;;4538:450:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;308:70:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;301:19:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3952:398:1;;;;;;;;;;;;;:::i;:::-;;1102:108:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;871:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;647:100:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2947:103:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5963:90;6006:7;6027:21;6020:28;;5963:90;:::o;6163:137::-;6216:7;6237:58;6250:11;:16;6262:3;6250:16;;;;;;;;;;;;;;;;6268:26;6290:3;6268:21;:26::i;:::-;6237:12;:58::i;:::-;6230:65;;6163:137;;;:::o;455:411:0:-;495:17;515:10;495:30;;530:17;550:15;:26;566:9;550:26;;;;;;;;;;;;;;;;530:46;;621:15;599:19;;587:9;:31;;;;:::i;:::-;:49;583:73;;;644:7;;;;583:73;691:15;662;:26;678:9;662:26;;;;;;;;;;;;;;;:44;;;;711:15;729:5;;;;;;;;;;;:17;;;755:4;762:9;729:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;711:61;;793:1;783:7;:11;779:83;;;818:7;802:12;;:23;;;;;;;:::i;:::-;;;;;;;;831:25;848:7;831:16;:25::i;:::-;779:83;490:376;;;455:411;:::o;5824:134:1:-;417:9:3;:7;:9::i;:::-;409:18;;;;;;5898:1:1::1;5884:10;;:15;5876:24;;;::::0;::::1;;5919:4;5905:11;;:18;;;;;;;;;;;;;;;;;;5941:12;5928:10;:25;;;;5824:134::o:0;5240:142::-;5301:7;5322:55;5337:4;5343:10;;5355:21;5322:14;:55::i;:::-;5315:62;;5240:142;;;:::o;4355:178::-;4413:7;4427:15;4445:14;4455:3;4445:9;:14::i;:::-;4427:32;;4464:16;4483:25;4500:7;4483:16;:25::i;:::-;4464:44;;4520:8;4513:15;;;;4355:178;;;:::o;5387:158::-;5471:7;5492:48;5507:3;5512:15;5529:10;;5492:14;:48::i;:::-;5485:55;;5387:158;;;;:::o;373:43:0:-;;;;:::o;6058:100:1:-;6113:7;6134:14;:19;6149:3;6134:19;;;;;;;;;;;;;;;;6127:26;;6058:100;;;:::o;5550:134::-;5615:7;5636:43;5652:3;5657:21;5636:15;:43::i;:::-;5629:50;;5550:134;;;:::o;6305:461::-;6371:7;6385:21;6409:74;6413:21;;6436:46;6449:15;6466:9;:15;6476:4;6466:15;;;;;;;;;;;;;;;;6436:12;:46::i;:::-;6409:3;:74::i;:::-;6385:98;;6525:14;6542;:20;6557:4;6542:20;;;;;;;;;;;;;;;;6525:37;;6567:20;6590:54;6620:23;6639:3;2166;6620:18;;:23;;;;:::i;:::-;6590:25;6608:6;6590:13;:17;;:25;;;;:::i;:::-;:29;;:54;;;;:::i;:::-;6567:77;;6667:31;6685:12;6667:13;:17;;:31;;;;:::i;:::-;6651:47;;6712:49;6725:13;6740:14;:20;6755:4;6740:20;;;;;;;;;;;;;;;;6712:12;:49::i;:::-;6705:56;;;;;6305:461;;;:::o;7449:284::-;7516:7;7525;7552:18;:25;;;;7543:5;:34;7539:74;;7601:1;7605;7585:22;;;;;;7539:74;7619:12;7634:18;7653:5;7634:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7619:40;;7664:15;7682:11;:17;7694:4;7682:17;;;;;;;;;;;;;;;;7664:35;;7714:4;7720:7;7706:22;;;;;;7449:284;;;;:::o;531:111:3:-;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;4538:450:1:-;4596:11;;;;;;;;;;;4588:20;;;;;;4613:18;4634:74;4650:9;4661:46;4674:21;4697:9;4661:12;:46::i;:::-;4634:15;:74::i;:::-;4613:95;;4726:44;4739:10;4751:18;4758:10;4751:6;:18::i;:::-;4726:12;:44::i;:::-;4713:57;;4775:11;4789:17;4796:9;4789:6;:17::i;:::-;4775:31;;4811:6;;;;;;;;;;;:15;;:20;4827:3;4811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4836:35;4848:10;4860;4836:11;:35::i;:::-;4876:26;4887:3;4892:9;4876:10;:26::i;:::-;4926:4;4913:9;:17;4909:75;;4938:40;4949:10;2059:3;4938:10;:40::i;:::-;4909:75;4583:405;;4538:450;:::o;308:70:3:-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;443:83::-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;301:19:0:-;;;;;;;;;;;;;:::o;3952:398:1:-;3992:11;;;;;;;;;;;3984:20;;;;;;4009:15;4027:21;4037:10;4027:9;:21::i;:::-;4009:39;;4053:16;4072:25;4089:7;4072:16;:25::i;:::-;4053:44;;4102:11;4116:16;4123:8;4116:6;:16::i;:::-;4102:30;;4137:26;4149:10;4161:1;4137:11;:26::i;:::-;4192:15;4168:9;:21;4178:10;4168:21;;;;;;;;;;;;;;;:39;;;;4225:33;4238:10;;4250:7;4225:12;:33::i;:::-;4212:10;:46;;;;4263:6;;;;;;;;;;;:15;;:20;4279:3;4263:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4296:10;4288:28;;:57;4317:27;4330:8;4340:3;4317:12;:27::i;:::-;4288:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3979:371;;;3952:398::o;1102:108:0:-;417:9:3;:7;:9::i;:::-;409:18;;;;;;1197:8:0::1;1175:19;:30;;;;1102:108:::0;:::o;871:226::-;417:9:3;:7;:9::i;:::-;409:18;;;;;;959:1:0::1;938:23;;:9;:23;;::::0;934:95:::1;;981:42;969:54;;934:95;1048:9;1033:5;;:25;;;;;;;;;;;;;;;;;;1063:5;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;871:226:::0;:::o;647:100:3:-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;2947:103:1:-;3005:7;3026:14;:19;3041:3;3026:19;;;;;;;;;;;;;;;;3019:26;;2947:103;;;:::o;2070:89:4:-;2128:7;2153:1;2149;:5;;;;:::i;:::-;2142:12;;2070:89;;;;:::o;7738:101:1:-;7810:24;7828:5;7810:17;:24::i;:::-;7738:101;:::o;4993:242::-;5075:7;5096:134;5109:21;5122:3;;5127:2;5109:12;:21::i;:::-;5132:97;5145:4;;5151:77;5164:59;5177:21;5190:3;;5195:2;5177:12;:21::i;:::-;5200:22;5213:4;;5219:2;5200:12;:22::i;:::-;5164:12;:59::i;:::-;5225:2;5151:12;:77::i;:::-;5132:12;:97::i;:::-;5096:12;:134::i;:::-;5089:141;;4993:242;;;;;:::o;2409:89:4:-;2467:7;2492:1;2488;:5;;;;:::i;:::-;2481:12;;2409:89;;;;:::o;6771:96:1:-;6828:7;6853:1;6849;:5;:13;;6861:1;6849:13;;;6857:1;6849:13;6842:20;;6771:96;;;;:::o;2724:89:4:-;2782:7;2807:1;2803;:5;;;;:::i;:::-;2796:12;;2724:89;;;;:::o;3081:::-;3139:7;3164:1;3160;:5;;;;:::i;:::-;3153:12;;3081:89;;;;:::o;5689:130:1:-;5743:7;5764:50;5777:31;5790:6;5798:9;;5777:12;:31::i;:::-;5810:3;5764:12;:50::i;:::-;5757:57;;5689:130;;;:::o;7844:115::-;7907:47;7919:4;7925:28;7947:5;7925:11;:17;7937:4;7925:17;;;;;;;;;;;;;;;;:21;;:28;;;;:::i;:::-;7907:11;:47::i;:::-;7844:115;;:::o;3055:892::-;3125:11;;;;;;;;;;;3117:20;;;;;;3155:10;3148:17;;:3;:17;;;3144:51;;3187:1;3173:16;;3144:51;3238:1;3205:35;;:9;:21;3215:10;3205:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;:74;;;;;3269:10;3244:35;;:9;:21;3254:10;3244:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;3205:74;3201:273;;;3311:3;3287:9;:21;3297:10;3287:21;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3336:4;3326:6;:14;3322:147;;3349:33;3360:3;2059;3349:10;:33::i;:::-;3322:147;;;3409:5;3399:6;:15;3395:74;;3423:39;3434:3;2116:2;3423:10;:39::i;:::-;3395:74;3322:147;3201:273;3480:16;3499:21;3509:10;3499:9;:21::i;:::-;3480:40;;3525:17;3545:45;3558:8;3568:21;;3545:12;:45::i;:::-;3525:65;;3624:51;3637:14;:26;3652:10;3637:26;;;;;;;;;;;;;;;;3665:9;3624:12;:51::i;:::-;3595:14;:26;3610:10;3595:26;;;;;;;;;;;;;;;:80;;;;3680:26;3692:10;3704:1;3680:11;:26::i;:::-;3735:15;3711:9;:21;3721:10;3711:21;;;;;;;;;;;;;;;:39;;;;3781:48;3797:9;:21;3807:10;3797:21;;;;;;;;;;;;;;;;;;;;;;;;;3820:8;3781:15;:48::i;:::-;3891:51;3904:10;;3916:25;3929:8;3939:1;3916:12;:25::i;:::-;3891:12;:51::i;:::-;3878:10;:64;;;;3112:835;;3055:892;;:::o;6872:219::-;6935:15;6953:32;6978:6;6953:14;:20;6968:4;6953:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6935:50;;2006:5;6996:7;:20;6992:58;;;2006:5;7024:20;;6992:58;7079:7;7056:14;:20;7071:4;7056:20;;;;;;;;;;;;;;;:30;;;;6930:161;6872:219;;:::o;7964:187::-;8050:4;8031:23;;:9;:15;8041:4;8031:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;8027:88;;8062:8;8076:4;8062:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8105:4;8087:9;:15;8097:4;8087:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;8027:88;8141:5;8121:11;:17;8133:4;8121:17;;;;;;;;;;;;;;;:25;;;;7964:187;;:::o;752:166:3:-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;8156:335:1:-;8227:1;8217:6;:11;8213:35;8236:7;8213:35;8254:14;8273:11;8296:6;8291:196;8312:8;:15;;;;8308:1;:19;8291:196;;;8349:8;8358:1;8349:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8340:20;;8372:47;8408:10;;8372:31;8383:11;:19;8395:6;8383:19;;;;;;;;;;;;;;;;8372:6;:10;;:31;;;;:::i;:::-;:35;;:47;;;;:::i;:::-;8366:53;;8437:1;8431:3;:7;8427:55;;;8447:28;8463:6;8471:3;8447:15;:28::i;:::-;;8427:55;8329:3;;;;;;;8291:196;;;;8208:283;;8156:335;;:::o;7096:348::-;7161:14;7178;:19;7193:3;7178:19;;;;;;;;;;;;;;;;7161:36;;7202:15;7221:55;2166:3;7221:35;2224:2;7221:6;:10;;:35;;;;:::i;:::-;:39;;:55;;;;:::i;:::-;7202:75;;7282:20;7323:7;2283:6;7305:25;;;;:::i;:::-;7282:48;;7337:20;7360:44;7397:6;7360:32;7373:4;7379:12;7360;:32::i;:::-;:36;;:44;;;;:::i;:::-;7337:67;;7409:30;7421:3;7426:12;7409:11;:30::i;:::-;7156:288;;;;7096:348;;:::o;102:158:2:-;173:4;196:2;188:16;;:24;205:6;188:24;;;;;;;;;;;;;;;;;;;;;;;184:53;;;227:4;220:11;;;;184:53;250:5;243:12;;102:158;;;;;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:474::-;2287:6;2295;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2597:2;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2568:118;2219:474;;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:332::-;2944:4;2982:2;2971:9;2967:18;2959:26;;2995:71;3063:1;3052:9;3048:17;3039:6;2995:71;:::i;:::-;3076:72;3144:2;3133:9;3129:18;3120:6;3076:72;:::i;:::-;2823:332;;;;;:::o;3161:222::-;3254:4;3292:2;3281:9;3277:18;3269:26;;3305:71;3373:1;3362:9;3358:17;3349:6;3305:71;:::i;:::-;3161:222;;;;:::o;3389:90::-;3423:7;3466:5;3459:13;3452:21;3441:32;;3389:90;;;:::o;3485:109::-;3566:21;3581:5;3566:21;:::i;:::-;3561:3;3554:34;3485:109;;:::o;3600:210::-;3687:4;3725:2;3714:9;3710:18;3702:26;;3738:65;3800:1;3789:9;3785:17;3776:6;3738:65;:::i;:::-;3600:210;;;;:::o;3816:60::-;3844:3;3865:5;3858:12;;3816:60;;;:::o;3882:142::-;3932:9;3965:53;3983:34;3992:24;4010:5;3992:24;:::i;:::-;3983:34;:::i;:::-;3965:53;:::i;:::-;3952:66;;3882:142;;;:::o;4030:126::-;4080:9;4113:37;4144:5;4113:37;:::i;:::-;4100:50;;4030:126;;;:::o;4162:139::-;4225:9;4258:37;4289:5;4258:37;:::i;:::-;4245:50;;4162:139;;;:::o;4307:157::-;4407:50;4451:5;4407:50;:::i;:::-;4402:3;4395:63;4307:157;;:::o;4470:248::-;4576:4;4614:2;4603:9;4599:18;4591:26;;4627:84;4708:1;4697:9;4693:17;4684:6;4627:84;:::i;:::-;4470:248;;;;:::o;4724:180::-;4772:77;4769:1;4762:88;4869:4;4866:1;4859:15;4893:4;4890:1;4883:15;4910:191;4950:3;4969:20;4987:1;4969:20;:::i;:::-;4964:25;;5003:20;5021:1;5003:20;:::i;:::-;4998:25;;5046:1;5043;5039:9;5032:16;;5067:3;5064:1;5061:10;5058:36;;;5074:18;;:::i;:::-;5058:36;4910:191;;;;:::o;5107:332::-;5228:4;5266:2;5255:9;5251:18;5243:26;;5279:71;5347:1;5336:9;5332:17;5323:6;5279:71;:::i;:::-;5360:72;5428:2;5417:9;5413:18;5404:6;5360:72;:::i;:::-;5107:332;;;;;:::o;5445:143::-;5502:5;5533:6;5527:13;5518:22;;5549:33;5576:5;5549:33;:::i;:::-;5445:143;;;;:::o;5594:351::-;5664:6;5713:2;5701:9;5692:7;5688:23;5684:32;5681:119;;;5719:79;;:::i;:::-;5681:119;5839:1;5864:64;5920:7;5911:6;5900:9;5896:22;5864:64;:::i;:::-;5854:74;;5810:128;5594:351;;;;:::o;5951:180::-;5999:77;5996:1;5989:88;6096:4;6093:1;6086:15;6120:4;6117:1;6110:15;6137:194;6177:4;6197:20;6215:1;6197:20;:::i;:::-;6192:25;;6231:20;6249:1;6231:20;:::i;:::-;6226:25;;6275:1;6272;6268:9;6260:17;;6299:1;6293:4;6290:11;6287:37;;;6304:18;;:::i;:::-;6287:37;6137:194;;;;:::o;6337:410::-;6377:7;6400:20;6418:1;6400:20;:::i;:::-;6395:25;;6434:20;6452:1;6434:20;:::i;:::-;6429:25;;6489:1;6486;6482:9;6511:30;6529:11;6511:30;:::i;:::-;6500:41;;6690:1;6681:7;6677:15;6674:1;6671:22;6651:1;6644:9;6624:83;6601:139;;6720:18;;:::i;:::-;6601:139;6385:362;6337:410;;;;:::o;6753:180::-;6801:77;6798:1;6791:88;6898:4;6895:1;6888:15;6922:4;6919:1;6912:15;6939:185;6979:1;6996:20;7014:1;6996:20;:::i;:::-;6991:25;;7030:20;7048:1;7030:20;:::i;:::-;7025:25;;7069:1;7059:35;;7074:18;;:::i;:::-;7059:35;7116:1;7113;7109:9;7104:14;;6939:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1471000",
								"executionCost": "184908",
								"totalCost": "1655908"
							},
							"external": {
								"BLAST()": "infinite",
								"_blastClaimInterval()": "2492",
								"buyOres(address)": "infinite",
								"calculateOreBuy(uint256,uint256)": "infinite",
								"calculateOreBuySimple(uint256)": "infinite",
								"calculateOreSell(uint256)": "infinite",
								"claimMyGasFees()": "infinite",
								"furnaceRewards(address)": "infinite",
								"getAirdropQualifier(uint256)": "infinite",
								"getBalance()": "358",
								"getMyMiners(address)": "2918",
								"getMyOres(address)": "infinite",
								"getOresSinceLastHatch(address)": "infinite",
								"ingotBalanceOf(address)": "2961",
								"isOwner()": "2601",
								"owner()": "2604",
								"renounceOwnership()": "29949",
								"seedMarket()": "50914",
								"sellOres()": "infinite",
								"setBlastClaimInterval(uint256)": "24784",
								"setupBlast(address)": "infinite",
								"transferOwnership(address)": "30768"
							},
							"internal": {
								"_addClaimed(address,uint256)": "infinite",
								"_addIngots(address,uint256)": "infinite",
								"_distributeNative(uint256)": "infinite",
								"_hatchOres(address,uint256)": "infinite",
								"_rewardReferral(address,uint256)": "infinite",
								"_setClaimed(address,uint256)": "97409",
								"blastFeesClaimed(uint256)": "infinite",
								"calculateTrade(uint256,uint256,uint256)": "infinite",
								"devFee(uint256)": "infinite",
								"min(uint256,uint256)": "63"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1772,
									"end": 8494,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 410,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "15180"
								},
								{
									"begin": 373,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 373,
									"end": 416,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1908,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "107AC0"
								},
								{
									"begin": 1868,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1868,
									"end": 1915,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2338,
									"end": 2343,
									"name": "PUSH",
									"source": 1,
									"value": "2710"
								},
								{
									"begin": 2316,
									"end": 2343,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2316,
									"end": 2343,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2370,
									"end": 2374,
									"name": "PUSH",
									"source": 1,
									"value": "1388"
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2347,
									"end": 2374,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2378,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2378,
									"end": 2407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2438,
									"end": 2443,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2443,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2890,
									"end": 2942,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2926,
									"end": 2936,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2915,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2909,
									"end": 2915,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1772,
									"end": 8494,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034e5785d2987a69127c9ff5249c806525da534562fb0b708e54e10f1f59195c164736f6c63430008180033",
									".code": [
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "6DC39EC8"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "97D75776"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "97D75776"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "E3931607"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "EACA243B"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "F2E809E0"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "F36F7C62"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "6DC39EC8"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "88BEDF91"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "8F32D59B"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "450C9D7D"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "450C9D7D"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "4AD47291"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "4ADDC0E8"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "4B634B06"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "51546044"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "6BD22962"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "12065FE0"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "224E80FC"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "23084E5F"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "3C5F07CB"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "44BB9117"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 8494,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5963,
											"end": 6053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5963,
											"end": 6053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6163,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6163,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6163,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5824,
											"end": 5958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5240,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5240,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5240,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4355,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4355,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4355,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5387,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5387,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5387,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6058,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6058,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6058,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5550,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5550,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5550,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6305,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6305,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6305,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7449,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7449,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7449,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4538,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4538,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 301,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 301,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3952,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1102,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1102,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 871,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 871,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2947,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2947,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2947,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6048,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 6053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6250,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6266,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6268,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6294,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6268,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6237,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6295,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6237,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 495,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 495,
											"end": 525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 636,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 587,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 636,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 583,
											"end": 656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 583,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 583,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 644,
											"end": 651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 583,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 706,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 711,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "954FA5EE"
										},
										{
											"begin": 755,
											"end": 759,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 762,
											"end": 771,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 729,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 729,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 711,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 783,
											"end": 794,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 779,
											"end": 862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 779,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 779,
											"end": 862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 818,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 802,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 802,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 831,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 831,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 856,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 831,
											"end": 856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 779,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5824,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5898,
											"end": 5899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5884,
											"end": 5894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5884,
											"end": 5894,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5884,
											"end": 5899,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5876,
											"end": 5900,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5900,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5876,
											"end": 5900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5905,
											"end": 5916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5905,
											"end": 5916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "19254D3800"
										},
										{
											"begin": 5928,
											"end": 5938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5928,
											"end": 5953,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5953,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5953,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5337,
											"end": 5341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5343,
											"end": 5353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5376,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5322,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5322,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4455,
											"end": 4458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4445,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4459,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4445,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4500,
											"end": 4507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4483,
											"end": 4508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4508,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4483,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5492,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5652,
											"end": 5655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5636,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5679,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5636,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6413,
											"end": 6434,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6413,
											"end": 6434,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6449,
											"end": 6464,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6480,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6436,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6482,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6436,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6409,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6409,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6385,
											"end": 6483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6385,
											"end": 6483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6556,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6561,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6620,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6608,
											"end": 6614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6603,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6590,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6590,
											"end": 6619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6590,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6685,
											"end": 6697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6680,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6667,
											"end": 6684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6667,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6651,
											"end": 6698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6651,
											"end": 6698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6725,
											"end": 6738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6754,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6712,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6761,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6712,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6761,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7552,
											"end": 7577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7577,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7543,
											"end": 7548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7543,
											"end": 7577,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7539,
											"end": 7613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7613,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7539,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7634,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7634,
											"end": 7659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4588,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4650,
											"end": 4659,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4661,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4707,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4661,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4634,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4708,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4634,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4758,
											"end": 4768,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4751,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4726,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4770,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4726,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4796,
											"end": 4805,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4789,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4827,
											"end": 4830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4848,
											"end": 4858,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4870,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4836,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4871,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4836,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4887,
											"end": 4890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4876,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4930,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4930,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4909,
											"end": 4984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 4938,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4938,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4978,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4938,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4909,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3952,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3992,
											"end": 4003,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4037,
											"end": 4047,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4027,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4027,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4089,
											"end": 4096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4072,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4097,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4072,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4123,
											"end": 4131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4116,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4132,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4116,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4149,
											"end": 4159,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4137,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4163,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4137,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4207,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4188,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4189,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4207,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4238,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4238,
											"end": 4248,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4225,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4212,
											"end": 4258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4258,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4279,
											"end": 4282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4306,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4288,
											"end": 4316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4317,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4330,
											"end": 4338,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4317,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4344,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 4317,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 4350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 959,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000002"
										},
										{
											"begin": 969,
											"end": 1023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1057,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4E606C47"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2149,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 7839,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7738,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7828,
											"end": 7833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7810,
											"end": 7834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7834,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7810,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5109,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5122,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5122,
											"end": 5125,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5109,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5130,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5109,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5145,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5145,
											"end": 5149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5164,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5177,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5221,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5200,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5222,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5200,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5164,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5223,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 5164,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5227,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5151,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5228,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5151,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5132,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5229,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5132,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5096,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5096,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2488,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6771,
											"end": 6867,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6771,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6854,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6849,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2803,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3160,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5689,
											"end": 5819,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5689,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5777,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5790,
											"end": 5796,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5798,
											"end": 5807,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5777,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5808,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5777,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5813,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5764,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5764,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5814,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5764,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5757,
											"end": 5814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5757,
											"end": 5814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7959,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7844,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7947,
											"end": 7952,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7936,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7941,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7925,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7907,
											"end": 7954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7954,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 7907,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3947,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3055,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3117,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3165,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3144,
											"end": 3195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3144,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3240,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3225,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3240,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3279,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3279,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3205,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3201,
											"end": 3474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3340,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3360,
											"end": 3363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 3349,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3349,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3349,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "PUSH",
											"source": 1,
											"value": "16345785D8A0000"
										},
										{
											"begin": 3399,
											"end": 3405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3414,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3395,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3434,
											"end": 3437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3423,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3423,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3423,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3395,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3322,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3201,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3509,
											"end": 3519,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3499,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3499,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3558,
											"end": 3566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3589,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3568,
											"end": 3589,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3545,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3590,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3545,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3637,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3662,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3624,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3675,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3624,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3620,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3621,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3675,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3692,
											"end": 3702,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3680,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3732,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3797,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3781,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3781,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3904,
											"end": 3914,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3904,
											"end": 3914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3929,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3916,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3916,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3941,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3916,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3891,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3891,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3878,
											"end": 3942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3942,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 7091,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6872,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6978,
											"end": 6984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6967,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6972,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6973,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6953,
											"end": 6977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6953,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 6996,
											"end": 7003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7016,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6992,
											"end": 7050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6992,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6992,
											"end": 7050,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 7024,
											"end": 7044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6992,
											"end": 7050,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6992,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7086,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7070,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7071,
											"end": 7075,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 7091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 7091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 7091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 7091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8151,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7964,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8031,
											"end": 8054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8040,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8041,
											"end": 8045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8031,
											"end": 8046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8031,
											"end": 8054,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8027,
											"end": 8115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8070,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8076,
											"end": 8080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8087,
											"end": 8096,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8087,
											"end": 8109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8115,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8027,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8132,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8137,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8138,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8146,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8156,
											"end": 8491,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8156,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8227,
											"end": 8228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8217,
											"end": 8223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8228,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8213,
											"end": 8248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8254,
											"end": 8268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8320,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8327,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8357,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8349,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8349,
											"end": 8360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 8408,
											"end": 8418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 8383,
											"end": 8394,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8401,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8378,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8372,
											"end": 8382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 8372,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8372,
											"end": 8407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8431,
											"end": 8438,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8482,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 8427,
											"end": 8482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 8447,
											"end": 8475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8475,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 8447,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8482,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 8427,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8491,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8156,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7096,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7196,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7178,
											"end": 7197,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "C8"
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2224,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7221,
											"end": 7231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7221,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7221,
											"end": 7260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7221,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "30D4"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7305,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7305,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7397,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "186A0"
										},
										{
											"begin": 7360,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7373,
											"end": 7377,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7360,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7392,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7360,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7360,
											"end": 7396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7360,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7421,
											"end": 7424,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7409,
											"end": 7439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7439,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7409,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7096,
											"end": 7444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 102,
											"end": 260,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 102,
											"end": 260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 173,
											"end": 177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 188,
											"end": 204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 205,
											"end": 211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 184,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 184,
											"end": 237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 227,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 220,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 220,
											"end": 231,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 237,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 184,
											"end": 237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 250,
											"end": 255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 102,
											"end": 260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 2786,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3048,
											"end": 3065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 2995,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2995,
											"end": 3066,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 2995,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 3144,
											"end": 3146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3129,
											"end": 3147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3076,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 3076,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 3305,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3479,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 3389,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3473,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3594,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 3485,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 3581,
											"end": 3586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 3566,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3587,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 3566,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3564,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3810,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3600,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3802,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 3738,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3803,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 3738,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3810,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3810,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3600,
											"end": 3810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3876,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 3816,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 4024,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 3882,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 3983,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 4010,
											"end": 4015,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 3992,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 3992,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 3983,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4017,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 3983,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 3965,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 4018,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 3965,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 4024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 4024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 4024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4030,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 4144,
											"end": 4149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 4113,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4150,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 4113,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4156,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4156,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 4289,
											"end": 4294,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 4258,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4464,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 4307,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 4451,
											"end": 4456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 4407,
											"end": 4457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4457,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 4407,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4395,
											"end": 4458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4470,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4576,
											"end": 4580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4603,
											"end": 4612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 4708,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 4627,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4711,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 4627,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4718,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4470,
											"end": 4718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4904,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 4724,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4772,
											"end": 4849,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4769,
											"end": 4770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4866,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4859,
											"end": 4874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4897,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4898,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 4987,
											"end": 4988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 4969,
											"end": 4989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4989,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 4969,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 5021,
											"end": 5022,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5003,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 5003,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5023,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5046,
											"end": 5047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5071,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 5058,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5074,
											"end": 5092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 5058,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 5101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5268,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5255,
											"end": 5264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5279,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 5279,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 5428,
											"end": 5430,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5360,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5432,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 5360,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5588,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5445,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5502,
											"end": 5507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5527,
											"end": 5540,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 5576,
											"end": 5581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 5549,
											"end": 5582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5582,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 5549,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5588,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5945,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5594,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5701,
											"end": 5710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5699,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5716,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 5719,
											"end": 5798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 5920,
											"end": 5927,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5911,
											"end": 5917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5909,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5864,
											"end": 5928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5928,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 5864,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 5928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 5928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5945,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 6131,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5951,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6076,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 6077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6100,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6086,
											"end": 6101,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6124,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6125,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6331,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6137,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6177,
											"end": 6181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6197,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6217,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 6197,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6192,
											"end": 6217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6231,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 6249,
											"end": 6250,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6231,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6231,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6231,
											"end": 6251,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 6231,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6275,
											"end": 6276,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6260,
											"end": 6277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6260,
											"end": 6277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6299,
											"end": 6300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6301,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 6287,
											"end": 6324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6304,
											"end": 6322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6324,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 6287,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6331,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6747,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 6337,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6377,
											"end": 6384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6400,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6400,
											"end": 6420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6400,
											"end": 6420,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 6400,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6434,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6454,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 6434,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6454,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6429,
											"end": 6454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6486,
											"end": 6487,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6482,
											"end": 6491,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 6529,
											"end": 6540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6511,
											"end": 6541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6541,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 6511,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6500,
											"end": 6541,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6500,
											"end": 6541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6690,
											"end": 6691,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6681,
											"end": 6688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6692,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6693,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6644,
											"end": 6653,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6707,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 6601,
											"end": 6740,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6740,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 6601,
											"end": 6740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6747,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6337,
											"end": 6747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6933,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 6753,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6801,
											"end": 6878,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6879,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6898,
											"end": 6902,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6888,
											"end": 6903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6926,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6919,
											"end": 6920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6927,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 7124,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 6939,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6979,
											"end": 6980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6996,
											"end": 7016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7016,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 6996,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 7048,
											"end": 7049,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7030,
											"end": 7050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 7030,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7050,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 7074,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7116,
											"end": 7117,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7109,
											"end": 7118,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 7124,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 7124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 7124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 7124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6939,
											"end": 7124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/BlastFurnace.sol",
								"contracts/NativeTransferable.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BLAST()": "97d75776",
							"_blastClaimInterval()": "4addc0e8",
							"buyOres(address)": "88bedf91",
							"calculateOreBuy(uint256,uint256)": "4ad47291",
							"calculateOreBuySimple(uint256)": "51546044",
							"calculateOreSell(uint256)": "44bb9117",
							"claimMyGasFees()": "23084e5f",
							"furnaceRewards(address)": "450c9d7d",
							"getAirdropQualifier(uint256)": "6dc39ec8",
							"getBalance()": "12065fe0",
							"getMyMiners(address)": "4b634b06",
							"getMyOres(address)": "224e80fc",
							"getOresSinceLastHatch(address)": "6bd22962",
							"ingotBalanceOf(address)": "f36f7c62",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"seedMarket()": "3c5f07cb",
							"sellOres()": "e3931607",
							"setBlastClaimInterval(uint256)": "eaca243b",
							"setupBlast(address)": "f2e809e0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blastClaimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"buyOres\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateOreBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateOreBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ores\",\"type\":\"uint256\"}],\"name\":\"calculateOreSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMyGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"furnaceRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAirdropQualifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyOres\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getOresSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"ingotBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellOres\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBlastClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blastAddr\",\"type\":\"address\"}],\"name\":\"setupBlast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastFurnace.sol\":\"BlastFurnace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/BlastFurnace.sol\":{\"keccak256\":\"0x3dc7523427437f59cfe643afe8a18107dc79c0d89caf2c780a96bb838bd45565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c96c1ddc83db255402d97d2dd0071426c2693962841740df5e227f80f19f5fb5\",\"dweb:/ipfs/QmYRrXSVKd3HwjzUZgFGJbnkiSYxn3M36xz16cbnVpnZGD\"]},\"contracts/NativeTransferable.sol\":{\"keccak256\":\"0x153f66ecb39c24a43c876361e23b5197d4427e054d69ab74649a7c13060a34b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198b057a024e80252d81b63e06037f098886e5d137b3be4fd0b420ef39d237f7\",\"dweb:/ipfs/QmSXXMwTxr85k5XvZM6nh2ow6cKTTXouYSg3ptpKeNrgSe\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1056,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "BLAST",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBlast)15"
							},
							{
								"astId": 24,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_lastBlastClaim",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_blastClaimInterval",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_feesClaimed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 148,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "ORES_TO_HATCH_1MINERS",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "PSN",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 172,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "PSNH",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 175,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "devFeeVal",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 178,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "initialized",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 180,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "recAdd",
								"offset": 1,
								"slot": "9",
								"type": "t_address_payable"
							},
							{
								"astId": 184,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "hatcheryMiners",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 188,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "claimedOres",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 192,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "lastHatch",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 196,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "referrals",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 198,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "marketOres",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 202,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_ingotBalances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 205,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_holders",
								"offset": 0,
								"slot": "16",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 209,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_isHolder",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 212,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_airdropQualifiers",
								"offset": 0,
								"slot": "18",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBlast)15": {
								"encoding": "inplace",
								"label": "contract IBlast",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NativeTransferable.sol": {
				"NativeTransferable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTransfer",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTransfer\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NativeTransferable.sol\":\"NativeTransferable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NativeTransferable.sol\":{\"keccak256\":\"0x153f66ecb39c24a43c876361e23b5197d4427e054d69ab74649a7c13060a34b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198b057a024e80252d81b63e06037f098886e5d137b3be4fd0b420ef39d237f7\",\"dweb:/ipfs/QmSXXMwTxr85k5XvZM6nh2ow6cKTTXouYSg3ptpKeNrgSe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":260:303  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104078061005c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:3:-:0;;;260:43;;;;;;;;;;288:10;279:6;;:19;;;;;;;;;;;;;;;;;;61:860;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_1156": {
									"entryPoint": 507,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_1103": {
									"entryPoint": 394,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1083": {
									"entryPoint": 355,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1120": {
									"entryPoint": 176,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1132": {
									"entryPoint": 479,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:5",
										"nodeType": "YulBlock",
										"src": "0:1952:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "184:51:5",
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nativeSrc": "194:35:5",
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nativeSrc": "205:24:5",
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:5",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:5",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nativeSrc": "306:53:5",
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nativeSrc": "328:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nativeSrc": "316:37:5",
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nativeSrc": "316:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:5",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:5",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nativeSrc": "463:124:5",
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nativeSrc": "473:26:5",
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:5",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:18:5",
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:5",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nativeSrc": "562:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nativeSrc": "509:71:5",
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nativeSrc": "509:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:5",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:5",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:5",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nativeSrc": "635:48:5",
													"nodeType": "YulBlock",
													"src": "635:48:5",
													"statements": [
														{
															"nativeSrc": "645:32:5",
															"nodeType": "YulAssignment",
															"src": "645:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:5"
																		},
																		"nativeSrc": "663:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:5"
																},
																"nativeSrc": "656:21:5",
																"nodeType": "YulFunctionCall",
																"src": "656:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:5",
														"nodeType": "YulTypedName",
														"src": "617:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:5",
														"nodeType": "YulTypedName",
														"src": "627:7:5",
														"type": ""
													}
												],
												"src": "593:90:5"
											},
											{
												"body": {
													"nativeSrc": "748:50:5",
													"nodeType": "YulBlock",
													"src": "748:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:5"
																		},
																		"nativeSrc": "770:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:5"
																},
																"nativeSrc": "758:34:5",
																"nodeType": "YulFunctionCall",
																"src": "758:34:5"
															},
															"nativeSrc": "758:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:5",
														"nodeType": "YulTypedName",
														"src": "736:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:5",
														"nodeType": "YulTypedName",
														"src": "743:3:5",
														"type": ""
													}
												],
												"src": "689:109:5"
											},
											{
												"body": {
													"nativeSrc": "896:118:5",
													"nodeType": "YulBlock",
													"src": "896:118:5",
													"statements": [
														{
															"nativeSrc": "906:26:5",
															"nodeType": "YulAssignment",
															"src": "906:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:5",
																		"nodeType": "YulLiteral",
																		"src": "929:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:5"
																},
																"nativeSrc": "914:18:5",
																"nodeType": "YulFunctionCall",
																"src": "914:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:5"
																		},
																		"nativeSrc": "989:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:5"
																},
																"nativeSrc": "942:65:5",
																"nodeType": "YulFunctionCall",
																"src": "942:65:5"
															},
															"nativeSrc": "942:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:5",
														"nodeType": "YulTypedName",
														"src": "868:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:5",
														"nodeType": "YulTypedName",
														"src": "880:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:5",
														"nodeType": "YulTypedName",
														"src": "891:4:5",
														"type": ""
													}
												],
												"src": "804:210:5"
											},
											{
												"body": {
													"nativeSrc": "1060:35:5",
													"nodeType": "YulBlock",
													"src": "1060:35:5",
													"statements": [
														{
															"nativeSrc": "1070:19:5",
															"nodeType": "YulAssignment",
															"src": "1070:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:5"
																},
																"nativeSrc": "1080:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:5",
														"nodeType": "YulTypedName",
														"src": "1053:6:5",
														"type": ""
													}
												],
												"src": "1020:75:5"
											},
											{
												"body": {
													"nativeSrc": "1190:28:5",
													"nodeType": "YulBlock",
													"src": "1190:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:5"
																},
																"nativeSrc": "1200:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:5"
															},
															"nativeSrc": "1200:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:5"
											},
											{
												"body": {
													"nativeSrc": "1313:28:5",
													"nodeType": "YulBlock",
													"src": "1313:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:5"
																},
																"nativeSrc": "1323:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:5"
															},
															"nativeSrc": "1323:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:5"
											},
											{
												"body": {
													"nativeSrc": "1390:79:5",
													"nodeType": "YulBlock",
													"src": "1390:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:5",
																"nodeType": "YulBlock",
																"src": "1447:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:5"
																			},
																			"nativeSrc": "1449:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:5"
																		},
																		"nativeSrc": "1449:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:5"
																				},
																				"nativeSrc": "1420:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:5"
																		},
																		"nativeSrc": "1410:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:5"
																},
																"nativeSrc": "1403:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:5"
															},
															"nativeSrc": "1400:63:5",
															"nodeType": "YulIf",
															"src": "1400:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:5",
														"nodeType": "YulTypedName",
														"src": "1383:5:5",
														"type": ""
													}
												],
												"src": "1347:122:5"
											},
											{
												"body": {
													"nativeSrc": "1527:87:5",
													"nodeType": "YulBlock",
													"src": "1527:87:5",
													"statements": [
														{
															"nativeSrc": "1537:29:5",
															"nodeType": "YulAssignment",
															"src": "1537:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:5"
																},
																"nativeSrc": "1546:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:5"
																},
																"nativeSrc": "1575:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:5"
															},
															"nativeSrc": "1575:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:5",
														"nodeType": "YulTypedName",
														"src": "1505:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:5",
														"nodeType": "YulTypedName",
														"src": "1513:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:5",
														"nodeType": "YulTypedName",
														"src": "1521:5:5",
														"type": ""
													}
												],
												"src": "1475:139:5"
											},
											{
												"body": {
													"nativeSrc": "1686:263:5",
													"nodeType": "YulBlock",
													"src": "1686:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:5",
																"nodeType": "YulBlock",
																"src": "1732:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:5"
																			},
																			"nativeSrc": "1734:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:5"
																		},
																		"nativeSrc": "1734:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:5"
																		},
																		"nativeSrc": "1703:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:5"
																},
																"nativeSrc": "1699:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:5"
															},
															"nativeSrc": "1696:119:5",
															"nodeType": "YulIf",
															"src": "1696:119:5"
														},
														{
															"nativeSrc": "1825:117:5",
															"nodeType": "YulBlock",
															"src": "1825:117:5",
															"statements": [
																{
																	"nativeSrc": "1840:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:5"
																				},
																				"nativeSrc": "1900:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:5"
																		},
																		"nativeSrc": "1879:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:5",
														"nodeType": "YulTypedName",
														"src": "1656:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:5",
														"nodeType": "YulTypedName",
														"src": "1667:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:5",
														"nodeType": "YulTypedName",
														"src": "1679:6:5",
														"type": ""
													}
												],
												"src": "1620:329:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:111;;;:::i;:::-;;308:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;531:111;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;308:70::-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;443:83::-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;647:100::-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;752:166::-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206200",
								"executionCost": "24514",
								"totalCost": "230714"
							},
							"external": {
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferOwnership(address)": "27997"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "8F32D59B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/BlastFurnace.sol",
								"contracts/NativeTransferable.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1056,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":61:5718  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":61:5718  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH24 0x3954B2506FD2555C37DD4481A8114673A049FC165BB79E1A PUSH7 0x855F7C61466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "61:5657:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH24 0x3954B2506FD2555C37DD4481A8114673A049FC165BB79E1A PUSH7 0x855F7C61466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "61:5657:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/BlastFurnace.sol",
								"contracts/NativeTransferable.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BlastClaimable.sol": {
				"ast": {
					"absolutePath": "contracts/BlastClaimable.sol",
					"exportedSymbols": {
						"BlastClaimable": [
							133
						],
						"IBlast": [
							15
						],
						"Ownable": [
							1157
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 134,
							"sourceUnit": 1158,
							"src": "59:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlast",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "IBlast",
							"nameLocation": "96:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4e606c47",
									"id": 5,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureClaimableGas",
									"nameLocation": "116:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:0:0"
									},
									"scope": 15,
									"src": "107:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "954fa5ee",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAllGas",
									"nameLocation": "163:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "183:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "175:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "208:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "200:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:44:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:0"
									},
									"scope": 15,
									"src": "154:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "86:163:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 16,
										"name": "Ownable",
										"nameLocations": [
											"289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1157,
										"src": "289:7:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:0"
								}
							],
							"canonicalName": "BlastClaimable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133,
								1157
							],
							"name": "BlastClaimable",
							"nameLocation": "271:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "97d75776",
									"id": 20,
									"mutability": "mutable",
									"name": "BLAST",
									"nameLocation": "315:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "301:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBlast_$15",
										"typeString": "contract IBlast"
									},
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "IBlast",
											"nameLocations": [
												"301:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 15,
											"src": "301:6:0"
										},
										"referencedDeclaration": 15,
										"src": "301:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBlast_$15",
											"typeString": "contract IBlast"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_lastBlastClaim",
									"nameLocation": "352:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "324:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "324:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "343:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4addc0e8",
									"id": 27,
									"mutability": "mutable",
									"name": "_blastClaimInterval",
									"nameLocation": "388:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "373:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "410:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_feesClaimed",
									"nameLocation": "437:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "420:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "420:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "490:376:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "recipient",
														"nameLocation": "503:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "495:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 32,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "495:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"expression": {
														"id": 34,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "515:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "519:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "515:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "495:30:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "lastClaim",
														"nameLocation": "538:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "530:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"baseExpression": {
														"id": 39,
														"name": "_lastBlastClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "550:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 41,
													"indexExpression": {
														"id": 40,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "550:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "530:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 43,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "587:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 44,
															"name": "_blastClaimInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "599:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "587:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 46,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "621:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "627:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "621:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "587:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "583:73:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "638:18:0",
													"statements": [
														{
															"functionReturnParameters": 31,
															"id": 49,
															"nodeType": "Return",
															"src": "644:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 52,
															"name": "_lastBlastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "662:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 54,
														"indexExpression": {
															"id": 53,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "678:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "662:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 55,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "697:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "691:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "662:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "662:44:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "claimed",
														"nameLocation": "719:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "711:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 65,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "755:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BlastClaimable_$133",
																		"typeString": "contract BlastClaimable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BlastClaimable_$133",
																		"typeString": "contract BlastClaimable"
																	}
																],
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "747:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 63,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "747:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 67,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "762:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 61,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "729:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$15",
																"typeString": "contract IBlast"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "735:11:0",
														"memberName": "claimAllGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "729:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) external returns (uint256)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "711:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "793:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "783:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "779:83:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "796:66:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "_feesClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "802:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 74,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "802:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "802:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 78,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "848:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 77,
																	"name": "blastFeesClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "831:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "831:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "831:25:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "23084e5f",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimMyGasFees",
									"nameLocation": "464:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:0:0"
									},
									"scope": 133,
									"src": "455:411:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "929:168:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "blastAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "938:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "951:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 92,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "951:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "951:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "938:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "IfStatement",
												"src": "934:95:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "963:66:0",
													"statements": [
														{
															"expression": {
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 97,
																	"name": "blastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "969:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "307834333030303030303030303030303030303030303030303030303030303030303030303030303032",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x4300000000000000000000000000000000000002"
																},
																"src": "969:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 100,
															"nodeType": "ExpressionStatement",
															"src": "969:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "BLAST",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1033:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlast_$15",
															"typeString": "contract IBlast"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 105,
																"name": "blastAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1048:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 104,
															"name": "IBlast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBlast_$15_$",
																"typeString": "type(contract IBlast)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1041:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlast_$15",
															"typeString": "contract IBlast"
														}
													},
													"src": "1033:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBlast_$15",
														"typeString": "contract IBlast"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1033:25:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 109,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$15",
																"typeString": "contract IBlast"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1069:21:0",
														"memberName": "configureClaimableGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1063:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1063:29:0"
											}
										]
									},
									"functionSelector": "f2e809e0",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 89,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "onlyOwner",
												"nameLocations": [
													"919:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1092,
												"src": "919:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:9:0"
										}
									],
									"name": "setupBlast",
									"nameLocation": "880:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "blastAddr",
												"nameLocation": "899:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "891:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:19:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:0"
									},
									"scope": 133,
									"src": "871:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1170:40:0",
										"statements": [
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "_blastClaimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1175:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 123,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1175:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1175:30:0"
											}
										]
									},
									"functionSelector": "eaca243b",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "onlyOwner",
												"nameLocations": [
													"1160:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1092,
												"src": "1160:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1160:9:0"
										}
									],
									"name": "setBlastClaimInterval",
									"nameLocation": "1111:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "1141:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1133:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:18:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:0"
									},
									"scope": 133,
									"src": "1102:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blastFeesClaimed",
									"nameLocation": "1224:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:15:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:0"
									},
									"scope": 133,
									"src": "1215:58:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 134,
							"src": "253:1023:0",
							"usedErrors": [],
							"usedEvents": [
								1060,
								1066
							]
						}
					],
					"src": "33:1245:0"
				},
				"id": 0
			},
			"contracts/BlastFurnace.sol": {
				"ast": {
					"absolutePath": "contracts/BlastFurnace.sol",
					"exportedSymbols": {
						"BlastClaimable": [
							133
						],
						"BlastFurnace": [
							1020
						],
						"IBlast": [
							15
						],
						"NativeTransferable": [
							1052
						],
						"Ownable": [
							1157
						],
						"SafeMath": [
							1468
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "1640:24:1"
						},
						{
							"absolutePath": "contracts/BlastClaimable.sol",
							"file": "./BlastClaimable.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 134,
							"src": "1666:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NativeTransferable.sol",
							"file": "./NativeTransferable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 1053,
							"src": "1698:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 1469,
							"src": "1734:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 139,
										"name": "BlastClaimable",
										"nameLocations": [
											"1797:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 133,
										"src": "1797:14:1"
									},
									"id": 140,
									"nodeType": "InheritanceSpecifier",
									"src": "1797:14:1"
								},
								{
									"baseName": {
										"id": 141,
										"name": "NativeTransferable",
										"nameLocations": [
											"1813:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1052,
										"src": "1813:18:1"
									},
									"id": 142,
									"nodeType": "InheritanceSpecifier",
									"src": "1813:18:1"
								}
							],
							"canonicalName": "BlastFurnace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								1052,
								133,
								1157
							],
							"name": "BlastFurnace",
							"nameLocation": "1781:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 145,
									"libraryName": {
										"id": 143,
										"name": "SafeMath",
										"nameLocations": [
											"1842:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1468,
										"src": "1842:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1836:27:1",
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1855:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "ORES_TO_HATCH_1MINERS",
									"nameLocation": "1884:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "1868:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1868:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303830303030",
										"id": 147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1908:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1080000_by_1",
											"typeString": "int_const 1080000"
										},
										"value": "1080000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 151,
									"mutability": "constant",
									"name": "MAX_INGOTS",
									"nameLocation": "1993:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "1968:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1968:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2006:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 154,
									"mutability": "constant",
									"name": "BIG_INGOT_REWARD",
									"nameLocation": "2040:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2015:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2015:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2059:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 157,
									"mutability": "constant",
									"name": "SMALL_REF_INGOT_REWARD",
									"nameLocation": "2091:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2066:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2066:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2116:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 160,
									"mutability": "constant",
									"name": "INGOT_FRAGMENT",
									"nameLocation": "2149:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2124:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2124:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2166:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 163,
									"mutability": "constant",
									"name": "INGOT_REWARD_MULTIPLIER",
									"nameLocation": "2198:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2173:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2173:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3136",
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2224:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 166,
									"mutability": "constant",
									"name": "REFERRAL_REWARD",
									"nameLocation": "2265:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2240:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2240:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31325f353030",
										"id": 165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2283:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12500_by_1",
											"typeString": "int_const 12500"
										},
										"value": "12_500"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "PSN",
									"nameLocation": "2332:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2316:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2316:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2338:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 172,
									"mutability": "mutable",
									"name": "PSNH",
									"nameLocation": "2363:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2347:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2347:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2370:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "devFeeVal",
									"nameLocation": "2394:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2378:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2378:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2406:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "2424:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2411:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 176,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2411:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2438:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "recAdd",
									"nameLocation": "2471:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2447:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 179,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2447:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "hatcheryMiners",
									"nameLocation": "2517:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2481:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2489:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2481:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2500:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "claimedOres",
									"nameLocation": "2571:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2535:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 187,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2543:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2535:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2554:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "lastHatch",
									"nameLocation": "2622:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2586:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 191,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2594:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2586:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 190,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2605:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "2671:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2635:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 195,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2643:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2635:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 194,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2654:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 198,
									"mutability": "mutable",
									"name": "marketOres",
									"nameLocation": "2700:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2684:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2684:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "_ingotBalances",
									"nameLocation": "2752:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2716:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 201,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2724:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2716:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2735:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_holders",
									"nameLocation": "2790:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2772:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 203,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2772:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 204,
										"nodeType": "ArrayTypeName",
										"src": "2772:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 209,
									"mutability": "mutable",
									"name": "_isHolder",
									"nameLocation": "2835:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2802:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 208,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 206,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2810:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2802:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 207,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2821:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 212,
									"mutability": "mutable",
									"name": "_airdropQualifiers",
									"nameLocation": "2866:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "2848:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 210,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2848:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 211,
										"nodeType": "ArrayTypeName",
										"src": "2848:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2904:38:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "recAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2909:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 218,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2926:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2930:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2926:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2918:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2918:8:1",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2918:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2909:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2909:28:1"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2901:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2904:0:1"
									},
									"scope": 1020,
									"src": "2890:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3014:36:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 231,
														"name": "_ingotBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3026:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 233,
													"indexExpression": {
														"id": 232,
														"name": "who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "3041:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3026:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 230,
												"id": 234,
												"nodeType": "Return",
												"src": "3019:26:1"
											}
										]
									},
									"functionSelector": "f36f7c62",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ingotBalanceOf",
									"nameLocation": "2956:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "2979:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2971:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2970:13:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3005:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3004:9:1"
									},
									"scope": 1020,
									"src": "2947:103:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3112:835:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3125:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3117:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "3117:20:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 247,
														"name": "ref",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "3148:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 248,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3155:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3159:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3155:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3148:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "3144:51:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "3167:28:1",
													"statements": [
														{
															"expression": {
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 251,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "3173:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3187:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3179:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3179:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3179:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3173:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 257,
															"nodeType": "ExpressionStatement",
															"src": "3173:16:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 260,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "3205:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 263,
															"indexExpression": {
																"expression": {
																	"id": 261,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3215:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3219:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3215:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3205:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3238:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3230:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 264,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3230:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3230:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3205:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 269,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "3244:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 272,
															"indexExpression": {
																"expression": {
																	"id": 270,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3254:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3258:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3254:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3244:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3269:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3273:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3269:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3244:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3205:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "3201:273:1",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "3281:193:1",
													"statements": [
														{
															"expression": {
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 277,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "3287:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 280,
																	"indexExpression": {
																		"expression": {
																			"id": 278,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3297:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3301:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3297:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3287:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 281,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "3311:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3287:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "3287:27:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 284,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "3326:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3336:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "3326:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 293,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "3399:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "2e31653138",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3409:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000000000000000_by_1",
																			"typeString": "int_const 100000000000000000"
																		},
																		"value": ".1e18"
																	},
																	"src": "3399:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 302,
																"nodeType": "IfStatement",
																"src": "3395:74:1",
																"trueBody": {
																	"id": 301,
																	"nodeType": "Block",
																	"src": "3416:53:1",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 297,
																						"name": "ref",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 238,
																						"src": "3434:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 298,
																						"name": "SMALL_REF_INGOT_REWARD",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 157,
																						"src": "3439:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 296,
																					"name": "_addIngots",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 812,
																					"src": "3423:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																						"typeString": "function (address,uint256)"
																					}
																				},
																				"id": 299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3423:39:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 300,
																			"nodeType": "ExpressionStatement",
																			"src": "3423:39:1"
																		}
																	]
																}
															},
															"id": 303,
															"nodeType": "IfStatement",
															"src": "3322:147:1",
															"trueBody": {
																"id": 292,
																"nodeType": "Block",
																"src": "3342:47:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 288,
																					"name": "ref",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 238,
																					"src": "3360:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 289,
																					"name": "BIG_INGOT_REWARD",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 154,
																					"src": "3365:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 287,
																				"name": "_addIngots",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "3349:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3349:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 291,
																		"nodeType": "ExpressionStatement",
																		"src": "3349:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "oresUsed",
														"nameLocation": "3488:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "3480:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3480:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 309,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3509:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3513:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3509:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 308,
														"name": "getMyOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3499:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3499:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3480:40:1"
											},
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "newMiners",
														"nameLocation": "3533:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "3525:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [
														{
															"id": 317,
															"name": "oresUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3558:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 318,
															"name": "ORES_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3568:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 315,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "3545:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3554:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "3545:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3545:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3525:65:1"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 321,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3595:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 324,
														"indexExpression": {
															"expression": {
																"id": 322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3610:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3614:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3610:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3595:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 327,
																	"name": "hatcheryMiners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "3637:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 330,
																"indexExpression": {
																	"expression": {
																		"id": 328,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3652:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3656:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3652:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3637:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 331,
																"name": "newMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "3665:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 325,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3624:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3633:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1332,
															"src": "3624:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3624:51:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3595:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3595:80:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3692:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3696:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3692:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3704:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 335,
														"name": "_setClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "3680:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3680:26:1"
											},
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 341,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3711:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 344,
														"indexExpression": {
															"expression": {
																"id": 342,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3721:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3725:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3721:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3711:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 345,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3735:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3741:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3735:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3711:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3711:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 350,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "3797:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 353,
															"indexExpression": {
																"expression": {
																	"id": 351,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3807:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3811:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3807:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3797:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "oresUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 349,
														"name": "_rewardReferral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "3781:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3781:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "3781:48:1"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 357,
														"name": "marketOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "3878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 360,
																"name": "marketOres",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "3904:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 363,
																		"name": "oresUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "3929:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "35",
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3939:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		}
																	],
																	"expression": {
																		"id": 361,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "3916:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3925:3:1",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1377,
																	"src": "3916:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3916:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 358,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "3891:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3900:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1332,
															"src": "3891:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3891:51:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3878:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3878:64:1"
											}
										]
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hatchOres",
									"nameLocation": "3064:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "3083:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3075:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3096:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3088:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:29:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3112:0:1"
									},
									"scope": 1020,
									"src": "3055:892:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3979:371:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3992:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3984:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3984:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "3984:20:1"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "hasOres",
														"nameLocation": "4017:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "4009:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4037:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4041:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4037:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 379,
														"name": "getMyOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "4027:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4027:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4009:39:1"
											},
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "oreValue",
														"nameLocation": "4061:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "4053:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4053:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"id": 387,
															"name": "hasOres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "4089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "calculateOreSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4072:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4072:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4053:44:1"
											},
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4110:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "4102:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4102:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [
														{
															"id": 393,
															"name": "oreValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "4123:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "4116:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4116:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4102:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 397,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4149:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4153:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4149:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4161:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 396,
														"name": "_setClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4137:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4137:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "4137:26:1"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 402,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4168:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 405,
														"indexExpression": {
															"expression": {
																"id": 403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4178:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4182:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4178:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4168:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 406,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4192:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4198:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4192:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4168:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "4168:39:1"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "marketOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "4212:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 413,
																"name": "marketOres",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "4238:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 414,
																"name": "hasOres",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "4250:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 411,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4225:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4234:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1332,
															"src": "4225:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4225:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4212:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "4212:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "4279:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 418,
															"name": "recAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4263:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4270:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4263:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "4263:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 432,
																	"name": "oreValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4330:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 433,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "4340:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "4317:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4326:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1347,
																"src": "4317:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4317:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 426,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4296:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4300:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4296:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4288:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4288:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4288:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4308:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4288:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "4288:57:1"
											}
										]
									},
									"functionSelector": "e3931607",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellOres",
									"nameLocation": "3961:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3969:2:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3979:0:1"
									},
									"scope": 1020,
									"src": "3952:398:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "4422:111:1",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "hasOres",
														"nameLocation": "4435:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "4427:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4427:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"arguments": [
														{
															"id": 448,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "4455:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 447,
														"name": "getMyOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "4445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4445:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4427:32:1"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "oreValue",
														"nameLocation": "4472:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "4464:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4464:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"arguments": [
														{
															"id": 454,
															"name": "hasOres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4500:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "calculateOreSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4483:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4483:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4464:44:1"
											},
											{
												"expression": {
													"id": 457,
													"name": "oreValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "4520:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 458,
												"nodeType": "Return",
												"src": "4513:15:1"
											}
										]
									},
									"functionSelector": "450c9d7d",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "furnaceRewards",
									"nameLocation": "4364:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "4387:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4379:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:13:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4413:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:9:1"
									},
									"scope": 1020,
									"src": "4355:178:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "4583:405:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4596:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4588:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4588:20:1"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "oresBought",
														"nameLocation": "4621:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "4613:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4613:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4650:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4654:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4650:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 478,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4682:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																					"typeString": "contract BlastFurnace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																					"typeString": "contract BlastFurnace"
																				}
																			],
																			"id": 477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4674:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 476,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4674:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4674:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4688:7:1",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "4674:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 481,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4697:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4701:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4697:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 474,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "4661:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4670:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1347,
																"src": "4661:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4661:46:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "calculateOreBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "4634:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4634:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4613:95:1"
											},
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "oresBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "4713:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 489,
																"name": "oresBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "4739:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 491,
																		"name": "oresBought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "4758:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 490,
																	"name": "devFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "4751:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4751:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 487,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4726:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4735:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1347,
															"src": "4726:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4726:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4713:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "4713:57:1"
											},
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4783:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "4775:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4775:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4796:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4800:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4796:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "4789:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4789:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4775:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4827:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 503,
															"name": "recAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4811:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4818:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4811:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4811:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "4811:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 510,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4848:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4852:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4848:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "oresBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4860:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "_addClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "4836:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4836:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "4836:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "ref",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "4887:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4892:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4896:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4892:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "_hatchOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "4876:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "4876:26:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 521,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4913:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4917:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4913:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4926:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "4913:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "IfStatement",
												"src": "4909:75:1",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "4932:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4949:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4953:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4949:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 528,
																		"name": "BIG_INGOT_REWARD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "4961:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 525,
																	"name": "_addIngots",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "4938:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4938:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 530,
															"nodeType": "ExpressionStatement",
															"src": "4938:40:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "88bedf91",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyOres",
									"nameLocation": "4547:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "4563:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "4555:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:13:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4583:0:1"
									},
									"scope": 1020,
									"src": "4538:450:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5084:151:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 549,
																	"name": "PSN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5122:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 550,
																	"name": "bs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "5127:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 547,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5109:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5118:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "5109:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5109:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 554,
																	"name": "PSNH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "5145:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 561,
																							"name": "PSN",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "5190:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 562,
																							"name": "rs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 538,
																							"src": "5195:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 559,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1468,
																							"src": "5177:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5186:3:1",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1362,
																						"src": "5177:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5177:21:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 566,
																							"name": "PSNH",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 172,
																							"src": "5213:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 567,
																							"name": "rt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 536,
																							"src": "5219:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 564,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1468,
																							"src": "5200:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5209:3:1",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1362,
																						"src": "5200:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5200:22:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 557,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1468,
																					"src": "5164:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5173:3:1",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1332,
																				"src": "5164:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5164:59:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 570,
																			"name": "rt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "5225:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 555,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "5151:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5160:3:1",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1377,
																		"src": "5151:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5151:77:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 552,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5132:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5141:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1332,
																"src": "5132:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5132:97:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 545,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "5096:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5105:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "5096:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:134:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 574,
												"nodeType": "Return",
												"src": "5089:141:1"
											}
										]
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTrade",
									"nameLocation": "5002:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "rt",
												"nameLocation": "5025:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5017:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5017:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "rs",
												"nameLocation": "5037:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5029:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "bs",
												"nameLocation": "5049:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5041:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5016:36:1"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 1020,
									"src": "4993:242:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5310:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "ores",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "5337:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 585,
															"name": "marketOres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5343:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5363:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																			"typeString": "contract BlastFurnace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																			"typeString": "contract BlastFurnace"
																		}
																	],
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5355:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 586,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5355:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5355:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5369:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5355:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 583,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "5322:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5322:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 582,
												"id": 592,
												"nodeType": "Return",
												"src": "5315:62:1"
											}
										]
									},
									"functionSelector": "44bb9117",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateOreSell",
									"nameLocation": "5249:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "ores",
												"nameLocation": "5274:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5266:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:14:1"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5301:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5300:9:1"
									},
									"scope": 1020,
									"src": "5240:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "5480:65:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5507:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 605,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5512:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 606,
															"name": "marketOres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5529:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "5492:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 608,
												"nodeType": "Return",
												"src": "5485:55:1"
											}
										]
									},
									"functionSelector": "4ad47291",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateOreBuy",
									"nameLocation": "5396:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "5420:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "5412:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "contractBalance",
												"nameLocation": "5433:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "5425:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:38:1"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "5471:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5470:9:1"
									},
									"scope": 1020,
									"src": "5387:158:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5624:60:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5652:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5665:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																			"typeString": "contract BlastFurnace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																			"typeString": "contract BlastFurnace"
																		}
																	],
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5657:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 619,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5657:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5657:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5671:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5657:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "calculateOreBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "5636:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5636:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 616,
												"id": 625,
												"nodeType": "Return",
												"src": "5629:50:1"
											}
										]
									},
									"functionSelector": "51546044",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateOreBuySimple",
									"nameLocation": "5559:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "5589:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5581:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:13:1"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:9:1"
									},
									"scope": 1020,
									"src": "5550:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5752:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 638,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "5790:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "devFeeVal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "5798:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 636,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5777:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5786:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "5777:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5777:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 634,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "5764:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5773:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "5764:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5764:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 633,
												"id": 643,
												"nodeType": "Return",
												"src": "5757:57:1"
											}
										]
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "devFee",
									"nameLocation": "5698:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5713:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5705:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5704:16:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5743:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5743:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5742:9:1"
									},
									"scope": 1020,
									"src": "5689:130:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5871:87:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 651,
																"name": "marketOres",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "5884:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5898:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5884:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5876:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5876:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "5876:24:1"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "5905:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5919:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5905:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "5905:18:1"
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 660,
														"name": "marketOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "5928:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313038303030303030303030",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5941:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_108000000000_by_1",
															"typeString": "int_const 108000000000"
														},
														"value": "108000000000"
													},
													"src": "5928:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "5928:25:1"
											}
										]
									},
									"functionSelector": "3c5f07cb",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 648,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 647,
												"name": "onlyOwner",
												"nameLocations": [
													"5861:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1092,
												"src": "5861:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5861:9:1"
										}
									],
									"name": "seedMarket",
									"nameLocation": "5833:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5843:2:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5871:0:1"
									},
									"scope": 1020,
									"src": "5824:134:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "6015:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 672,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6035:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																	"typeString": "contract BlastFurnace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BlastFurnace_$1020",
																	"typeString": "contract BlastFurnace"
																}
															],
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6027:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 670,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6027:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6027:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6041:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6027:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 675,
												"nodeType": "Return",
												"src": "6020:28:1"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "5972:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5982:2:1"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "6006:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:9:1"
									},
									"scope": 1020,
									"src": "5963:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "6122:36:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 684,
														"name": "hatcheryMiners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "6134:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 686,
													"indexExpression": {
														"id": 685,
														"name": "adr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6149:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6134:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 683,
												"id": 687,
												"nodeType": "Return",
												"src": "6127:26:1"
											}
										]
									},
									"functionSelector": "4b634b06",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyMiners",
									"nameLocation": "6067:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "6087:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6079:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6078:13:1"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6113:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:1"
									},
									"scope": 1020,
									"src": "6058:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6225:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 698,
																"name": "claimedOres",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "6250:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 700,
															"indexExpression": {
																"id": 699,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "6262:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6250:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 702,
																	"name": "adr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "6290:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 701,
																"name": "getOresSinceLastHatch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "6268:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6268:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 696,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "6237:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1332,
														"src": "6237:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6237:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 705,
												"nodeType": "Return",
												"src": "6230:65:1"
											}
										]
									},
									"functionSelector": "224e80fc",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyOres",
									"nameLocation": "6172:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "6190:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6182:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:13:1"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6216:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6215:9:1"
									},
									"scope": 1020,
									"src": "6163:137:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "6380:386:1",
										"statements": [
											{
												"assignments": [
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "secondsPassed",
														"nameLocation": "6393:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "6385:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 714,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6385:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"arguments": [
														{
															"id": 717,
															"name": "ORES_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "6413:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 720,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6449:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6455:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6449:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"id": 722,
																		"name": "lastHatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "6466:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 724,
																	"indexExpression": {
																		"id": 723,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "6476:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6466:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "6436:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6445:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1347,
																"src": "6436:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6436:46:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "6409:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6409:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6385:98:1"
											},
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "ingots",
														"nameLocation": "6533:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "6525:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"baseExpression": {
														"id": 730,
														"name": "_ingotBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "6542:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 732,
													"indexExpression": {
														"id": 731,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "6557:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6542:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6525:37:1"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "timeIncrease",
														"nameLocation": "6575:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "6567:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6567:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "313030",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6639:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 741,
																	"name": "INGOT_FRAGMENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "6620:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6635:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "6620:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6620:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"name": "ingots",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "6608:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 736,
																	"name": "secondsPassed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "6590:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6604:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "6590:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6590:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6616:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "6590:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6590:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6567:77:1"
											},
											{
												"expression": {
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "secondsPassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "6651:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 750,
																"name": "timeIncrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "6685:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 748,
																"name": "secondsPassed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "6667:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6681:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1332,
															"src": "6667:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6667:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6651:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "6651:47:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 756,
															"name": "secondsPassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "6725:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 757,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "6740:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 759,
															"indexExpression": {
																"id": 758,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "6755:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6740:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 754,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "6712:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6721:3:1",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1362,
														"src": "6712:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6712:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 761,
												"nodeType": "Return",
												"src": "6705:56:1"
											}
										]
									},
									"functionSelector": "6bd22962",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOresSinceLastHatch",
									"nameLocation": "6314:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "6344:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6336:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6335:14:1"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6371:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6371:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6370:9:1"
									},
									"scope": 1020,
									"src": "6305:461:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "6837:30:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 772,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6849:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 773,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "6853:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6849:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 776,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "6861:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6849:13:1",
													"trueExpression": {
														"id": 775,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6857:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 771,
												"id": 778,
												"nodeType": "Return",
												"src": "6842:20:1"
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6780:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6792:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "6784:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6803:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "6795:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6783:22:1"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "6828:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6828:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6827:9:1"
									},
									"scope": 1020,
									"src": "6771:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "6930:161:1",
										"statements": [
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "6943:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "6935:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6935:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"arguments": [
														{
															"id": 793,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "6978:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 789,
																"name": "_ingotBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "6953:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 791,
															"indexExpression": {
																"id": 790,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "6968:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6953:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6974:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1332,
														"src": "6953:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6953:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6935:50:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 796,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "6996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 797,
														"name": "MAX_INGOTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "7006:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6996:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "6992:58:1",
												"trueBody": {
													"id": 803,
													"nodeType": "Block",
													"src": "7018:32:1",
													"statements": [
														{
															"expression": {
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 799,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "7024:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 800,
																	"name": "MAX_INGOTS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "7034:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7024:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 802,
															"nodeType": "ExpressionStatement",
															"src": "7024:20:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 805,
															"name": "_ingotBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "7056:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 806,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7071:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7056:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 808,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "7079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7056:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7056:30:1"
											}
										]
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addIngots",
									"nameLocation": "6881:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "6900:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "6892:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6914:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "6906:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6891:30:1"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6930:0:1"
									},
									"scope": 1020,
									"src": "6872:219:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "7156:288:1",
										"statements": [
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "ingots",
														"nameLocation": "7169:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "7161:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7161:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"baseExpression": {
														"id": 821,
														"name": "_ingotBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "7178:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 823,
													"indexExpression": {
														"id": 822,
														"name": "ref",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "7193:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7178:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7161:36:1"
											},
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "ingotPM",
														"nameLocation": "7210:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "7202:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7202:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"id": 832,
																	"name": "INGOT_FRAGMENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "7261:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 829,
																			"name": "INGOT_REWARD_MULTIPLIER",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "7232:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 827,
																			"name": "ingots",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "7221:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7228:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1362,
																		"src": "7221:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7221:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7257:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1377,
																"src": "7221:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7221:55:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 834,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7220:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7202:75:1"
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "rewardIncByT",
														"nameLocation": "7290:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "7282:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 836,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7282:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 838,
														"name": "REFERRAL_REWARD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "7305:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 839,
														"name": "ingotPM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "7323:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7305:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7282:48:1"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "referralOres",
														"nameLocation": "7345:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "7337:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030303030",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7397:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															},
															"value": "100000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100000_by_1",
																"typeString": "int_const 100000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 846,
																	"name": "ores",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "7373:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 847,
																	"name": "rewardIncByT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "7379:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 844,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "7360:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1468_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7369:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "7360:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7360:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7393:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "7360:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7337:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "ref",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "7421:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "referralOres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "7426:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "_addClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "7409:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7409:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "7409:30:1"
											}
										]
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_rewardReferral",
									"nameLocation": "7105:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "7129:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "7121:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7121:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "ores",
												"nameLocation": "7142:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "7134:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7120:27:1"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7156:0:1"
									},
									"scope": 1020,
									"src": "7096:348:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "7534:199:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "7543:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 869,
															"name": "_airdropQualifiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7552:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7571:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7552:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7543:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "7539:74:1",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "7579:34:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 872,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7605:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7592:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address,int_const 0)"
																}
															},
															"functionReturnParameters": 867,
															"id": 878,
															"nodeType": "Return",
															"src": "7585:22:1"
														}
													]
												}
											},
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "7627:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "7619:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 881,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7619:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"baseExpression": {
														"id": 883,
														"name": "_airdropQualifiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "7634:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 885,
													"indexExpression": {
														"id": 884,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "7653:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7634:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7619:40:1"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "7672:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "7664:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"baseExpression": {
														"id": 889,
														"name": "claimedOres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "7682:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 891,
													"indexExpression": {
														"id": 890,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "7694:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7682:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7664:35:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 893,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "7714:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "7720:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 895,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7713:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 867,
												"id": 896,
												"nodeType": "Return",
												"src": "7706:22:1"
											}
										]
									},
									"functionSelector": "6dc39ec8",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAirdropQualifier",
									"nameLocation": "7458:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7486:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "7478:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7477:15:1"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "7516:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "7525:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7515:18:1"
									},
									"scope": 1020,
									"src": "7449:284:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "7805:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 905,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "7828:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "_distributeNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "7810:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7810:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "7810:24:1"
											}
										]
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blastFeesClaimed",
									"nameLocation": "7747:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 902,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7796:8:1"
									},
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7772:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7764:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7763:15:1"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7805:0:1"
									},
									"scope": 1020,
									"src": "7738:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "7902:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7919:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7947:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 918,
																		"name": "claimedOres",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "7925:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 920,
																	"indexExpression": {
																		"id": 919,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "7937:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7925:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7943:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1332,
																"src": "7925:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7925:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_setClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "7907:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "7907:47:1"
											}
										]
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addClaimed",
									"nameLocation": "7853:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "7873:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "7865:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7887:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "7879:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7864:29:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7902:0:1"
									},
									"scope": 1020,
									"src": "7844:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "8022:129:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 934,
															"name": "_isHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "8031:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 935,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "8041:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8031:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8050:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8031:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "8027:88:1",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "8056:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 942,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "8076:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 939,
																		"name": "_holders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "8062:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8071:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8062:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8062:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 944,
															"nodeType": "ExpressionStatement",
															"src": "8062:19:1"
														},
														{
															"expression": {
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_isHolder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "8087:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "8097:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8087:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8105:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8087:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 950,
															"nodeType": "ExpressionStatement",
															"src": "8087:22:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 953,
															"name": "claimedOres",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "8121:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 955,
														"indexExpression": {
															"id": 954,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "8133:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8121:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "8141:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8121:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "8121:25:1"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setClaimed",
									"nameLocation": "7973:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "7993:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7985:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7984:29:1"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8022:0:1"
									},
									"scope": 1020,
									"src": "7964:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8208:283:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "8217:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8227:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8217:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "8213:35:1",
												"trueBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "8230:18:1",
													"statements": [
														{
															"functionReturnParameters": 964,
															"id": 968,
															"nodeType": "Return",
															"src": "8236:7:1"
														}
													]
												}
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "holder",
														"nameLocation": "8262:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "8254:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 971,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8254:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"nodeType": "VariableDeclarationStatement",
												"src": "8254:14:1"
											},
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "cut",
														"nameLocation": "8281:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "8273:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"nodeType": "VariableDeclarationStatement",
												"src": "8273:11:1"
											},
											{
												"body": {
													"id": 1016,
													"nodeType": "Block",
													"src": "8334:153:1",
													"statements": [
														{
															"expression": {
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 988,
																	"name": "holder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "8340:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 989,
																		"name": "_holders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "8349:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 991,
																	"indexExpression": {
																		"id": 990,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "8358:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8349:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8340:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "8340:20:1"
														},
														{
															"expression": {
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 994,
																	"name": "cut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "8366:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1002,
																			"name": "marketOres",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "8408:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 997,
																						"name": "claimedOres",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 188,
																						"src": "8383:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 999,
																					"indexExpression": {
																						"id": 998,
																						"name": "holder",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "8395:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8383:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 995,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 962,
																					"src": "8372:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8379:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1362,
																				"src": "8372:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8372:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8404:3:1",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1377,
																		"src": "8372:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8372:47:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8366:53:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "8366:53:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1006,
																	"name": "cut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "8431:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8437:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8431:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "8427:55:1",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "8440:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1010,
																					"name": "holder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "8463:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "cut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 975,
																					"src": "8471:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1009,
																				"name": "_transferNative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "8447:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8447:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1013,
																		"nodeType": "ExpressionStatement",
																		"src": "8447:28:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "8308:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 982,
															"name": "_holders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "8312:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8321:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8312:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8308:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"initializationExpression": {
													"assignments": [
														978
													],
													"declarations": [
														{
															"constant": false,
															"id": 978,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8301:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1017,
															"src": "8296:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 977,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8296:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 980,
													"initialValue": {
														"hexValue": "30",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8305:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8296:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8329:3:1",
														"subExpression": {
															"id": 985,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "8329:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 987,
													"nodeType": "ExpressionStatement",
													"src": "8329:3:1"
												},
												"nodeType": "ForStatement",
												"src": "8291:196:1"
											}
										]
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeNative",
									"nameLocation": "8165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8191:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8183:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8182:16:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8208:0:1"
									},
									"scope": 1020,
									"src": "8156:335:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "1772:6722:1",
							"usedErrors": [],
							"usedEvents": [
								1051,
								1060,
								1066
							]
						}
					],
					"src": "1640:6856:1"
				},
				"id": 1
			},
			"contracts/NativeTransferable.sol": {
				"ast": {
					"absolutePath": "contracts/NativeTransferable.sol",
					"exportedSymbols": {
						"NativeTransferable": [
							1052
						]
					},
					"id": 1053,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "NativeTransferable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1052,
							"linearizedBaseContracts": [
								1052
							],
							"name": "NativeTransferable",
							"nameLocation": "79:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "179:81:2",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1036,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "205:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1033,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "196:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "188:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "188:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "188:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "200:4:2",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "188:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "188:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "184:53:2",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "214:23:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "227:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1030,
															"id": 1039,
															"nodeType": "Return",
															"src": "220:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1030,
												"id": 1043,
												"nodeType": "Return",
												"src": "243:12:2"
											}
										]
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNative",
									"nameLocation": "111:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "135:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "127:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "147:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "139:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:28:2"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "173:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:6:2"
									},
									"scope": 1052,
									"src": "102:158:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "88479153c5a43e333375e4daf2e98cddbb4cb43428c64efdab6e987c263b6620",
									"id": 1051,
									"name": "NativeTransfer",
									"nameLocation": "271:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "294:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "286:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "305:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:35:2"
									},
									"src": "265:56:2"
								}
							],
							"scope": 1053,
							"src": "61:263:2",
							"usedErrors": [],
							"usedEvents": [
								1051
							]
						}
					],
					"src": "33:293:2"
				},
				"id": 2
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1157
						]
					},
					"id": 1158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1054,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1157,
							"linearizedBaseContracts": [
								1157
							],
							"name": "Ownable",
							"nameLocation": "70:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1056,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "98:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "82:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1055,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 1060,
									"name": "OwnershipRenounced",
									"nameLocation": "116:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "151:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "135:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:31:3"
									},
									"src": "110:56:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1066,
									"name": "OwnershipTransferred",
									"nameLocation": "177:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "214:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "198:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "245:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "229:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:57:3"
									},
									"src": "171:84:3"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "274:29:3",
										"statements": [
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1069,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "279:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1070,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "288:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "292:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "288:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "279:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "279:19:3"
											}
										]
									},
									"id": 1075,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:3"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:0:3"
									},
									"scope": 1157,
									"src": "260:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "355:23:3",
										"statements": [
											{
												"expression": {
													"id": 1080,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1056,
													"src": "367:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1079,
												"id": 1081,
												"nodeType": "Return",
												"src": "360:13:3"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "317:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:3"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "346:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:3"
									},
									"scope": 1157,
									"src": "308:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "404:34:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1086,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "417:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "417:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "409:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "409:18:3"
											},
											{
												"id": 1090,
												"nodeType": "PlaceholderStatement",
												"src": "432:1:3"
											}
										]
									},
									"id": 1092,
									"name": "onlyOwner",
									"nameLocation": "392:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:3"
									},
									"src": "383:55:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "489:37:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1097,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "501:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "501:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1099,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "515:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "501:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1101,
												"nodeType": "Return",
												"src": "494:27:3"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "452:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:3"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "483:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:6:3"
									},
									"scope": 1157,
									"src": "443:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "577:65:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1109,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "606:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1108,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "587:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "EmitStatement",
												"src": "582:31:3"
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1112,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "618:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "627:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1113,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "627:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "627:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "618:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "618:19:3"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"567:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1092,
												"src": "567:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "567:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "540:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:3"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:3"
									},
									"scope": 1157,
									"src": "531:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "709:38:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1128,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "733:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1127,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "714:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "714:28:3"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1124,
												"name": "onlyOwner",
												"nameLocations": [
													"699:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1092,
												"src": "699:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "699:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "656:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "682:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "674:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:18:3"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:3"
									},
									"scope": 1157,
									"src": "647:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "807:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "820:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "840:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "832:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1139,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "832:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "832:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "820:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "812:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "812:31:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1147,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "874:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "882:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1146,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "853:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "EmitStatement",
												"src": "848:43:3"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "896:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "905:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "896:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "896:17:3"
											}
										]
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "761:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "788:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "780:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:18:3"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:0:3"
									},
									"scope": 1157,
									"src": "752:166:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1158,
							"src": "61:860:3",
							"usedErrors": [],
							"usedEvents": [
								1060,
								1066
							]
						}
					],
					"src": "33:890:3"
				},
				"id": 3
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1468
						]
					},
					"id": 1469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1159,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1468,
							"linearizedBaseContracts": [
								1468
							],
							"name": "SafeMath",
							"nameLocation": "69:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "284:104:4",
										"statements": [
											{
												"id": 1189,
												"nodeType": "UncheckedBlock",
												"src": "289:95:4",
												"statements": [
													{
														"assignments": [
															1172
														],
														"declarations": [
															{
																"constant": false,
																"id": 1172,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "313:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1189,
																"src": "305:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1171,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "305:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1176,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "317:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1174,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "321:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "317:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "305:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1177,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "332:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1178,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "332:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1184,
														"nodeType": "IfStatement",
														"src": "328:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "347:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "354:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1182,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "346:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1170,
															"id": 1183,
															"nodeType": "Return",
															"src": "339:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "370:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1186,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "376:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1187,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "369:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1170,
														"id": 1188,
														"nodeType": "Return",
														"src": "362:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "82:123:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "217:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "232:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "224:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "243:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "235:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:22:4"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "269:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "275:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:15:4"
									},
									"scope": 1468,
									"src": "208:180:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "599:85:4",
										"statements": [
											{
												"id": 1217,
												"nodeType": "UncheckedBlock",
												"src": "604:76:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "624:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1204,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "628:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "624:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1210,
														"nodeType": "IfStatement",
														"src": "620:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "638:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1202,
															"id": 1209,
															"nodeType": "Return",
															"src": "631:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "662:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1212,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "668:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1213,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "672:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1215,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "661:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1202,
														"id": 1216,
														"nodeType": "Return",
														"src": "654:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "393:127:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "532:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "547:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "539:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "558:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "550:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:22:4"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "584:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "590:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:15:4"
									},
									"scope": 1468,
									"src": "523:161:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "897:349:4",
										"statements": [
											{
												"id": 1259,
												"nodeType": "UncheckedBlock",
												"src": "902:340:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1231,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "1128:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1133:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1128:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1238,
														"nodeType": "IfStatement",
														"src": "1124:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1144:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1150:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1236,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1143:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1230,
															"id": 1237,
															"nodeType": "Return",
															"src": "1136:16:4"
														}
													},
													{
														"assignments": [
															1240
														],
														"declarations": [
															{
																"constant": false,
																"id": 1240,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1166:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1259,
																"src": "1158:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1158:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1244,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1241,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "1170:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1242,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "1174:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1170:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1158:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1245,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "1185:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1246,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "1189:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1185:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "1194:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1185:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1254,
														"nodeType": "IfStatement",
														"src": "1181:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1205:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1212:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1252,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1204:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1230,
															"id": 1253,
															"nodeType": "Return",
															"src": "1197:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1228:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1256,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "1234:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1257,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1227:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1230,
														"id": 1258,
														"nodeType": "Return",
														"src": "1220:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "689:129:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "830:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "845:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "837:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "856:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "848:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:22:4"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "882:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "888:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:15:4"
									},
									"scope": 1468,
									"src": "821:425:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "1460:86:4",
										"statements": [
											{
												"id": 1287,
												"nodeType": "UncheckedBlock",
												"src": "1465:77:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "1485:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1490:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1485:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1280,
														"nodeType": "IfStatement",
														"src": "1481:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1501:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1508:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1500:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1272,
															"id": 1279,
															"nodeType": "Return",
															"src": "1493:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1524:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1282,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "1530:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1283,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "1534:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1530:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1285,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1523:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1272,
														"id": 1286,
														"nodeType": "Return",
														"src": "1516:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "1251:130:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1393:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1408:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1400:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1419:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1411:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:22:4"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1451:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:15:4"
									},
									"scope": 1468,
									"src": "1384:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "1770:86:4",
										"statements": [
											{
												"id": 1315,
												"nodeType": "UncheckedBlock",
												"src": "1775:77:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1301,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "1795:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1795:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1308,
														"nodeType": "IfStatement",
														"src": "1791:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1811:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1818:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1306,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1810:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1300,
															"id": 1307,
															"nodeType": "Return",
															"src": "1803:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1834:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1310,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "1840:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1311,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "1844:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1840:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1313,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1833:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1300,
														"id": 1314,
														"nodeType": "Return",
														"src": "1826:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "1551:140:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "1703:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1718:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1710:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1729:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1721:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:22:4"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1755:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1755:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1761:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:15:4"
									},
									"scope": 1468,
									"src": "1694:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "2137:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "2149:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "2153:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1330,
												"nodeType": "Return",
												"src": "2142:12:4"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1861:206:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2079:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2091:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2083:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2102:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2094:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:22:4"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2128:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:9:4"
									},
									"scope": 1468,
									"src": "2070:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "2476:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "2488:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "2492:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2488:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1345,
												"nodeType": "Return",
												"src": "2481:12:4"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "2164:242:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2418:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2430:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2422:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2441:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2433:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:22:4"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:9:4"
									},
									"scope": 1468,
									"src": "2409:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "2791:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2803:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "2807:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1360,
												"nodeType": "Return",
												"src": "2796:12:4"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "2503:218:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2733:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2745:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2737:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2756:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2748:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:22:4"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2782:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:9:4"
									},
									"scope": 1468,
									"src": "2724:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "3148:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "3160:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1373,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3164:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3160:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1371,
												"id": 1375,
												"nodeType": "Return",
												"src": "3153:12:4"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "2818:260:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3090:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3102:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "3094:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3113:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "3105:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:22:4"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "3139:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:9:4"
									},
									"scope": 1468,
									"src": "3081:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "3665:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1387,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "3677:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1388,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "3681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1390,
												"nodeType": "Return",
												"src": "3670:12:4"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "3175:420:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "3607:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3619:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "3611:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3630:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "3622:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3610:22:4"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "3656:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:9:4"
									},
									"scope": 1468,
									"src": "3598:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "4219:78:4",
										"statements": [
											{
												"id": 1415,
												"nodeType": "UncheckedBlock",
												"src": "4224:69:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1405,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "4248:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1406,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "4253:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4248:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1408,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "4256:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1404,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4240:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1410,
														"nodeType": "ExpressionStatement",
														"src": "4240:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "4282:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "4286:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4282:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1403,
														"id": 1414,
														"nodeType": "Return",
														"src": "4275:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "3692:429:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4133:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4145:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "4137:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4156:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "4148:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4173:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "4159:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:50:4"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "4210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4209:9:4"
									},
									"scope": 1468,
									"src": "4124:173:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "4851:77:4",
										"statements": [
											{
												"id": 1440,
												"nodeType": "UncheckedBlock",
												"src": "4856:68:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1430,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "4880:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4884:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4880:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1433,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "4887:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1429,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4872:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4872:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1435,
														"nodeType": "ExpressionStatement",
														"src": "4872:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1436,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "4913:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "4917:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1428,
														"id": 1439,
														"nodeType": "Return",
														"src": "4906:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "4302:451:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4765:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4777:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4769:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4788:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4780:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4805:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4791:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1423,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4791:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:50:4"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "4842:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:9:4"
									},
									"scope": 1468,
									"src": "4756:172:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "5638:77:4",
										"statements": [
											{
												"id": 1465,
												"nodeType": "UncheckedBlock",
												"src": "5643:68:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1455,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5667:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5671:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5667:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1458,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "5674:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1454,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5659:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1460,
														"nodeType": "ExpressionStatement",
														"src": "5659:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1461,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "5700:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1462,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5700:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1453,
														"id": 1464,
														"nodeType": "Return",
														"src": "5693:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "4933:607:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5552:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5564:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "5556:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5575:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "5567:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5592:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "5578:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5578:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5555:50:4"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "5629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:9:4"
									},
									"scope": 1468,
									"src": "5543:172:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1469,
							"src": "61:5657:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5687:4"
				},
				"id": 4
			}
		}
	}
}