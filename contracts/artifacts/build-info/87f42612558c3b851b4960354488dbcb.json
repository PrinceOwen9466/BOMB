{
	"id": "87f42612558c3b851b4960354488dbcb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BlastFurnace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n/*\r\n\r\n    ,---,.   ,--,                             ___                ,---,.\r\n  ,'  .'  \\,--.'|                           ,--.'|_            ,'  .' |\r\n,---.' .' ||  | :                           |  | :,'         ,---.'   |         ,--,  __  ,-.      ,---,\r\n|   |  |: |:  : '                 .--.--.   :  : ' :         |   |   .'       ,'_ /|,' ,'/ /|  ,-+-. /  |\r\n:   :  :  /|  ' |     ,--.--.    /  /    '.;__,'  /          :   :  :    .--. |  | :'  | |' | ,--.'|'   |  ,--.--.     ,---.     ,---.\r\n:   |    ; '  | |    /       \\  |  :  /`./|  |   |           :   |  |-,,'_ /| :  . ||  |   ,'|   |  ,\"' | /       \\   /     \\   /     \\\r\n|   :     \\|  | :   .--.  .-. | |  :  ;_  :__,'| :           |   :  ;/||  ' | |  . .'  :  /  |   | /  | |.--.  .-. | /    / '  /    /  |\r\n|   |   . |'  : |__  \\__\\/: . .  \\  \\    `. '  : |__         |   |   .'|  | ' |  | ||  | '   |   | |  | | \\__\\/: . ..    ' /  .    ' / |\r\n'   :  '; ||  | '.'| ,\" .--.; |   `----.   \\|  | '.'|        '   :  '  :  | : ;  ; |;  : |   |   | |  |/  ,\" .--.; |'   ; :__ '   ;   /|\r\n|   |  | ; ;  :    ;/  /  ,.  |  /  /`--'  /;  :    ;        |   |  |  '  :  `--'   \\  , ;   |   | |--'  /  /  ,.  |'   | '.'|'   |  / |\r\n|   :   /  |  ,   /;  :   .'   \\'--'.     / |  ,   /         |   :  \\  :  ,      .-./---'    |   |/     ;  :   .'   \\   :    :|   :    |\r\n|   | ,'    ---`-' |  ,     .-./  `--'---'   ---`-'          |   | ,'   `--`----'            '---'      |  ,     .-./\\   \\  /  \\   \\  /\r\n`----'              `--`---'                                 `----'                                      `--`---'     `----'    `----'\r\n*/\r\n\r\npragma solidity ^0.8.24;\r\nimport \"./Ownable.sol\";\r\nimport \"./BlastClaimable.sol\";\r\nimport \"./NativeTransferable.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\ncontract BlastFurnace is BlastClaimable, NativeTransferable {\r\n\tusing SafeMath for uint256;\r\n\r\n\tuint256 private INGOTS_TO_HATCH_1MINERS = 1080000; //for final version should be seconds in a day\r\n\tuint256 private PSN = 10000;\r\n\tuint256 private PSNH = 5000;\r\n\tuint256 private devFeeVal = 3;\r\n\tbool private initialized = false;\r\n\taddress payable private recAdd;\r\n\tmapping(address => uint256) private hatcheryMiners;\r\n\tmapping(address => uint256) private claimedIngots;\r\n\tmapping(address => uint256) private lastHatch;\r\n\tmapping(address => address) private referrals;\r\n\tuint256 private marketIngots;\r\n\taddress[] public airdropQualifiers;\r\n\r\n\tmapping(address => bool) private _isHolder;\r\n\tmapping(address => bool) private _isAirDropQualifier;\r\n\taddress[] private _holders;\r\n\r\n\tconstructor() {\r\n\t\trecAdd = payable(msg.sender);\r\n\t}\r\n\r\n\tfunction _setClaimed(address addr, uint256 value) private {\r\n\t\tif (_isHolder[addr] != true) {\r\n\t\t\t_holders.push(addr);\r\n\t\t\t_isHolder[addr] = true;\r\n\t\t}\r\n\r\n\t\tclaimedIngots[addr] = value;\r\n\t}\r\n\r\n\tfunction hatchIngots(address ref) public {\r\n\t\trequire(initialized);\r\n\r\n\t\tif (ref == msg.sender) {\r\n\t\t\tref = address(0);\r\n\t\t}\r\n\r\n\t\tif (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {\r\n\t\t\treferrals[msg.sender] = ref;\r\n\t\t}\r\n\r\n\t\tuint256 ingotsUsed = getMyIngots(msg.sender);\r\n\t\tuint256 newMiners = SafeMath.div(ingotsUsed, INGOTS_TO_HATCH_1MINERS);\r\n\t\thatcheryMiners[msg.sender] = SafeMath.add(hatcheryMiners[msg.sender], newMiners);\r\n\t\t_setClaimed(msg.sender, 0);\r\n\t\tlastHatch[msg.sender] = block.timestamp;\r\n\r\n\t\t//send referral ingots\r\n\t\t_setClaimed(referrals[msg.sender], SafeMath.add(claimedIngots[referrals[msg.sender]], SafeMath.div(ingotsUsed, 8)));\r\n\r\n\t\t//boost market to nerf miners hoarding\r\n\t\tmarketIngots = SafeMath.add(marketIngots, SafeMath.div(ingotsUsed, 5));\r\n\t}\r\n\r\n\tfunction sellIngots() public {\r\n\t\trequire(initialized);\r\n\t\tuint256 hasIngots = getMyIngots(msg.sender);\r\n\t\tuint256 IngotValue = calculateIngotSell(hasIngots);\r\n\t\tuint256 fee = devFee(IngotValue);\r\n\t\tclaimedIngots[msg.sender] = 0;\r\n\t\tlastHatch[msg.sender] = block.timestamp;\r\n\t\tmarketIngots = SafeMath.add(marketIngots, hasIngots);\r\n\t\trecAdd.transfer(fee);\r\n\t\tpayable(msg.sender).transfer(SafeMath.sub(IngotValue, fee));\r\n\t}\r\n\r\n\tfunction furnaceRewards(address adr) public view returns (uint256) {\r\n\t\tuint256 hasIngots = getMyIngots(adr);\r\n\t\tuint256 IngotValue = calculateIngotSell(hasIngots);\r\n\t\treturn IngotValue;\r\n\t}\r\n\r\n\tfunction buyIngots(address ref) public payable {\r\n\t\trequire(initialized);\r\n\t\taddress buyer = msg.sender;\r\n\r\n\t\tuint256 ingotsBought = calculateIngotBuy(msg.value, SafeMath.sub(address(this).balance, msg.value));\r\n\t\tingotsBought = SafeMath.sub(ingotsBought, devFee(ingotsBought));\r\n\t\tuint256 fee = devFee(msg.value);\r\n\t\trecAdd.transfer(fee);\r\n\t\t_setClaimed(buyer, SafeMath.add(claimedIngots[buyer], ingotsBought));\r\n\t\thatchIngots(ref);\r\n\r\n\t\tif (msg.value >= .5e18) {\r\n\t\t\tif (_isAirDropQualifier[buyer] != true) {\r\n\t\t\t\t_isAirDropQualifier[buyer] = true;\r\n\t\t\t\tairdropQualifiers.push(buyer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {\r\n\t\treturn SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)));\r\n\t}\r\n\r\n\tfunction calculateIngotSell(uint256 ingots) public view returns (uint256) {\r\n\t\treturn calculateTrade(ingots, marketIngots, address(this).balance);\r\n\t}\r\n\r\n\tfunction calculateIngotBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {\r\n\t\treturn calculateTrade(eth, contractBalance, marketIngots);\r\n\t}\r\n\r\n\tfunction calculateIngotBuySimple(uint256 eth) public view returns (uint256) {\r\n\t\treturn calculateIngotBuy(eth, address(this).balance);\r\n\t}\r\n\r\n\tfunction devFee(uint256 amount) private view returns (uint256) {\r\n\t\treturn SafeMath.div(SafeMath.mul(amount, devFeeVal), 100);\r\n\t}\r\n\r\n\tfunction seedMarket() public payable onlyOwner {\r\n\t\trequire(marketIngots == 0);\r\n\t\tinitialized = true;\r\n\t\tmarketIngots = 108000000000;\r\n\t}\r\n\r\n\tfunction getBalance() public view returns (uint256) {\r\n\t\treturn address(this).balance;\r\n\t}\r\n\r\n\tfunction getMyMiners(address adr) public view returns (uint256) {\r\n\t\treturn hatcheryMiners[adr];\r\n\t}\r\n\r\n\tfunction getMyIngots(address adr) public view returns (uint256) {\r\n\t\treturn SafeMath.add(claimedIngots[adr], getIngotsSinceLastHatch(adr));\r\n\t}\r\n\r\n\tfunction getIngotsSinceLastHatch(address adr) public view returns (uint256) {\r\n\t\tuint256 secondsPassed = min(INGOTS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr]));\r\n\t\treturn SafeMath.mul(secondsPassed, hatcheryMiners[adr]);\r\n\t}\r\n\r\n\tfunction min(uint256 a, uint256 b) private pure returns (uint256) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\r\n\tfunction blastFeesClaimed(uint256 value) internal virtual override {\r\n\t\t_distributeNative(value);\r\n\t}\r\n\r\n\tfunction _distributeNative(uint256 amount) internal {\r\n\t\tif (amount <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddress holder;\r\n\t\tuint256 cut;\r\n\r\n\t\tfor (uint i = 0; i < _holders.length; i++) {\r\n\t\t\tholder = _holders[i];\r\n\t\t\tcut = amount.mul(claimedIngots[holder]).div(marketIngots);\r\n\r\n\t\t\tif (cut > 0) {\r\n\t\t\t\t_transferNative(holder, cut);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nlibrary SafeMath {\r\n\t/**\r\n\t * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tuint256 c = a + b;\r\n\t\t\tif (c < a) return (false, 0);\r\n\t\t\treturn (true, c);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b > a) return (false, 0);\r\n\t\t\treturn (true, a - b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\t// Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n\t\t\t// benefit is lost if 'b' is also tested.\r\n\t\t\t// See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n\t\t\tif (a == 0) return (true, 0);\r\n\t\t\tuint256 c = a * b;\r\n\t\t\tif (c / a != b) return (false, 0);\r\n\t\t\treturn (true, c);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b == 0) return (false, 0);\r\n\t\t\treturn (true, a / b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b == 0) return (false, 0);\r\n\t\t\treturn (true, a % b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the addition of two unsigned integers, reverting on\r\n\t * overflow.\r\n\t *\r\n\t * Counterpart to Solidity's `+` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Addition cannot overflow.\r\n\t */\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a + b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the subtraction of two unsigned integers, reverting on\r\n\t * overflow (when the result is negative).\r\n\t *\r\n\t * Counterpart to Solidity's `-` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Subtraction cannot overflow.\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the multiplication of two unsigned integers, reverting on\r\n\t * overflow.\r\n\t *\r\n\t * Counterpart to Solidity's `*` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Multiplication cannot overflow.\r\n\t */\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a * b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the integer division of two unsigned integers, reverting on\r\n\t * division by zero. The result is rounded towards zero.\r\n\t *\r\n\t * Counterpart to Solidity's `/` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n\t * reverting when dividing by zero.\r\n\t *\r\n\t * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n\t * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n\t * invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a % b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n\t * overflow (when the result is negative).\r\n\t *\r\n\t * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n\t * message unnecessarily. For custom revert reasons use {trySub}.\r\n\t *\r\n\t * Counterpart to Solidity's `-` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Subtraction cannot overflow.\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b <= a, errorMessage);\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n\t * division by zero. The result is rounded towards zero.\r\n\t *\r\n\t * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n\t * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n\t * uses an invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b > 0, errorMessage);\r\n\t\t\treturn a / b;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n\t * reverting with custom message when dividing by zero.\r\n\t *\r\n\t * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n\t * message unnecessarily. For custom revert reasons use {tryMod}.\r\n\t *\r\n\t * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n\t * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n\t * invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b > 0, errorMessage);\r\n\t\t\treturn a % b;\r\n\t\t}\r\n\t}\r\n}\r\n"
			},
			"contracts/NativeTransferable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nabstract contract NativeTransferable {\r\n\tfunction _transferNative(address to, uint256 amount) internal returns (bool) {\r\n\t\tif (payable(to).send(amount)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tevent NativeTransfer(address recipient, uint256 amount);\r\n}\r\n"
			},
			"contracts/BlastClaimable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\nimport \"./Ownable.sol\";\r\n\r\ninterface IBlast {\r\n\tfunction configureClaimableGas() external;\r\n\r\n\tfunction claimAllGas(address contractAddress, address recipient) external returns (uint256);\r\n}\r\n\r\nabstract contract BlastClaimable is Ownable {\r\n\tIBlast public BLAST;\r\n\tmapping(address => uint256) _lastBlastClaim;\r\n\r\n\tuint256 public _blastClaimInterval = 1 days;\r\n\tuint256 internal _feesClaimed;\r\n\r\n\tfunction claimMyGasFees() external {\r\n\t\taddress recipient = msg.sender;\r\n\t\tuint256 lastClaim = _lastBlastClaim[recipient];\r\n\r\n\t\tif (lastClaim + _blastClaimInterval < block.timestamp) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_lastBlastClaim[recipient] = block.timestamp;\r\n\t\tuint256 claimed = BLAST.claimAllGas(address(this), recipient);\r\n\r\n\t\tif (claimed > 0) {\r\n\t\t\t_feesClaimed += claimed;\r\n\t\t\tblastFeesClaimed(claimed);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setupBlast(address blastAddr) external onlyOwner {\r\n\t\tif (blastAddr == address(0)) {\r\n\t\t\tblastAddr = 0x4300000000000000000000000000000000000002;\r\n\t\t}\r\n\t\tBLAST = IBlast(blastAddr);\r\n\t\tBLAST.configureClaimableGas();\r\n\t}\r\n\r\n\tfunction setBlastClaimInterval(uint256 interval) external onlyOwner {\r\n\t\t_blastClaimInterval = interval;\r\n\t}\r\n\r\n\tfunction blastFeesClaimed(uint256 value) internal virtual;\r\n}\r\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ncontract Ownable {\r\n\taddress private _owner;\r\n\r\n\tevent OwnershipRenounced(address indexed previousOwner);\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor() {\r\n\t\t_owner = msg.sender;\r\n\t}\r\n\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn _owner;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(isOwner());\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction isOwner() public view returns (bool) {\r\n\t\treturn msg.sender == _owner;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public onlyOwner {\r\n\t\temit OwnershipRenounced(_owner);\r\n\t\t_owner = address(0);\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\t_transferOwnership(newOwner);\r\n\t}\r\n\r\n\tfunction _transferOwnership(address newOwner) internal {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(_owner, newOwner);\r\n\t\t_owner = newOwner;\r\n\t}\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/BlastClaimable.sol": {
				"BlastClaimable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLAST",
							"outputs": [
								{
									"internalType": "contract IBlast",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_blastClaimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimMyGasFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBlastClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "blastAddr",
									"type": "address"
								}
							],
							"name": "setupBlast",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BLAST()": "97d75776",
							"_blastClaimInterval()": "4addc0e8",
							"claimMyGasFees()": "23084e5f",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBlastClaimInterval(uint256)": "eaca243b",
							"setupBlast(address)": "f2e809e0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blastClaimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMyGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBlastClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blastAddr\",\"type\":\"address\"}],\"name\":\"setupBlast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastClaimable.sol\":\"BlastClaimable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 878,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "BLAST",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBlast)15"
							},
							{
								"astId": 24,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_lastBlastClaim",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_blastClaimInterval",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_feesClaimed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IBlast)15": {
								"encoding": "inplace",
								"label": "contract IBlast",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBlast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimAllGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "configureClaimableGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimAllGas(address,address)": "954fa5ee",
							"configureClaimableGas()": "4e606c47"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimAllGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureClaimableGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastClaimable.sol\":\"IBlast\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BlastFurnace.sol": {
				"BlastFurnace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLAST",
							"outputs": [
								{
									"internalType": "contract IBlast",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_blastClaimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "airdropQualifiers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								}
							],
							"name": "buyIngots",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractBalance",
									"type": "uint256"
								}
							],
							"name": "calculateIngotBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "calculateIngotBuySimple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ingots",
									"type": "uint256"
								}
							],
							"name": "calculateIngotSell",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimMyGasFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "furnaceRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getIngotsSinceLastHatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getMyIngots",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getMyMiners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								}
							],
							"name": "hatchIngots",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seedMarket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellIngots",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBlastClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "blastAddr",
									"type": "address"
								}
							],
							"name": "setupBlast",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BlastFurnace.sol\":1797:6996  contract BlastFurnace is BlastClaimable, NativeTransferable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BlastClaimable.sol\":410:416  1 days */\n  0x015180\n    /* \"contracts/BlastClaimable.sol\":373:416  uint256 public _blastClaimInterval = 1 days */\n  0x03\n  sstore\n    /* \"contracts/BlastFurnace.sol\":1935:1942  1080000 */\n  0x107ac0\n    /* \"contracts/BlastFurnace.sol\":1893:1942  uint256 private INGOTS_TO_HATCH_1MINERS = 1080000 */\n  0x05\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2015:2020  10000 */\n  0x2710\n    /* \"contracts/BlastFurnace.sol\":1993:2020  uint256 private PSN = 10000 */\n  0x06\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2047:2051  5000 */\n  0x1388\n    /* \"contracts/BlastFurnace.sol\":2024:2051  uint256 private PSNH = 5000 */\n  0x07\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2083:2084  3 */\n  0x03\n    /* \"contracts/BlastFurnace.sol\":2055:2084  uint256 private devFeeVal = 3 */\n  0x08\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2115:2120  false */\n  0x00\n    /* \"contracts/BlastFurnace.sol\":2088:2120  bool private initialized = false */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":2569:2621  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":2605:2615  msg.sender */\n  caller\n    /* \"contracts/BlastFurnace.sol\":2588:2594  recAdd */\n  0x09\n  0x01\n    /* \"contracts/BlastFurnace.sol\":2588:2616  recAdd = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":1797:6996  contract BlastFurnace is BlastClaimable, NativeTransferable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BlastFurnace.sol\":1797:6996  contract BlastFurnace is BlastClaimable, NativeTransferable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xe5d782fc\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xe5d782fc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe953f982\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xeaca243b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2e809e0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfeeea92e\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x97d75776\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb18a2f82\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc2a6856f\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x450c9d7d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x450c9d7d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4addc0e8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4b634b06\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x53e3323b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7a571ae1\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x012d754c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23084e5f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2cf4f274\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3c5f07cb\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BlastFurnace.sol\":3630:4053  function sellIngots() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5849:5939  function getBalance() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":455:866  function claimMyGasFees() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/BlastFurnace.sol\":6049:6192  function getMyIngots(address adr) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5706:5844  function seedMarket() public payable onlyOwner {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BlastFurnace.sol\":4058:4248  function furnaceRewards(address adr) public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":373:416  uint256 public _blastClaimInterval = 1 days */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5944:6044  function getMyMiners(address adr) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":2395:2429  address[] public airdropQualifiers */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5261:5423  function calculateIngotBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":301:320  IBlast public BLAST */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5106:5256  function calculateIngotSell(uint256 ingots) public view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":6197:6442  function getIngotsSinceLastHatch(address adr) public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":4253:4854  function buyIngots(address ref) public payable {... */\n    tag_18:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5428:5566  function calculateIngotBuySimple(uint256 eth) public view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastClaimable.sol\":1102:1210  function setBlastClaimInterval(uint256 interval) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/BlastClaimable.sol\":871:1097  function setupBlast(address blastAddr) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/BlastFurnace.sol\":2820:3625  function hatchIngots(address ref) public {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/BlastFurnace.sol\":3630:4053  function sellIngots() public {... */\n    tag_29:\n        /* \"contracts/BlastFurnace.sol\":3672:3683  initialized */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":3664:3684  require(initialized) */\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n        /* \"contracts/BlastFurnace.sol\":3689:3706  uint256 hasIngots */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3709:3732  getMyIngots(msg.sender) */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":3721:3731  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3709:3720  getMyIngots */\n      tag_42\n        /* \"contracts/BlastFurnace.sol\":3709:3732  getMyIngots(msg.sender) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/BlastFurnace.sol\":3689:3732  uint256 hasIngots = getMyIngots(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3737:3755  uint256 IngotValue */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3758:3787  calculateIngotSell(hasIngots) */\n      tag_127\n        /* \"contracts/BlastFurnace.sol\":3777:3786  hasIngots */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3758:3776  calculateIngotSell */\n      tag_93\n        /* \"contracts/BlastFurnace.sol\":3758:3787  calculateIngotSell(hasIngots) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/BlastFurnace.sol\":3737:3787  uint256 IngotValue = calculateIngotSell(hasIngots) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3792:3803  uint256 fee */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3806:3824  devFee(IngotValue) */\n      tag_128\n        /* \"contracts/BlastFurnace.sol\":3813:3823  IngotValue */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3806:3812  devFee */\n      tag_129\n        /* \"contracts/BlastFurnace.sol\":3806:3824  devFee(IngotValue) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BlastFurnace.sol\":3792:3824  uint256 fee = devFee(IngotValue) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3857:3858  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3829:3842  claimedIngots */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":3829:3854  claimedIngots[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3843:3853  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3829:3854  claimedIngots[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3829:3858  claimedIngots[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3887:3902  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":3863:3872  lastHatch */\n      0x0c\n        /* \"contracts/BlastFurnace.sol\":3863:3884  lastHatch[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3873:3883  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3863:3884  lastHatch[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3863:3902  lastHatch[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3922:3959  SafeMath.add(marketIngots, hasIngots) */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":3935:3947  marketIngots */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":3949:3958  hasIngots */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":3922:3934  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":3922:3959  SafeMath.add(marketIngots, hasIngots) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/BlastFurnace.sol\":3907:3919  marketIngots */\n      0x0e\n        /* \"contracts/BlastFurnace.sol\":3907:3959  marketIngots = SafeMath.add(marketIngots, hasIngots) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3964:3970  recAdd */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3964:3979  recAdd.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3964:3984  recAdd.transfer(fee) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":3980:3983  fee */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3964:3984  recAdd.transfer(fee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n        /* \"contracts/BlastFurnace.sol\":3997:4007  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3989:4017  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3989:4048  payable(msg.sender).transfer(SafeMath.sub(IngotValue, fee)) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4018:4047  SafeMath.sub(IngotValue, fee) */\n      tag_134\n        /* \"contracts/BlastFurnace.sol\":4031:4041  IngotValue */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4043:4046  fee */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4018:4030  SafeMath.sub */\n      tag_135\n        /* \"contracts/BlastFurnace.sol\":4018:4047  SafeMath.sub(IngotValue, fee) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/BlastFurnace.sol\":3989:4048  payable(msg.sender).transfer(SafeMath.sub(IngotValue, fee)) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n        /* \"contracts/BlastFurnace.sol\":3659:4053  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":3630:4053  function sellIngots() public {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5849:5939  function getBalance() public view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/BlastFurnace.sol\":5892:5899  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5913:5934  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5906:5934  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5849:5939  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":455:866  function claimMyGasFees() external {... */\n    tag_37:\n        /* \"contracts/BlastClaimable.sol\":495:512  address recipient */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":515:525  msg.sender */\n      caller\n        /* \"contracts/BlastClaimable.sol\":495:525  address recipient = msg.sender */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":530:547  uint256 lastClaim */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":550:565  _lastBlastClaim */\n      0x02\n        /* \"contracts/BlastClaimable.sol\":550:576  _lastBlastClaim[recipient] */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":566:575  recipient */\n      dup4\n        /* \"contracts/BlastClaimable.sol\":550:576  _lastBlastClaim[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastClaimable.sol\":530:576  uint256 lastClaim = _lastBlastClaim[recipient] */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":621:636  block.timestamp */\n      timestamp\n        /* \"contracts/BlastClaimable.sol\":599:618  _blastClaimInterval */\n      sload(0x03)\n        /* \"contracts/BlastClaimable.sol\":587:596  lastClaim */\n      dup3\n        /* \"contracts/BlastClaimable.sol\":587:618  lastClaim + _blastClaimInterval */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"contracts/BlastClaimable.sol\":587:636  lastClaim + _blastClaimInterval < block.timestamp */\n      lt\n        /* \"contracts/BlastClaimable.sol\":583:656  if (lastClaim + _blastClaimInterval < block.timestamp) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"contracts/BlastClaimable.sol\":644:651  return; */\n      pop\n      pop\n      jump(tag_139)\n        /* \"contracts/BlastClaimable.sol\":583:656  if (lastClaim + _blastClaimInterval < block.timestamp) {... */\n    tag_142:\n        /* \"contracts/BlastClaimable.sol\":691:706  block.timestamp */\n      timestamp\n        /* \"contracts/BlastClaimable.sol\":662:677  _lastBlastClaim */\n      0x02\n        /* \"contracts/BlastClaimable.sol\":662:688  _lastBlastClaim[recipient] */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":678:687  recipient */\n      dup5\n        /* \"contracts/BlastClaimable.sol\":662:688  _lastBlastClaim[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastClaimable.sol\":662:706  _lastBlastClaim[recipient] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":711:726  uint256 claimed */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":729:734  BLAST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastClaimable.sol\":729:746  BLAST.claimAllGas */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x954fa5ee\n        /* \"contracts/BlastClaimable.sol\":755:759  this */\n      address\n        /* \"contracts/BlastClaimable.sol\":762:771  recipient */\n      dup6\n        /* \"contracts/BlastClaimable.sol\":729:772  BLAST.claimAllGas(address(this), recipient) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"contracts/BlastClaimable.sol\":711:772  uint256 claimed = BLAST.claimAllGas(address(this), recipient) */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":793:794  0 */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":783:790  claimed */\n      dup2\n        /* \"contracts/BlastClaimable.sol\":783:794  claimed > 0 */\n      gt\n        /* \"contracts/BlastClaimable.sol\":779:862  if (claimed > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/BlastClaimable.sol\":818:825  claimed */\n      dup1\n        /* \"contracts/BlastClaimable.sol\":802:814  _feesClaimed */\n      0x04\n      0x00\n        /* \"contracts/BlastClaimable.sol\":802:825  _feesClaimed += claimed */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":831:856  blastFeesClaimed(claimed) */\n      tag_151\n        /* \"contracts/BlastClaimable.sol\":848:855  claimed */\n      dup2\n        /* \"contracts/BlastClaimable.sol\":831:847  blastFeesClaimed */\n      tag_152\n        /* \"contracts/BlastClaimable.sol\":831:856  blastFeesClaimed(claimed) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/BlastClaimable.sol\":779:862  if (claimed > 0) {... */\n    tag_149:\n        /* \"contracts/BlastClaimable.sol\":490:866  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/BlastClaimable.sol\":455:866  function claimMyGasFees() external {... */\n    tag_139:\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6049:6192  function getMyIngots(address adr) public view returns (uint256) {... */\n    tag_42:\n        /* \"contracts/BlastFurnace.sol\":6104:6111  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6125:6187  SafeMath.add(claimedIngots[adr], getIngotsSinceLastHatch(adr)) */\n      tag_154\n        /* \"contracts/BlastFurnace.sol\":6138:6151  claimedIngots */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":6138:6156  claimedIngots[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6152:6155  adr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6138:6156  claimedIngots[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6158:6186  getIngotsSinceLastHatch(adr) */\n      tag_155\n        /* \"contracts/BlastFurnace.sol\":6182:6185  adr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6158:6181  getIngotsSinceLastHatch */\n      tag_98\n        /* \"contracts/BlastFurnace.sol\":6158:6186  getIngotsSinceLastHatch(adr) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/BlastFurnace.sol\":6125:6137  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":6125:6187  SafeMath.add(claimedIngots[adr], getIngotsSinceLastHatch(adr)) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/BlastFurnace.sol\":6118:6187  return SafeMath.add(claimedIngots[adr], getIngotsSinceLastHatch(adr)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6049:6192  function getMyIngots(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5706:5844  function seedMarket() public payable onlyOwner {... */\n    tag_45:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_157\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_82\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n        /* \"contracts/BlastFurnace.sol\":5782:5783  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5766:5778  marketIngots */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":5766:5783  marketIngots == 0 */\n      eq\n        /* \"contracts/BlastFurnace.sol\":5758:5784  require(marketIngots == 0) */\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n        /* \"contracts/BlastFurnace.sol\":5803:5807  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":5789:5800  initialized */\n      0x09\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5789:5807  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":5827:5839  108000000000 */\n      0x19254d3800\n        /* \"contracts/BlastFurnace.sol\":5812:5824  marketIngots */\n      0x0e\n        /* \"contracts/BlastFurnace.sol\":5812:5839  marketIngots = 108000000000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":5706:5844  function seedMarket() public payable onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4058:4248  function furnaceRewards(address adr) public view returns (uint256) {... */\n    tag_49:\n        /* \"contracts/BlastFurnace.sol\":4116:4123  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4130:4147  uint256 hasIngots */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":4150:4166  getMyIngots(adr) */\n      tag_162\n        /* \"contracts/BlastFurnace.sol\":4162:4165  adr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4150:4161  getMyIngots */\n      tag_42\n        /* \"contracts/BlastFurnace.sol\":4150:4166  getMyIngots(adr) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/BlastFurnace.sol\":4130:4166  uint256 hasIngots = getMyIngots(adr) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4171:4189  uint256 IngotValue */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4192:4221  calculateIngotSell(hasIngots) */\n      tag_163\n        /* \"contracts/BlastFurnace.sol\":4211:4220  hasIngots */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4192:4210  calculateIngotSell */\n      tag_93\n        /* \"contracts/BlastFurnace.sol\":4192:4221  calculateIngotSell(hasIngots) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/BlastFurnace.sol\":4171:4221  uint256 IngotValue = calculateIngotSell(hasIngots) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4233:4243  IngotValue */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":4226:4243  return IngotValue */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":4058:4248  function furnaceRewards(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":373:416  uint256 public _blastClaimInterval = 1 days */\n    tag_53:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5944:6044  function getMyMiners(address adr) public view returns (uint256) {... */\n    tag_58:\n        /* \"contracts/BlastFurnace.sol\":5999:6006  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6020:6034  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":6020:6039  hatcheryMiners[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6035:6038  adr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6020:6039  hatcheryMiners[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6013:6039  return hatcheryMiners[adr] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5944:6044  function getMyMiners(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":2395:2429  address[] public airdropQualifiers */\n    tag_64:\n      0x0f\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_69:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_168\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_82\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5261:5423  function calculateIngotBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n    tag_74:\n        /* \"contracts/BlastFurnace.sol\":5347:5354  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5368:5418  calculateTrade(eth, contractBalance, marketIngots) */\n      tag_172\n        /* \"contracts/BlastFurnace.sol\":5383:5386  eth */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5388:5403  contractBalance */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5405:5417  marketIngots */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":5368:5382  calculateTrade */\n      tag_173\n        /* \"contracts/BlastFurnace.sol\":5368:5418  calculateTrade(eth, contractBalance, marketIngots) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/BlastFurnace.sol\":5361:5418  return calculateTrade(eth, contractBalance, marketIngots) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5261:5423  function calculateIngotBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_78:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_82:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":301:320  IBlast public BLAST */\n    tag_87:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5106:5256  function calculateIngotSell(uint256 ingots) public view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/BlastFurnace.sol\":5171:5178  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5192:5251  calculateTrade(ingots, marketIngots, address(this).balance) */\n      tag_177\n        /* \"contracts/BlastFurnace.sol\":5207:5213  ingots */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":5215:5227  marketIngots */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":5229:5250  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5192:5206  calculateTrade */\n      tag_173\n        /* \"contracts/BlastFurnace.sol\":5192:5251  calculateTrade(ingots, marketIngots, address(this).balance) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/BlastFurnace.sol\":5185:5251  return calculateTrade(ingots, marketIngots, address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5106:5256  function calculateIngotSell(uint256 ingots) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6197:6442  function getIngotsSinceLastHatch(address adr) public view returns (uint256) {... */\n    tag_98:\n        /* \"contracts/BlastFurnace.sol\":6264:6271  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6278:6299  uint256 secondsPassed */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":6302:6377  min(INGOTS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr])) */\n      tag_179\n        /* \"contracts/BlastFurnace.sol\":6306:6329  INGOTS_TO_HATCH_1MINERS */\n      sload(0x05)\n        /* \"contracts/BlastFurnace.sol\":6331:6376  SafeMath.sub(block.timestamp, lastHatch[adr]) */\n      tag_180\n        /* \"contracts/BlastFurnace.sol\":6344:6359  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":6361:6370  lastHatch */\n      0x0c\n        /* \"contracts/BlastFurnace.sol\":6361:6375  lastHatch[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6371:6374  adr */\n      dup9\n        /* \"contracts/BlastFurnace.sol\":6361:6375  lastHatch[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6331:6343  SafeMath.sub */\n      tag_135\n        /* \"contracts/BlastFurnace.sol\":6331:6376  SafeMath.sub(block.timestamp, lastHatch[adr]) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/BlastFurnace.sol\":6302:6305  min */\n      tag_181\n        /* \"contracts/BlastFurnace.sol\":6302:6377  min(INGOTS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr])) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/BlastFurnace.sol\":6278:6377  uint256 secondsPassed = min(INGOTS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr])) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6389:6437  SafeMath.mul(secondsPassed, hatcheryMiners[adr]) */\n      tag_182\n        /* \"contracts/BlastFurnace.sol\":6402:6415  secondsPassed */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6417:6431  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":6417:6436  hatcheryMiners[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6432:6435  adr */\n      dup7\n        /* \"contracts/BlastFurnace.sol\":6417:6436  hatcheryMiners[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6389:6401  SafeMath.mul */\n      tag_183\n        /* \"contracts/BlastFurnace.sol\":6389:6437  SafeMath.mul(secondsPassed, hatcheryMiners[adr]) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/BlastFurnace.sol\":6382:6437  return SafeMath.mul(secondsPassed, hatcheryMiners[adr]) */\n      swap2\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":6197:6442  function getIngotsSinceLastHatch(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4253:4854  function buyIngots(address ref) public payable {... */\n    tag_102:\n        /* \"contracts/BlastFurnace.sol\":4313:4324  initialized */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":4305:4325  require(initialized) */\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/BlastFurnace.sol\":4330:4343  address buyer */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4346:4356  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4330:4356  address buyer = msg.sender */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4363:4383  uint256 ingotsBought */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4386:4462  calculateIngotBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      tag_186\n        /* \"contracts/BlastFurnace.sol\":4404:4413  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4415:4461  SafeMath.sub(address(this).balance, msg.value) */\n      tag_187\n        /* \"contracts/BlastFurnace.sol\":4428:4449  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":4451:4460  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4415:4427  SafeMath.sub */\n      tag_135\n        /* \"contracts/BlastFurnace.sol\":4415:4461  SafeMath.sub(address(this).balance, msg.value) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/BlastFurnace.sol\":4386:4403  calculateIngotBuy */\n      tag_74\n        /* \"contracts/BlastFurnace.sol\":4386:4462  calculateIngotBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/BlastFurnace.sol\":4363:4462  uint256 ingotsBought = calculateIngotBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4482:4530  SafeMath.sub(ingotsBought, devFee(ingotsBought)) */\n      tag_188\n        /* \"contracts/BlastFurnace.sol\":4495:4507  ingotsBought */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":4509:4529  devFee(ingotsBought) */\n      tag_189\n        /* \"contracts/BlastFurnace.sol\":4516:4528  ingotsBought */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4509:4515  devFee */\n      tag_129\n        /* \"contracts/BlastFurnace.sol\":4509:4529  devFee(ingotsBought) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/BlastFurnace.sol\":4482:4494  SafeMath.sub */\n      tag_135\n        /* \"contracts/BlastFurnace.sol\":4482:4530  SafeMath.sub(ingotsBought, devFee(ingotsBought)) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/BlastFurnace.sol\":4467:4530  ingotsBought = SafeMath.sub(ingotsBought, devFee(ingotsBought)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4535:4546  uint256 fee */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4549:4566  devFee(msg.value) */\n      tag_190\n        /* \"contracts/BlastFurnace.sol\":4556:4565  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4549:4555  devFee */\n      tag_129\n        /* \"contracts/BlastFurnace.sol\":4549:4566  devFee(msg.value) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/BlastFurnace.sol\":4535:4566  uint256 fee = devFee(msg.value) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4571:4577  recAdd */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4571:4586  recAdd.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4571:4591  recAdd.transfer(fee) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4587:4590  fee */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4571:4591  recAdd.transfer(fee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n        /* \"contracts/BlastFurnace.sol\":4596:4664  _setClaimed(buyer, SafeMath.add(claimedIngots[buyer], ingotsBought)) */\n      tag_193\n        /* \"contracts/BlastFurnace.sol\":4608:4613  buyer */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4615:4663  SafeMath.add(claimedIngots[buyer], ingotsBought) */\n      tag_194\n        /* \"contracts/BlastFurnace.sol\":4628:4641  claimedIngots */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":4628:4648  claimedIngots[buyer] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4642:4647  buyer */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":4628:4648  claimedIngots[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":4650:4662  ingotsBought */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":4615:4627  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":4615:4663  SafeMath.add(claimedIngots[buyer], ingotsBought) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/BlastFurnace.sol\":4596:4607  _setClaimed */\n      tag_195\n        /* \"contracts/BlastFurnace.sol\":4596:4664  _setClaimed(buyer, SafeMath.add(claimedIngots[buyer], ingotsBought)) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/BlastFurnace.sol\":4669:4685  hatchIngots(ref) */\n      tag_196\n        /* \"contracts/BlastFurnace.sol\":4681:4684  ref */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4669:4680  hatchIngots */\n      tag_123\n        /* \"contracts/BlastFurnace.sol\":4669:4685  hatchIngots(ref) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/BlastFurnace.sol\":4709:4714  .5e18 */\n      0x06f05b59d3b20000\n        /* \"contracts/BlastFurnace.sol\":4696:4705  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4696:4714  msg.value >= .5e18 */\n      lt\n        /* \"contracts/BlastFurnace.sol\":4692:4850  if (msg.value >= .5e18) {... */\n      tag_197\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":4756:4760  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":4726:4760  _isAirDropQualifier[buyer] != true */\n      iszero\n      iszero\n        /* \"contracts/BlastFurnace.sol\":4726:4745  _isAirDropQualifier */\n      0x11\n        /* \"contracts/BlastFurnace.sol\":4726:4752  _isAirDropQualifier[buyer] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4746:4751  buyer */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":4726:4752  _isAirDropQualifier[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":4726:4760  _isAirDropQualifier[buyer] != true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BlastFurnace.sol\":4722:4845  if (_isAirDropQualifier[buyer] != true) {... */\n      tag_198\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":4798:4802  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":4769:4788  _isAirDropQualifier */\n      0x11\n        /* \"contracts/BlastFurnace.sol\":4769:4795  _isAirDropQualifier[buyer] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4789:4794  buyer */\n      dup6\n        /* \"contracts/BlastFurnace.sol\":4769:4795  _isAirDropQualifier[buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4769:4802  _isAirDropQualifier[buyer] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4809:4826  airdropQualifiers */\n      0x0f\n        /* \"contracts/BlastFurnace.sol\":4832:4837  buyer */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4809:4838  airdropQualifiers.push(buyer) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4722:4845  if (_isAirDropQualifier[buyer] != true) {... */\n    tag_198:\n        /* \"contracts/BlastFurnace.sol\":4692:4850  if (msg.value >= .5e18) {... */\n    tag_197:\n        /* \"contracts/BlastFurnace.sol\":4300:4854  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":4253:4854  function buyIngots(address ref) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5428:5566  function calculateIngotBuySimple(uint256 eth) public view returns (uint256) {... */\n    tag_106:\n        /* \"contracts/BlastFurnace.sol\":5495:5502  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5516:5561  calculateIngotBuy(eth, address(this).balance) */\n      tag_201\n        /* \"contracts/BlastFurnace.sol\":5534:5537  eth */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":5539:5560  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5516:5533  calculateIngotBuy */\n      tag_74\n        /* \"contracts/BlastFurnace.sol\":5516:5561  calculateIngotBuy(eth, address(this).balance) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/BlastFurnace.sol\":5509:5561  return calculateIngotBuy(eth, address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5428:5566  function calculateIngotBuySimple(uint256 eth) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":1102:1210  function setBlastClaimInterval(uint256 interval) external onlyOwner {... */\n    tag_111:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_203\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_82\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/BlastClaimable.sol\":1197:1205  interval */\n      dup1\n        /* \"contracts/BlastClaimable.sol\":1175:1194  _blastClaimInterval */\n      0x03\n        /* \"contracts/BlastClaimable.sol\":1175:1205  _blastClaimInterval = interval */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":1102:1210  function setBlastClaimInterval(uint256 interval) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastClaimable.sol\":871:1097  function setupBlast(address blastAddr) external onlyOwner {... */\n    tag_115:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_207\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_82\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n        /* \"contracts/BlastClaimable.sol\":959:960  0 */\n      0x00\n        /* \"contracts/BlastClaimable.sol\":938:961  blastAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastClaimable.sol\":938:947  blastAddr */\n      dup2\n        /* \"contracts/BlastClaimable.sol\":938:961  blastAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BlastClaimable.sol\":934:1029  if (blastAddr == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"contracts/BlastClaimable.sol\":981:1023  0x4300000000000000000000000000000000000002 */\n      0x4300000000000000000000000000000000000002\n        /* \"contracts/BlastClaimable.sol\":969:1023  blastAddr = 0x4300000000000000000000000000000000000002 */\n      swap1\n      pop\n        /* \"contracts/BlastClaimable.sol\":934:1029  if (blastAddr == address(0)) {... */\n    tag_210:\n        /* \"contracts/BlastClaimable.sol\":1048:1057  blastAddr */\n      dup1\n        /* \"contracts/BlastClaimable.sol\":1033:1038  BLAST */\n      0x01\n      0x00\n        /* \"contracts/BlastClaimable.sol\":1033:1058  BLAST = IBlast(blastAddr) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastClaimable.sol\":1063:1068  BLAST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastClaimable.sol\":1063:1090  BLAST.configureClaimableGas */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4e606c47\n        /* \"contracts/BlastClaimable.sol\":1063:1092  BLAST.configureClaimableGas() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BlastClaimable.sol\":871:1097  function setupBlast(address blastAddr) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_119:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_215\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_82\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_218\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_219\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":2820:3625  function hatchIngots(address ref) public {... */\n    tag_123:\n        /* \"contracts/BlastFurnace.sol\":2874:2885  initialized */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":2866:2886  require(initialized) */\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n        /* \"contracts/BlastFurnace.sol\":2904:2914  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":2897:2914  ref == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":2897:2900  ref */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":2897:2914  ref == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BlastFurnace.sol\":2893:2944  if (ref == msg.sender) {... */\n      tag_222\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":2936:2937  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2922:2938  ref = address(0) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":2893:2944  if (ref == msg.sender) {... */\n    tag_222:\n        /* \"contracts/BlastFurnace.sol\":2987:2988  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2954:2989  referrals[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":2954:2963  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":2954:2975  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2964:2974  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":2954:2975  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":2954:2989  referrals[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BlastFurnace.sol\":2954:3028  referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender */\n      dup1\n      iszero\n      tag_223\n      jumpi\n      pop\n        /* \"contracts/BlastFurnace.sol\":3018:3028  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":2993:3028  referrals[msg.sender] != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":2993:3002  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":2993:3014  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3003:3013  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":2993:3014  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":2993:3028  referrals[msg.sender] != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BlastFurnace.sol\":2954:3028  referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender */\n    tag_223:\n        /* \"contracts/BlastFurnace.sol\":2950:3069  if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3060:3063  ref */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":3036:3045  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3036:3057  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3046:3056  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3036:3057  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3036:3063  referrals[msg.sender] = ref */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":2950:3069  if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {... */\n    tag_224:\n        /* \"contracts/BlastFurnace.sol\":3075:3093  uint256 ingotsUsed */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3096:3119  getMyIngots(msg.sender) */\n      tag_225\n        /* \"contracts/BlastFurnace.sol\":3108:3118  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3096:3107  getMyIngots */\n      tag_42\n        /* \"contracts/BlastFurnace.sol\":3096:3119  getMyIngots(msg.sender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/BlastFurnace.sol\":3075:3119  uint256 ingotsUsed = getMyIngots(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3124:3141  uint256 newMiners */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3144:3193  SafeMath.div(ingotsUsed, INGOTS_TO_HATCH_1MINERS) */\n      tag_226\n        /* \"contracts/BlastFurnace.sol\":3157:3167  ingotsUsed */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3169:3192  INGOTS_TO_HATCH_1MINERS */\n      sload(0x05)\n        /* \"contracts/BlastFurnace.sol\":3144:3156  SafeMath.div */\n      tag_227\n        /* \"contracts/BlastFurnace.sol\":3144:3193  SafeMath.div(ingotsUsed, INGOTS_TO_HATCH_1MINERS) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/BlastFurnace.sol\":3124:3193  uint256 newMiners = SafeMath.div(ingotsUsed, INGOTS_TO_HATCH_1MINERS) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3227:3278  SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      tag_228\n        /* \"contracts/BlastFurnace.sol\":3240:3254  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":3240:3266  hatcheryMiners[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3255:3265  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3240:3266  hatcheryMiners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":3268:3277  newMiners */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3227:3239  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":3227:3278  SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/BlastFurnace.sol\":3198:3212  hatcheryMiners */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":3198:3224  hatcheryMiners[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3213:3223  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3198:3224  hatcheryMiners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3198:3278  hatcheryMiners[msg.sender] = SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3283:3309  _setClaimed(msg.sender, 0) */\n      tag_229\n        /* \"contracts/BlastFurnace.sol\":3295:3305  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3307:3308  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3283:3294  _setClaimed */\n      tag_195\n        /* \"contracts/BlastFurnace.sol\":3283:3309  _setClaimed(msg.sender, 0) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/BlastFurnace.sol\":3338:3353  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":3314:3323  lastHatch */\n      0x0c\n        /* \"contracts/BlastFurnace.sol\":3314:3335  lastHatch[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3324:3334  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3314:3335  lastHatch[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3314:3353  lastHatch[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3386:3501  _setClaimed(referrals[msg.sender], SafeMath.add(claimedIngots[referrals[msg.sender]], SafeMath.div(ingotsUsed, 8))) */\n      tag_230\n        /* \"contracts/BlastFurnace.sol\":3398:3407  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3398:3419  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3408:3418  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3398:3419  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3421:3500  SafeMath.add(claimedIngots[referrals[msg.sender]], SafeMath.div(ingotsUsed, 8)) */\n      tag_231\n        /* \"contracts/BlastFurnace.sol\":3434:3447  claimedIngots */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":3434:3470  claimedIngots[referrals[msg.sender]] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3448:3457  referrals */\n      0x0d\n        /* \"contracts/BlastFurnace.sol\":3448:3469  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3458:3468  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3448:3469  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3434:3470  claimedIngots[referrals[msg.sender]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":3472:3499  SafeMath.div(ingotsUsed, 8) */\n      tag_232\n        /* \"contracts/BlastFurnace.sol\":3485:3495  ingotsUsed */\n      dup7\n        /* \"contracts/BlastFurnace.sol\":3497:3498  8 */\n      0x08\n        /* \"contracts/BlastFurnace.sol\":3472:3484  SafeMath.div */\n      tag_227\n        /* \"contracts/BlastFurnace.sol\":3472:3499  SafeMath.div(ingotsUsed, 8) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/BlastFurnace.sol\":3421:3433  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":3421:3500  SafeMath.add(claimedIngots[referrals[msg.sender]], SafeMath.div(ingotsUsed, 8)) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/BlastFurnace.sol\":3386:3397  _setClaimed */\n      tag_195\n        /* \"contracts/BlastFurnace.sol\":3386:3501  _setClaimed(referrals[msg.sender], SafeMath.add(claimedIngots[referrals[msg.sender]], SafeMath.div(ingotsUsed, 8))) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/BlastFurnace.sol\":3565:3620  SafeMath.add(marketIngots, SafeMath.div(ingotsUsed, 5)) */\n      tag_233\n        /* \"contracts/BlastFurnace.sol\":3578:3590  marketIngots */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":3592:3619  SafeMath.div(ingotsUsed, 5) */\n      tag_234\n        /* \"contracts/BlastFurnace.sol\":3605:3615  ingotsUsed */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":3617:3618  5 */\n      0x05\n        /* \"contracts/BlastFurnace.sol\":3592:3604  SafeMath.div */\n      tag_227\n        /* \"contracts/BlastFurnace.sol\":3592:3619  SafeMath.div(ingotsUsed, 5) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/BlastFurnace.sol\":3565:3577  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":3565:3620  SafeMath.add(marketIngots, SafeMath.div(ingotsUsed, 5)) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/BlastFurnace.sol\":3550:3562  marketIngots */\n      0x0e\n        /* \"contracts/BlastFurnace.sol\":3550:3620  marketIngots = SafeMath.add(marketIngots, SafeMath.div(ingotsUsed, 5)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":2861:3625  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":2820:3625  function hatchIngots(address ref) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5571:5701  function devFee(uint256 amount) private view returns (uint256) {... */\n    tag_129:\n        /* \"contracts/BlastFurnace.sol\":5625:5632  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5646:5696  SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      tag_236\n        /* \"contracts/BlastFurnace.sol\":5659:5690  SafeMath.mul(amount, devFeeVal) */\n      tag_237\n        /* \"contracts/BlastFurnace.sol\":5672:5678  amount */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5680:5689  devFeeVal */\n      sload(0x08)\n        /* \"contracts/BlastFurnace.sol\":5659:5671  SafeMath.mul */\n      tag_183\n        /* \"contracts/BlastFurnace.sol\":5659:5690  SafeMath.mul(amount, devFeeVal) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/BlastFurnace.sol\":5692:5695  100 */\n      0x64\n        /* \"contracts/BlastFurnace.sol\":5646:5658  SafeMath.div */\n      tag_227\n        /* \"contracts/BlastFurnace.sol\":5646:5696  SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/BlastFurnace.sol\":5639:5696  return SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5571:5701  function devFee(uint256 amount) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2070:2159  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"contracts/libraries/SafeMath.sol\":2128:2135  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2153:2154  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2149:2150  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2149:2154  a + b */\n      tag_239\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_239:\n        /* \"contracts/libraries/SafeMath.sol\":2142:2154  return a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2070:2159  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2409:2498  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"contracts/libraries/SafeMath.sol\":2467:2474  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2492:2493  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2488:2489  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2488:2493  a - b */\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"contracts/libraries/SafeMath.sol\":2481:2493  return a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2409:2498  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6548:6649  function blastFeesClaimed(uint256 value) internal virtual override {... */\n    tag_152:\n        /* \"contracts/BlastFurnace.sol\":6620:6644  _distributeNative(value) */\n      tag_244\n        /* \"contracts/BlastFurnace.sol\":6638:6643  value */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6620:6637  _distributeNative */\n      tag_245\n        /* \"contracts/BlastFurnace.sol\":6620:6644  _distributeNative(value) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/BlastFurnace.sol\":6548:6649  function blastFeesClaimed(uint256 value) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4859:5101  function calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {... */\n    tag_173:\n        /* \"contracts/BlastFurnace.sol\":4941:4948  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4962:5096  SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      tag_247\n        /* \"contracts/BlastFurnace.sol\":4975:4996  SafeMath.mul(PSN, bs) */\n      tag_248\n        /* \"contracts/BlastFurnace.sol\":4988:4991  PSN */\n      sload(0x06)\n        /* \"contracts/BlastFurnace.sol\":4993:4995  bs */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4975:4987  SafeMath.mul */\n      tag_183\n        /* \"contracts/BlastFurnace.sol\":4975:4996  SafeMath.mul(PSN, bs) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/BlastFurnace.sol\":4998:5095  SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)) */\n      tag_249\n        /* \"contracts/BlastFurnace.sol\":5011:5015  PSNH */\n      sload(0x07)\n        /* \"contracts/BlastFurnace.sol\":5017:5094  SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt) */\n      tag_250\n        /* \"contracts/BlastFurnace.sol\":5030:5089  SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)) */\n      tag_251\n        /* \"contracts/BlastFurnace.sol\":5043:5064  SafeMath.mul(PSN, rs) */\n      tag_252\n        /* \"contracts/BlastFurnace.sol\":5056:5059  PSN */\n      sload(0x06)\n        /* \"contracts/BlastFurnace.sol\":5061:5063  rs */\n      dup11\n        /* \"contracts/BlastFurnace.sol\":5043:5055  SafeMath.mul */\n      tag_183\n        /* \"contracts/BlastFurnace.sol\":5043:5064  SafeMath.mul(PSN, rs) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/BlastFurnace.sol\":5066:5088  SafeMath.mul(PSNH, rt) */\n      tag_253\n        /* \"contracts/BlastFurnace.sol\":5079:5083  PSNH */\n      sload(0x07)\n        /* \"contracts/BlastFurnace.sol\":5085:5087  rt */\n      dup13\n        /* \"contracts/BlastFurnace.sol\":5066:5078  SafeMath.mul */\n      tag_183\n        /* \"contracts/BlastFurnace.sol\":5066:5088  SafeMath.mul(PSNH, rt) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/BlastFurnace.sol\":5030:5042  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":5030:5089  SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/BlastFurnace.sol\":5091:5093  rt */\n      dup10\n        /* \"contracts/BlastFurnace.sol\":5017:5029  SafeMath.div */\n      tag_227\n        /* \"contracts/BlastFurnace.sol\":5017:5094  SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/BlastFurnace.sol\":4998:5010  SafeMath.add */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":4998:5095  SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)) */\n      jump\t// in\n    tag_249:\n        /* \"contracts/BlastFurnace.sol\":4962:4974  SafeMath.div */\n      tag_227\n        /* \"contracts/BlastFurnace.sol\":4962:5096  SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/BlastFurnace.sol\":4955:5096  return SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4859:5101  function calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6447:6543  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n    tag_181:\n        /* \"contracts/BlastFurnace.sol\":6504:6511  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6529:6530  b */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6525:6526  a */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6525:6530  a < b */\n      lt\n        /* \"contracts/BlastFurnace.sol\":6525:6538  a < b ? a : b */\n      tag_255\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":6537:6538  b */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6525:6538  a < b ? a : b */\n      jump(tag_256)\n    tag_255:\n        /* \"contracts/BlastFurnace.sol\":6533:6534  a */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":6525:6538  a < b ? a : b */\n    tag_256:\n        /* \"contracts/BlastFurnace.sol\":6518:6538  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6447:6543  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2724:2813  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_183:\n        /* \"contracts/libraries/SafeMath.sol\":2782:2789  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2807:2808  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2803:2804  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2803:2808  a * b */\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"contracts/libraries/SafeMath.sol\":2796:2808  return a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2724:2813  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":2626:2815  function _setClaimed(address addr, uint256 value) private {... */\n    tag_195:\n        /* \"contracts/BlastFurnace.sol\":2712:2716  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":2693:2716  _isHolder[addr] != true */\n      iszero\n      iszero\n        /* \"contracts/BlastFurnace.sol\":2693:2702  _isHolder */\n      0x10\n        /* \"contracts/BlastFurnace.sol\":2693:2708  _isHolder[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2703:2707  addr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":2693:2708  _isHolder[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":2693:2716  _isHolder[addr] != true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/BlastFurnace.sol\":2689:2777  if (_isHolder[addr] != true) {... */\n      tag_261\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":2724:2732  _holders */\n      0x12\n        /* \"contracts/BlastFurnace.sol\":2738:2742  addr */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":2724:2743  _holders.push(addr) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":2767:2771  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":2749:2758  _isHolder */\n      0x10\n        /* \"contracts/BlastFurnace.sol\":2749:2764  _isHolder[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2759:2763  addr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":2749:2764  _isHolder[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2749:2771  _isHolder[addr] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":2689:2777  if (_isHolder[addr] != true) {... */\n    tag_261:\n        /* \"contracts/BlastFurnace.sol\":2805:2810  value */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":2783:2796  claimedIngots */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":2783:2802  claimedIngots[addr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":2797:2801  addr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":2783:2802  claimedIngots[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":2783:2810  claimedIngots[addr] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":2626:2815  function _setClaimed(address addr, uint256 value) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_219:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":3081:3170  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"contracts/libraries/SafeMath.sol\":3139:3146  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":3164:3165  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":3160:3161  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":3160:3165  a / b */\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"contracts/libraries/SafeMath.sol\":3153:3165  return a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":3081:3170  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6654:6993  function _distributeNative(uint256 amount) internal {... */\n    tag_245:\n        /* \"contracts/BlastFurnace.sol\":6725:6726  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6715:6721  amount */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6715:6726  amount <= 0 */\n      gt\n        /* \"contracts/BlastFurnace.sol\":6711:6746  if (amount <= 0) {... */\n      iszero\n        /* \"contracts/BlastFurnace.sol\":6734:6741  return; */\n      tag_268\n        /* \"contracts/BlastFurnace.sol\":6711:6746  if (amount <= 0) {... */\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":6752:6766  address holder */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6771:6782  uint256 cut */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":6794:6800  uint i */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6789:6989  for (uint i = 0; i < _holders.length; i++) {... */\n    tag_270:\n        /* \"contracts/BlastFurnace.sol\":6810:6818  _holders */\n      0x12\n        /* \"contracts/BlastFurnace.sol\":6810:6825  _holders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6806:6807  i */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6806:6825  i < _holders.length */\n      lt\n        /* \"contracts/BlastFurnace.sol\":6789:6989  for (uint i = 0; i < _holders.length; i++) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":6847:6855  _holders */\n      0x12\n        /* \"contracts/BlastFurnace.sol\":6856:6857  i */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6847:6858  _holders[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_274\n      tag_275\n      jump\t// in\n    tag_274:\n    tag_273:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":6838:6858  holder = _holders[i] */\n      swap3\n      pop\n        /* \"contracts/BlastFurnace.sol\":6870:6921  amount.mul(claimedIngots[holder]).div(marketIngots) */\n      tag_277\n        /* \"contracts/BlastFurnace.sol\":6908:6920  marketIngots */\n      sload(0x0e)\n        /* \"contracts/BlastFurnace.sol\":6870:6903  amount.mul(claimedIngots[holder]) */\n      tag_278\n        /* \"contracts/BlastFurnace.sol\":6881:6894  claimedIngots */\n      0x0b\n        /* \"contracts/BlastFurnace.sol\":6881:6902  claimedIngots[holder] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6895:6901  holder */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":6881:6902  claimedIngots[holder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6870:6876  amount */\n      dup8\n        /* \"contracts/BlastFurnace.sol\":6870:6880  amount.mul */\n      tag_183\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6870:6903  amount.mul(claimedIngots[holder]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_278:\n        /* \"contracts/BlastFurnace.sol\":6870:6907  amount.mul(claimedIngots[holder]).div */\n      tag_227\n      swap1\n        /* \"contracts/BlastFurnace.sol\":6870:6921  amount.mul(claimedIngots[holder]).div(marketIngots) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"contracts/BlastFurnace.sol\":6864:6921  cut = amount.mul(claimedIngots[holder]).div(marketIngots) */\n      swap2\n      pop\n        /* \"contracts/BlastFurnace.sol\":6939:6940  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6933:6936  cut */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":6933:6940  cut > 0 */\n      gt\n        /* \"contracts/BlastFurnace.sol\":6929:6984  if (cut > 0) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":6949:6977  _transferNative(holder, cut) */\n      tag_280\n        /* \"contracts/BlastFurnace.sol\":6965:6971  holder */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6973:6976  cut */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6949:6964  _transferNative */\n      tag_281\n        /* \"contracts/BlastFurnace.sol\":6949:6977  _transferNative(holder, cut) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"contracts/BlastFurnace.sol\":6929:6984  if (cut > 0) {... */\n    tag_279:\n        /* \"contracts/BlastFurnace.sol\":6827:6830  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":6789:6989  for (uint i = 0; i < _holders.length; i++) {... */\n      jump(tag_270)\n    tag_271:\n      pop\n        /* \"contracts/BlastFurnace.sol\":6706:6993  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":6654:6993  function _distributeNative(uint256 amount) internal {... */\n    tag_268:\n      pop\n      jump\t// out\n        /* \"contracts/NativeTransferable.sol\":102:260  function _transferNative(address to, uint256 amount) internal returns (bool) {... */\n    tag_281:\n        /* \"contracts/NativeTransferable.sol\":173:177  bool */\n      0x00\n        /* \"contracts/NativeTransferable.sol\":196:198  to */\n      dup3\n        /* \"contracts/NativeTransferable.sol\":188:204  payable(to).send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NativeTransferable.sol\":188:212  payable(to).send(amount) */\n      0x08fc\n        /* \"contracts/NativeTransferable.sol\":205:211  amount */\n      dup4\n        /* \"contracts/NativeTransferable.sol\":188:212  payable(to).send(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NativeTransferable.sol\":184:237  if (payable(to).send(amount)) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/NativeTransferable.sol\":227:231  true */\n      0x01\n        /* \"contracts/NativeTransferable.sol\":220:231  return true */\n      swap1\n      pop\n      jump(tag_282)\n        /* \"contracts/NativeTransferable.sol\":184:237  if (payable(to).send(amount)) {... */\n    tag_284:\n        /* \"contracts/NativeTransferable.sol\":250:255  false */\n      0x00\n        /* \"contracts/NativeTransferable.sol\":243:255  return false */\n      swap1\n      pop\n        /* \"contracts/NativeTransferable.sol\":102:260  function _transferNative(address to, uint256 amount) internal returns (bool) {... */\n    tag_282:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_285:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_286:\n        /* \"#utility.yul\":177:201   */\n      tag_310\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_285\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_34:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_312\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_286\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_288:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_290:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_291:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_318\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_290\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_292:\n        /* \"#utility.yul\":1076:1100   */\n      tag_320\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_291\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_321:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_293:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_323\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_292\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_41:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_326\n      tag_288\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":1352:1471   */\n    tag_325:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_327\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_293\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_294:\n        /* \"#utility.yul\":1684:1708   */\n      tag_329\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_285\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_330:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_295:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_332\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_294\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_63:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_335\n      tag_288\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1960:2079   */\n    tag_334:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_336\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_295\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_296:\n        /* \"#utility.yul\":2306:2330   */\n      tag_338\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_291\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_66:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_340\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_296\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3045   */\n    tag_73:\n        /* \"#utility.yul\":2639:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      dup1\n        /* \"#utility.yul\":2696:2698   */\n      0x40\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2675:2682   */\n      dup6\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2783   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2702:2781   */\n      tag_343\n      tag_288\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2664:2783   */\n    tag_342:\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2847:2900   */\n      tag_344\n        /* \"#utility.yul\":2892:2899   */\n      dup6\n        /* \"#utility.yul\":2883:2889   */\n      dup3\n        /* \"#utility.yul\":2872:2881   */\n      dup7\n        /* \"#utility.yul\":2868:2890   */\n      add\n        /* \"#utility.yul\":2847:2900   */\n      tag_295\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2837:2900   */\n      swap3\n      pop\n        /* \"#utility.yul\":2793:2910   */\n      pop\n        /* \"#utility.yul\":2949:2951   */\n      0x20\n        /* \"#utility.yul\":2975:3028   */\n      tag_345\n        /* \"#utility.yul\":3020:3027   */\n      dup6\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup7\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_295\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2920:3038   */\n      pop\n        /* \"#utility.yul\":2571:3045   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3141   */\n    tag_297:\n        /* \"#utility.yul\":3085:3092   */\n      0x00\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3121:3134   */\n      iszero\n        /* \"#utility.yul\":3114:3135   */\n      iszero\n        /* \"#utility.yul\":3103:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3256   */\n    tag_298:\n        /* \"#utility.yul\":3228:3249   */\n      tag_348\n        /* \"#utility.yul\":3243:3248   */\n      dup2\n        /* \"#utility.yul\":3228:3249   */\n      tag_297\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3223:3226   */\n      dup3\n        /* \"#utility.yul\":3216:3250   */\n      mstore\n        /* \"#utility.yul\":3147:3256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3472   */\n    tag_84:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3465   */\n      tag_350\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3400:3465   */\n      tag_298\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3262:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3538   */\n    tag_299:\n        /* \"#utility.yul\":3506:3509   */\n      0x00\n        /* \"#utility.yul\":3527:3532   */\n      dup2\n        /* \"#utility.yul\":3520:3532   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3544:3686   */\n    tag_300:\n        /* \"#utility.yul\":3594:3603   */\n      0x00\n        /* \"#utility.yul\":3627:3680   */\n      tag_353\n        /* \"#utility.yul\":3645:3679   */\n      tag_354\n        /* \"#utility.yul\":3654:3678   */\n      tag_355\n        /* \"#utility.yul\":3672:3677   */\n      dup5\n        /* \"#utility.yul\":3654:3678   */\n      tag_290\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3645:3679   */\n      tag_299\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3627:3680   */\n      tag_290\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3614:3680   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:3818   */\n    tag_301:\n        /* \"#utility.yul\":3742:3751   */\n      0x00\n        /* \"#utility.yul\":3775:3812   */\n      tag_357\n        /* \"#utility.yul\":3806:3811   */\n      dup3\n        /* \"#utility.yul\":3775:3812   */\n      tag_300\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3762:3812   */\n      swap1\n      pop\n        /* \"#utility.yul\":3692:3818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3824:3963   */\n    tag_302:\n        /* \"#utility.yul\":3887:3896   */\n      0x00\n        /* \"#utility.yul\":3920:3957   */\n      tag_359\n        /* \"#utility.yul\":3951:3956   */\n      dup3\n        /* \"#utility.yul\":3920:3957   */\n      tag_301\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3907:3957   */\n      swap1\n      pop\n        /* \"#utility.yul\":3824:3963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3969:4126   */\n    tag_303:\n        /* \"#utility.yul\":4069:4119   */\n      tag_361\n        /* \"#utility.yul\":4113:4118   */\n      dup2\n        /* \"#utility.yul\":4069:4119   */\n      tag_302\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4064:4067   */\n      dup3\n        /* \"#utility.yul\":4057:4120   */\n      mstore\n        /* \"#utility.yul\":3969:4126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4380   */\n    tag_89:\n        /* \"#utility.yul\":4238:4242   */\n      0x00\n        /* \"#utility.yul\":4276:4278   */\n      0x20\n        /* \"#utility.yul\":4265:4274   */\n      dup3\n        /* \"#utility.yul\":4261:4279   */\n      add\n        /* \"#utility.yul\":4253:4279   */\n      swap1\n      pop\n        /* \"#utility.yul\":4289:4373   */\n      tag_363\n        /* \"#utility.yul\":4370:4371   */\n      0x00\n        /* \"#utility.yul\":4359:4368   */\n      dup4\n        /* \"#utility.yul\":4355:4372   */\n      add\n        /* \"#utility.yul\":4346:4352   */\n      dup5\n        /* \"#utility.yul\":4289:4373   */\n      tag_303\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4132:4380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4566   */\n    tag_304:\n        /* \"#utility.yul\":4434:4511   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4431:4432   */\n      0x00\n        /* \"#utility.yul\":4424:4512   */\n      mstore\n        /* \"#utility.yul\":4531:4535   */\n      0x11\n        /* \"#utility.yul\":4528:4529   */\n      0x04\n        /* \"#utility.yul\":4521:4536   */\n      mstore\n        /* \"#utility.yul\":4555:4559   */\n      0x24\n        /* \"#utility.yul\":4552:4553   */\n      0x00\n        /* \"#utility.yul\":4545:4560   */\n      revert\n        /* \"#utility.yul\":4572:4763   */\n    tag_141:\n        /* \"#utility.yul\":4612:4615   */\n      0x00\n        /* \"#utility.yul\":4631:4651   */\n      tag_366\n        /* \"#utility.yul\":4649:4650   */\n      dup3\n        /* \"#utility.yul\":4631:4651   */\n      tag_285\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4626:4651   */\n      swap2\n      pop\n        /* \"#utility.yul\":4665:4685   */\n      tag_367\n        /* \"#utility.yul\":4683:4684   */\n      dup4\n        /* \"#utility.yul\":4665:4685   */\n      tag_285\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4660:4685   */\n      swap3\n      pop\n        /* \"#utility.yul\":4708:4709   */\n      dup3\n        /* \"#utility.yul\":4705:4706   */\n      dup3\n        /* \"#utility.yul\":4701:4710   */\n      add\n        /* \"#utility.yul\":4694:4710   */\n      swap1\n      pop\n        /* \"#utility.yul\":4729:4732   */\n      dup1\n        /* \"#utility.yul\":4726:4727   */\n      dup3\n        /* \"#utility.yul\":4723:4733   */\n      gt\n        /* \"#utility.yul\":4720:4756   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4736:4754   */\n      tag_369\n      tag_304\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4720:4756   */\n    tag_368:\n        /* \"#utility.yul\":4572:4763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4769:5101   */\n    tag_144:\n        /* \"#utility.yul\":4890:4894   */\n      0x00\n        /* \"#utility.yul\":4928:4930   */\n      0x40\n        /* \"#utility.yul\":4917:4926   */\n      dup3\n        /* \"#utility.yul\":4913:4931   */\n      add\n        /* \"#utility.yul\":4905:4931   */\n      swap1\n      pop\n        /* \"#utility.yul\":4941:5012   */\n      tag_371\n        /* \"#utility.yul\":5009:5010   */\n      0x00\n        /* \"#utility.yul\":4998:5007   */\n      dup4\n        /* \"#utility.yul\":4994:5011   */\n      add\n        /* \"#utility.yul\":4985:4991   */\n      dup6\n        /* \"#utility.yul\":4941:5012   */\n      tag_296\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5022:5094   */\n      tag_372\n        /* \"#utility.yul\":5090:5092   */\n      0x20\n        /* \"#utility.yul\":5079:5088   */\n      dup4\n        /* \"#utility.yul\":5075:5093   */\n      add\n        /* \"#utility.yul\":5066:5072   */\n      dup5\n        /* \"#utility.yul\":5022:5094   */\n      tag_296\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4769:5101   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5107:5250   */\n    tag_305:\n        /* \"#utility.yul\":5164:5169   */\n      0x00\n        /* \"#utility.yul\":5195:5201   */\n      dup2\n        /* \"#utility.yul\":5189:5202   */\n      mload\n        /* \"#utility.yul\":5180:5202   */\n      swap1\n      pop\n        /* \"#utility.yul\":5211:5244   */\n      tag_374\n        /* \"#utility.yul\":5238:5243   */\n      dup2\n        /* \"#utility.yul\":5211:5244   */\n      tag_294\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5107:5250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5256:5607   */\n    tag_148:\n        /* \"#utility.yul\":5326:5332   */\n      0x00\n        /* \"#utility.yul\":5375:5377   */\n      0x20\n        /* \"#utility.yul\":5363:5372   */\n      dup3\n        /* \"#utility.yul\":5354:5361   */\n      dup5\n        /* \"#utility.yul\":5350:5373   */\n      sub\n        /* \"#utility.yul\":5346:5378   */\n      slt\n        /* \"#utility.yul\":5343:5462   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":5381:5460   */\n      tag_377\n      tag_288\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5343:5462   */\n    tag_376:\n        /* \"#utility.yul\":5501:5502   */\n      0x00\n        /* \"#utility.yul\":5526:5590   */\n      tag_378\n        /* \"#utility.yul\":5582:5589   */\n      dup5\n        /* \"#utility.yul\":5573:5579   */\n      dup3\n        /* \"#utility.yul\":5562:5571   */\n      dup6\n        /* \"#utility.yul\":5558:5580   */\n      add\n        /* \"#utility.yul\":5526:5590   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5516:5590   */\n      swap2\n      pop\n        /* \"#utility.yul\":5472:5600   */\n      pop\n        /* \"#utility.yul\":5256:5607   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5613:5807   */\n    tag_242:\n        /* \"#utility.yul\":5653:5657   */\n      0x00\n        /* \"#utility.yul\":5673:5693   */\n      tag_380\n        /* \"#utility.yul\":5691:5692   */\n      dup3\n        /* \"#utility.yul\":5673:5693   */\n      tag_285\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5668:5693   */\n      swap2\n      pop\n        /* \"#utility.yul\":5707:5727   */\n      tag_381\n        /* \"#utility.yul\":5725:5726   */\n      dup4\n        /* \"#utility.yul\":5707:5727   */\n      tag_285\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5702:5727   */\n      swap3\n      pop\n        /* \"#utility.yul\":5751:5752   */\n      dup3\n        /* \"#utility.yul\":5748:5749   */\n      dup3\n        /* \"#utility.yul\":5744:5753   */\n      sub\n        /* \"#utility.yul\":5736:5753   */\n      swap1\n      pop\n        /* \"#utility.yul\":5775:5776   */\n      dup2\n        /* \"#utility.yul\":5769:5773   */\n      dup2\n        /* \"#utility.yul\":5766:5777   */\n      gt\n        /* \"#utility.yul\":5763:5800   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":5780:5798   */\n      tag_383\n      tag_304\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5763:5800   */\n    tag_382:\n        /* \"#utility.yul\":5613:5807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5813:6223   */\n    tag_259:\n        /* \"#utility.yul\":5853:5860   */\n      0x00\n        /* \"#utility.yul\":5876:5896   */\n      tag_385\n        /* \"#utility.yul\":5894:5895   */\n      dup3\n        /* \"#utility.yul\":5876:5896   */\n      tag_285\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5871:5896   */\n      swap2\n      pop\n        /* \"#utility.yul\":5910:5930   */\n      tag_386\n        /* \"#utility.yul\":5928:5929   */\n      dup4\n        /* \"#utility.yul\":5910:5930   */\n      tag_285\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5905:5930   */\n      swap3\n      pop\n        /* \"#utility.yul\":5965:5966   */\n      dup3\n        /* \"#utility.yul\":5962:5963   */\n      dup3\n        /* \"#utility.yul\":5958:5967   */\n      mul\n        /* \"#utility.yul\":5987:6017   */\n      tag_387\n        /* \"#utility.yul\":6005:6016   */\n      dup2\n        /* \"#utility.yul\":5987:6017   */\n      tag_285\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5976:6017   */\n      swap2\n      pop\n        /* \"#utility.yul\":6166:6167   */\n      dup3\n        /* \"#utility.yul\":6157:6164   */\n      dup3\n        /* \"#utility.yul\":6153:6168   */\n      div\n        /* \"#utility.yul\":6150:6151   */\n      dup5\n        /* \"#utility.yul\":6147:6169   */\n      eq\n        /* \"#utility.yul\":6127:6128   */\n      dup4\n        /* \"#utility.yul\":6120:6129   */\n      iszero\n        /* \"#utility.yul\":6100:6183   */\n      or\n        /* \"#utility.yul\":6077:6216   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":6196:6214   */\n      tag_389\n      tag_304\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6077:6216   */\n    tag_388:\n        /* \"#utility.yul\":5861:6223   */\n      pop\n        /* \"#utility.yul\":5813:6223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6229:6409   */\n    tag_306:\n        /* \"#utility.yul\":6277:6354   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6274:6275   */\n      0x00\n        /* \"#utility.yul\":6267:6355   */\n      mstore\n        /* \"#utility.yul\":6374:6378   */\n      0x12\n        /* \"#utility.yul\":6371:6372   */\n      0x04\n        /* \"#utility.yul\":6364:6379   */\n      mstore\n        /* \"#utility.yul\":6398:6402   */\n      0x24\n        /* \"#utility.yul\":6395:6396   */\n      0x00\n        /* \"#utility.yul\":6388:6403   */\n      revert\n        /* \"#utility.yul\":6415:6600   */\n    tag_267:\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6472:6492   */\n      tag_392\n        /* \"#utility.yul\":6490:6491   */\n      dup3\n        /* \"#utility.yul\":6472:6492   */\n      tag_285\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6467:6492   */\n      swap2\n      pop\n        /* \"#utility.yul\":6506:6526   */\n      tag_393\n        /* \"#utility.yul\":6524:6525   */\n      dup4\n        /* \"#utility.yul\":6506:6526   */\n      tag_285\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6501:6526   */\n      swap3\n      pop\n        /* \"#utility.yul\":6545:6546   */\n      dup3\n        /* \"#utility.yul\":6535:6570   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6550:6568   */\n      tag_395\n      tag_306\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6535:6570   */\n    tag_394:\n        /* \"#utility.yul\":6592:6593   */\n      dup3\n        /* \"#utility.yul\":6589:6590   */\n      dup3\n        /* \"#utility.yul\":6585:6594   */\n      div\n        /* \"#utility.yul\":6580:6594   */\n      swap1\n      pop\n        /* \"#utility.yul\":6415:6600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6606:6786   */\n    tag_275:\n        /* \"#utility.yul\":6654:6731   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6651:6652   */\n      0x00\n        /* \"#utility.yul\":6644:6732   */\n      mstore\n        /* \"#utility.yul\":6751:6755   */\n      0x32\n        /* \"#utility.yul\":6748:6749   */\n      0x04\n        /* \"#utility.yul\":6741:6756   */\n      mstore\n        /* \"#utility.yul\":6775:6779   */\n      0x24\n        /* \"#utility.yul\":6772:6773   */\n      0x00\n        /* \"#utility.yul\":6765:6780   */\n      revert\n\n    auxdata: 0xa26469706673582212206a2f79ac37994ea56b054b14a61ee2bf409d2c7abd98d59767b8c08b6f9b6c9764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_897": {
									"entryPoint": null,
									"id": 897,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526201518060035562107ac060055561271060065561138860075560036008555f60095f6101000a81548160ff021916908315150217905550348015610047575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600960016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b74806100d55f395ff3fe608060405260043610610134575f3560e01c80638da5cb5b116100aa578063e5d782fc1161006e578063e5d782fc146103fa578063e953f98214610416578063eaca243b14610452578063f2e809e01461047a578063f2fde38b146104a2578063feeea92e146104ca57610134565b80638da5cb5b146103045780638f32d59b1461032e57806397d7577614610358578063b18a2f8214610382578063c2a6856f146103be57610134565b8063450c9d7d116100fc578063450c9d7d146101d45780634addc0e8146102105780634b634b061461023a57806353e3323b14610276578063715018a6146102b25780637a571ae1146102c857610134565b8063012d754c1461013857806312065fe01461014e57806323084e5f146101785780632cf4f2741461018e5780633c5f07cb146101ca575b5f80fd5b348015610143575f80fd5b5061014c6104f2565b005b348015610159575f80fd5b5061016261067b565b60405161016f9190611776565b60405180910390f35b348015610183575f80fd5b5061018c610682565b005b348015610199575f80fd5b506101b460048036038101906101af91906117ed565b6107f4565b6040516101c19190611776565b60405180910390f35b6101d261084b565b005b3480156101df575f80fd5b506101fa60048036038101906101f591906117ed565b610890565b6040516102079190611776565b60405180910390f35b34801561021b575f80fd5b506102246108b3565b6040516102319190611776565b60405180910390f35b348015610245575f80fd5b50610260600480360381019061025b91906117ed565b6108b9565b60405161026d9190611776565b60405180910390f35b348015610281575f80fd5b5061029c60048036038101906102979190611842565b6108ff565b6040516102a9919061187c565b60405180910390f35b3480156102bd575f80fd5b506102c661093a565b005b3480156102d3575f80fd5b506102ee60048036038101906102e99190611895565b6109ed565b6040516102fb9190611776565b60405180910390f35b34801561030f575f80fd5b50610318610a03565b604051610325919061187c565b60405180910390f35b348015610339575f80fd5b50610342610a2a565b60405161034f91906118ed565b60405180910390f35b348015610363575f80fd5b5061036c610a7f565b6040516103799190611961565b60405180910390f35b34801561038d575f80fd5b506103a860048036038101906103a39190611842565b610aa4565b6040516103b59190611776565b60405180910390f35b3480156103c9575f80fd5b506103e460048036038101906103df91906117ed565b610ab9565b6040516103f19190611776565b60405180910390f35b610414600480360381019061040f91906117ed565b610b5e565b005b348015610421575f80fd5b5061043c60048036038101906104379190611842565b610d8f565b6040516104499190611776565b60405180910390f35b34801561045d575f80fd5b5061047860048036038101906104739190611842565b610da1565b005b348015610485575f80fd5b506104a0600480360381019061049b91906117ed565b610dbb565b005b3480156104ad575f80fd5b506104c860048036038101906104c391906117ed565b610ed5565b005b3480156104d5575f80fd5b506104f060048036038101906104eb91906117ed565b610ef1565b005b60095f9054906101000a900460ff16610509575f80fd5b5f610513336107f4565b90505f61051f82610aa4565b90505f61052b82611301565b90505f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506105bd600e548461131f565b600e81905550600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610628573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc61064d8484611334565b90811502906040515f60405180830381858888f19350505050158015610675573d5f803e3d5ffd5b50505050565b5f47905090565b5f3390505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905042600354826106d691906119a7565b10156106e35750506107f2565b4260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663954fa5ee30856040518363ffffffff1660e01b81526004016107829291906119da565b6020604051808303815f875af115801561079e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c29190611a15565b90505f8111156107ee578060045f8282546107dd91906119a7565b925050819055506107ed81611349565b5b5050505b565b5f610844600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461083f84610ab9565b61131f565b9050919050565b610853610a2a565b61085b575f80fd5b5f600e5414610868575f80fd5b600160095f6101000a81548160ff0219169083151502179055506419254d3800600e81905550565b5f8061089b836107f4565b90505f6108a782610aa4565b90508092505050919050565b60035481565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600f818154811061090e575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610942610a2a565b61094a575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f6109fb8383600e54611355565b905092915050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610ab282600e5447611355565b9050919050565b5f80610b0d600554610b0842600c5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611334565b6113a7565b9050610b5681600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546113bf565b915050919050565b60095f9054906101000a900460ff16610b75575f80fd5b5f3390505f610b8d34610b884734611334565b6109ed565b9050610ba181610b9c83611301565b611334565b90505f610bad34611301565b9050600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c14573d5f803e3d5ffd5b50610c6583610c60600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548561131f565b6113d4565b610c6e84610ef1565b6706f05b59d3b200003410610d89576001151560115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514610d8857600160115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600f83908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50505050565b5f610d9a82476109ed565b9050919050565b610da9610a2a565b610db1575f80fd5b8060038190555050565b610dc3610a2a565b610dcb575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e165773430000000000000000000000000000000000000290505b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610ebc575f80fd5b505af1158015610ece573d5f803e3d5ffd5b5050505050565b610edd610a2a565b610ee5575f80fd5b610eee81611525565b50565b60095f9054906101000a900460ff16610f08575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f3f575f90505b5f73ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561105e57503373ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156110df5780600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5f6110e9336107f4565b90505f6110f882600554611617565b9050611141600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548261131f565b600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061118c335f6113d4565b42600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112e0600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166112db600b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546112d6866008611617565b61131f565b6113d4565b6112f6600e546112f1846005611617565b61131f565b600e81905550505050565b5f611318611311836008546113bf565b6064611617565b9050919050565b5f818361132c91906119a7565b905092915050565b5f81836113419190611a40565b905092915050565b6113528161162c565b50565b5f61139e611365600654846113bf565b61139960075461139461138e61137d6006548a6113bf565b6113896007548c6113bf565b61131f565b89611617565b61131f565b611617565b90509392505050565b5f8183106113b557816113b7565b825b905092915050565b5f81836113cc9190611a73565b905092915050565b6001151560105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515146114df57601282908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361155c575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f81836116249190611ae1565b905092915050565b5f81111561170e575f805f5b60128054905081101561170a576012818154811061165957611658611b11565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506116e7600e546116d9600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054876113bf90919063ffffffff16565b61161790919063ffffffff16565b91505f8211156116fd576116fb8383611711565b505b8080600101915050611638565b5050505b50565b5f8273ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050156117545760019050611758565b5f90505b92915050565b5f819050919050565b6117708161175e565b82525050565b5f6020820190506117895f830184611767565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117bc82611793565b9050919050565b6117cc816117b2565b81146117d6575f80fd5b50565b5f813590506117e7816117c3565b92915050565b5f602082840312156118025761180161178f565b5b5f61180f848285016117d9565b91505092915050565b6118218161175e565b811461182b575f80fd5b50565b5f8135905061183c81611818565b92915050565b5f602082840312156118575761185661178f565b5b5f6118648482850161182e565b91505092915050565b611876816117b2565b82525050565b5f60208201905061188f5f83018461186d565b92915050565b5f80604083850312156118ab576118aa61178f565b5b5f6118b88582860161182e565b92505060206118c98582860161182e565b9150509250929050565b5f8115159050919050565b6118e7816118d3565b82525050565b5f6020820190506119005f8301846118de565b92915050565b5f819050919050565b5f61192961192461191f84611793565b611906565b611793565b9050919050565b5f61193a8261190f565b9050919050565b5f61194b82611930565b9050919050565b61195b81611941565b82525050565b5f6020820190506119745f830184611952565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119b18261175e565b91506119bc8361175e565b92508282019050808211156119d4576119d361197a565b5b92915050565b5f6040820190506119ed5f83018561186d565b6119fa602083018461186d565b9392505050565b5f81519050611a0f81611818565b92915050565b5f60208284031215611a2a57611a2961178f565b5b5f611a3784828501611a01565b91505092915050565b5f611a4a8261175e565b9150611a558361175e565b9250828203905081811115611a6d57611a6c61197a565b5b92915050565b5f611a7d8261175e565b9150611a888361175e565b9250828202611a968161175e565b91508282048414831517611aad57611aac61197a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aeb8261175e565b9150611af68361175e565b925082611b0657611b05611ab4565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea26469706673582212206a2f79ac37994ea56b054b14a61ee2bf409d2c7abd98d59767b8c08b6f9b6c9764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0x3 SSTORE PUSH3 0x107AC0 PUSH1 0x5 SSTORE PUSH2 0x2710 PUSH1 0x6 SSTORE PUSH2 0x1388 PUSH1 0x7 SSTORE PUSH1 0x3 PUSH1 0x8 SSTORE PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1B74 DUP1 PUSH2 0xD5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xE5D782FC GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE5D782FC EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xE953F982 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xEACA243B EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xF2E809E0 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xFEEEA92E EQ PUSH2 0x4CA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x97D75776 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xB18A2F82 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xC2A6856F EQ PUSH2 0x3BE JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x450C9D7D GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x450C9D7D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4ADDC0E8 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x4B634B06 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x53E3323B EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x7A571AE1 EQ PUSH2 0x2C8 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x12D754C EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x23084E5F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x2CF4F274 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x84B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xDA1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x509 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x513 CALLER PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x51F DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x52B DUP3 PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5BD PUSH1 0xE SLOAD DUP5 PUSH2 0x131F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x64D DUP5 DUP5 PUSH2 0x1334 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP TIMESTAMP PUSH1 0x3 SLOAD DUP3 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST LT ISZERO PUSH2 0x6E3 JUMPI POP POP PUSH2 0x7F2 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x954FA5EE ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x7EE JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7ED DUP2 PUSH2 0x1349 JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x844 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x83F DUP5 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x853 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x85B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD EQ PUSH2 0x868 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH5 0x19254D3800 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89B DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x8A7 DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x942 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x94A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9FB DUP4 DUP4 PUSH1 0xE SLOAD PUSH2 0x1355 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xAB2 DUP3 PUSH1 0xE SLOAD SELFBALANCE PUSH2 0x1355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB0D PUSH1 0x5 SLOAD PUSH2 0xB08 TIMESTAMP PUSH1 0xC PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1334 JUMP JUMPDEST PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xB56 DUP2 PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB75 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0xB8D CALLVALUE PUSH2 0xB88 SELFBALANCE CALLVALUE PUSH2 0x1334 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP PUSH2 0xBA1 DUP2 PUSH2 0xB9C DUP4 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBAD CALLVALUE PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC14 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xC65 DUP4 PUSH2 0xC60 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP6 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0xC6E DUP5 PUSH2 0xEF1 JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 CALLVALUE LT PUSH2 0xD89 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xD88 JUMPI PUSH1 0x1 PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD9A DUP3 SELFBALANCE PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA9 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xDB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDC3 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xDCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE16 JUMPI PUSH20 0x4300000000000000000000000000000000000002 SWAP1 POP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E606C47 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDD PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xEE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEEE DUP2 PUSH2 0x1525 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF08 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3F JUMPI PUSH0 SWAP1 POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x105E JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x10DF JUMPI DUP1 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH2 0x10E9 CALLER PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10F8 DUP3 PUSH1 0x5 SLOAD PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP PUSH2 0x1141 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x131F JUMP JUMPDEST PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x118C CALLER PUSH0 PUSH2 0x13D4 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12E0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12DB PUSH1 0xB PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x12D6 DUP7 PUSH1 0x8 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x12F6 PUSH1 0xE SLOAD PUSH2 0x12F1 DUP5 PUSH1 0x5 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1318 PUSH2 0x1311 DUP4 PUSH1 0x8 SLOAD PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1352 DUP2 PUSH2 0x162C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x139E PUSH2 0x1365 PUSH1 0x6 SLOAD DUP5 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x7 SLOAD PUSH2 0x1394 PUSH2 0x138E PUSH2 0x137D PUSH1 0x6 SLOAD DUP11 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x1389 PUSH1 0x7 SLOAD DUP13 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST DUP10 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x13B5 JUMPI DUP2 PUSH2 0x13B7 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x14DF JUMPI PUSH1 0x12 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1624 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x170E JUMPI PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x170A JUMPI PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x1B11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x16E7 PUSH1 0xE SLOAD PUSH2 0x16D9 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP8 PUSH2 0x13BF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1617 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FB DUP4 DUP4 PUSH2 0x1711 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1638 JUMP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x1754 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1758 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1770 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1789 PUSH0 DUP4 ADD DUP5 PUSH2 0x1767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BC DUP3 PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x17B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E7 DUP2 PUSH2 0x17C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x180F DUP5 DUP3 DUP6 ADD PUSH2 0x17D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183C DUP2 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH2 0x17B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188F PUSH0 DUP4 ADD DUP5 PUSH2 0x186D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B8 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C9 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E7 DUP2 PUSH2 0x18D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1900 PUSH0 DUP4 ADD DUP5 PUSH2 0x18DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1929 PUSH2 0x1924 PUSH2 0x191F DUP5 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x193A DUP3 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x194B DUP3 PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x1941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1974 PUSH0 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B1 DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x19BC DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19ED PUSH0 DUP4 ADD DUP6 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x19FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x186D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0F DUP2 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A37 DUP5 DUP3 DUP6 ADD PUSH2 0x1A01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4A DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A55 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7D DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A88 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A96 DUP2 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x197A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AEB DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF6 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B06 JUMPI PUSH2 0x1B05 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x2F79AC37994EA56B054B14 0xA6 0x1E 0xE2 0xBF BLOCKHASH SWAP14 0x2C PUSH27 0xBD98D59767B8C08B6F9B6C9764736F6C6343000818003300000000 ",
							"sourceMap": "1797:5199:1:-:0;;;410:6:0;373:43;;1935:7:1;1893:49;;2015:5;1993:27;;2047:4;2024:27;;2083:1;2055:29;;2115:5;2088:32;;;;;;;;;;;;;;;;;;;;2569:52;;;;;;;;;;288:10:3;279:6;;:19;;;;;;;;;;;;;;;;;;2605:10:1;2588:6;;:28;;;;;;;;;;;;;;;;;;1797:5199;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BLAST_20": {
									"entryPoint": 2687,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_blastClaimInterval_27": {
									"entryPoint": 2227,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeNative_841": {
									"entryPoint": 5676,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setClaimed_240": {
									"entryPoint": 5076,
									"id": 240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferNative_867": {
									"entryPoint": 5905,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_978": {
									"entryPoint": 5413,
									"id": 978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1154": {
									"entryPoint": 4895,
									"id": 1154,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@airdropQualifiers_184": {
									"entryPoint": 2303,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blastFeesClaimed_782": {
									"entryPoint": 4937,
									"id": 782,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyIngots_551": {
									"entryPoint": 2910,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateIngotBuySimple_644": {
									"entryPoint": 3471,
									"id": 644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateIngotBuy_627": {
									"entryPoint": 2541,
									"id": 627,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateIngotSell_611": {
									"entryPoint": 2724,
									"id": 611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTrade_593": {
									"entryPoint": 4949,
									"id": 593,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@claimMyGasFees_84": {
									"entryPoint": 1666,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@devFee_662": {
									"entryPoint": 4865,
									"id": 662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_1199": {
									"entryPoint": 5655,
									"id": 1199,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@furnaceRewards_456": {
									"entryPoint": 2192,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_694": {
									"entryPoint": 1659,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getIngotsSinceLastHatch_754": {
									"entryPoint": 2745,
									"id": 754,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyIngots_724": {
									"entryPoint": 2036,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyMiners_706": {
									"entryPoint": 2233,
									"id": 706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hatchIngots_365": {
									"entryPoint": 3825,
									"id": 365,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_925": {
									"entryPoint": 2602,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_771": {
									"entryPoint": 5031,
									"id": 771,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1184": {
									"entryPoint": 5055,
									"id": 1184,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_905": {
									"entryPoint": 2563,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_942": {
									"entryPoint": 2362,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@seedMarket_682": {
									"entryPoint": 2123,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellIngots_434": {
									"entryPoint": 1266,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlastClaimInterval_127": {
									"entryPoint": 3489,
									"id": 127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setupBlast_115": {
									"entryPoint": 3515,
									"id": 115,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1169": {
									"entryPoint": 4916,
									"id": 1169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_954": {
									"entryPoint": 3797,
									"id": 954,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBlast_$15__to_t_address__fromStack_reversed": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBlast_$15_to_t_address": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6789:5",
										"nodeType": "YulBlock",
										"src": "0:6789:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:5",
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nativeSrc": "62:16:5",
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:5",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nativeSrc": "155:53:5",
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nativeSrc": "177:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nativeSrc": "165:37:5",
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nativeSrc": "165:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:5",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:5",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nativeSrc": "312:124:5",
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nativeSrc": "322:26:5",
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:5",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nativeSrc": "330:18:5",
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:5",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nativeSrc": "411:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nativeSrc": "358:71:5",
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nativeSrc": "358:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:5",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:5",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:5",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nativeSrc": "482:35:5",
													"nodeType": "YulBlock",
													"src": "482:35:5",
													"statements": [
														{
															"nativeSrc": "492:19:5",
															"nodeType": "YulAssignment",
															"src": "492:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:5",
																		"nodeType": "YulLiteral",
																		"src": "508:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:5"
																},
																"nativeSrc": "502:9:5",
																"nodeType": "YulFunctionCall",
																"src": "502:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:5",
														"nodeType": "YulTypedName",
														"src": "475:6:5",
														"type": ""
													}
												],
												"src": "442:75:5"
											},
											{
												"body": {
													"nativeSrc": "612:28:5",
													"nodeType": "YulBlock",
													"src": "612:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:5",
																		"nodeType": "YulLiteral",
																		"src": "629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:5",
																		"nodeType": "YulLiteral",
																		"src": "632:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:5"
																},
																"nativeSrc": "622:12:5",
																"nodeType": "YulFunctionCall",
																"src": "622:12:5"
															},
															"nativeSrc": "622:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:5"
											},
											{
												"body": {
													"nativeSrc": "735:28:5",
													"nodeType": "YulBlock",
													"src": "735:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:5",
																		"nodeType": "YulLiteral",
																		"src": "752:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:5",
																		"nodeType": "YulLiteral",
																		"src": "755:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:5"
																},
																"nativeSrc": "745:12:5",
																"nodeType": "YulFunctionCall",
																"src": "745:12:5"
															},
															"nativeSrc": "745:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:5"
											},
											{
												"body": {
													"nativeSrc": "814:81:5",
													"nodeType": "YulBlock",
													"src": "814:81:5",
													"statements": [
														{
															"nativeSrc": "824:65:5",
															"nodeType": "YulAssignment",
															"src": "824:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:5",
																		"nodeType": "YulLiteral",
																		"src": "846:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:5"
																},
																"nativeSrc": "835:54:5",
																"nodeType": "YulFunctionCall",
																"src": "835:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:5",
														"nodeType": "YulTypedName",
														"src": "796:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:5",
														"nodeType": "YulTypedName",
														"src": "806:7:5",
														"type": ""
													}
												],
												"src": "769:126:5"
											},
											{
												"body": {
													"nativeSrc": "946:51:5",
													"nodeType": "YulBlock",
													"src": "946:51:5",
													"statements": [
														{
															"nativeSrc": "956:35:5",
															"nodeType": "YulAssignment",
															"src": "956:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:5"
																},
																"nativeSrc": "967:24:5",
																"nodeType": "YulFunctionCall",
																"src": "967:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:5",
														"nodeType": "YulTypedName",
														"src": "928:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:5",
														"nodeType": "YulTypedName",
														"src": "938:7:5",
														"type": ""
													}
												],
												"src": "901:96:5"
											},
											{
												"body": {
													"nativeSrc": "1046:79:5",
													"nodeType": "YulBlock",
													"src": "1046:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:5",
																"nodeType": "YulBlock",
																"src": "1103:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:5"
																			},
																			"nativeSrc": "1105:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:5"
																		},
																		"nativeSrc": "1105:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:5"
																				},
																				"nativeSrc": "1076:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:5"
																		},
																		"nativeSrc": "1066:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:5"
																},
																"nativeSrc": "1059:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:5"
															},
															"nativeSrc": "1056:63:5",
															"nodeType": "YulIf",
															"src": "1056:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:5",
														"nodeType": "YulTypedName",
														"src": "1039:5:5",
														"type": ""
													}
												],
												"src": "1003:122:5"
											},
											{
												"body": {
													"nativeSrc": "1183:87:5",
													"nodeType": "YulBlock",
													"src": "1183:87:5",
													"statements": [
														{
															"nativeSrc": "1193:29:5",
															"nodeType": "YulAssignment",
															"src": "1193:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:5"
																},
																"nativeSrc": "1202:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:5"
																},
																"nativeSrc": "1231:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:5"
															},
															"nativeSrc": "1231:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:5",
														"nodeType": "YulTypedName",
														"src": "1161:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:5",
														"nodeType": "YulTypedName",
														"src": "1169:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:5",
														"nodeType": "YulTypedName",
														"src": "1177:5:5",
														"type": ""
													}
												],
												"src": "1131:139:5"
											},
											{
												"body": {
													"nativeSrc": "1342:263:5",
													"nodeType": "YulBlock",
													"src": "1342:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:5",
																"nodeType": "YulBlock",
																"src": "1388:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:5"
																			},
																			"nativeSrc": "1390:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:5"
																		},
																		"nativeSrc": "1390:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:5"
																		},
																		"nativeSrc": "1359:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:5"
																},
																"nativeSrc": "1355:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:5"
															},
															"nativeSrc": "1352:119:5",
															"nodeType": "YulIf",
															"src": "1352:119:5"
														},
														{
															"nativeSrc": "1481:117:5",
															"nodeType": "YulBlock",
															"src": "1481:117:5",
															"statements": [
																{
																	"nativeSrc": "1496:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:5"
																				},
																				"nativeSrc": "1556:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:5"
																		},
																		"nativeSrc": "1535:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:5",
														"nodeType": "YulTypedName",
														"src": "1312:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:5",
														"nodeType": "YulTypedName",
														"src": "1323:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:5",
														"nodeType": "YulTypedName",
														"src": "1335:6:5",
														"type": ""
													}
												],
												"src": "1276:329:5"
											},
											{
												"body": {
													"nativeSrc": "1654:79:5",
													"nodeType": "YulBlock",
													"src": "1654:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:5",
																"nodeType": "YulBlock",
																"src": "1711:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:5"
																		},
																		"nativeSrc": "1713:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:5"
																				},
																				"nativeSrc": "1684:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:5"
																		},
																		"nativeSrc": "1674:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:5"
																},
																"nativeSrc": "1667:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:5"
															},
															"nativeSrc": "1664:63:5",
															"nodeType": "YulIf",
															"src": "1664:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:5",
														"nodeType": "YulTypedName",
														"src": "1647:5:5",
														"type": ""
													}
												],
												"src": "1611:122:5"
											},
											{
												"body": {
													"nativeSrc": "1791:87:5",
													"nodeType": "YulBlock",
													"src": "1791:87:5",
													"statements": [
														{
															"nativeSrc": "1801:29:5",
															"nodeType": "YulAssignment",
															"src": "1801:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:5"
																},
																"nativeSrc": "1810:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:5"
																},
																"nativeSrc": "1839:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:5"
															},
															"nativeSrc": "1839:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:5",
														"nodeType": "YulTypedName",
														"src": "1777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:5",
														"nodeType": "YulTypedName",
														"src": "1785:5:5",
														"type": ""
													}
												],
												"src": "1739:139:5"
											},
											{
												"body": {
													"nativeSrc": "1950:263:5",
													"nodeType": "YulBlock",
													"src": "1950:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:5",
																"nodeType": "YulBlock",
																"src": "1996:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:5"
																			},
																			"nativeSrc": "1998:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:5"
																		},
																		"nativeSrc": "1998:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:5"
																		},
																		"nativeSrc": "1967:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:5"
																},
																"nativeSrc": "1963:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:5"
															},
															"nativeSrc": "1960:119:5",
															"nodeType": "YulIf",
															"src": "1960:119:5"
														},
														{
															"nativeSrc": "2089:117:5",
															"nodeType": "YulBlock",
															"src": "2089:117:5",
															"statements": [
																{
																	"nativeSrc": "2104:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:5"
																				},
																				"nativeSrc": "2164:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:5"
																		},
																		"nativeSrc": "2143:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:5",
														"nodeType": "YulTypedName",
														"src": "1920:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:5",
														"nodeType": "YulTypedName",
														"src": "1931:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:5",
														"nodeType": "YulTypedName",
														"src": "1943:6:5",
														"type": ""
													}
												],
												"src": "1884:329:5"
											},
											{
												"body": {
													"nativeSrc": "2284:53:5",
													"nodeType": "YulBlock",
													"src": "2284:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2301:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2324:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2306:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:5"
																		},
																		"nativeSrc": "2306:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:5"
																},
																"nativeSrc": "2294:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2294:37:5"
															},
															"nativeSrc": "2294:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2219:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2272:5:5",
														"nodeType": "YulTypedName",
														"src": "2272:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2279:3:5",
														"nodeType": "YulTypedName",
														"src": "2279:3:5",
														"type": ""
													}
												],
												"src": "2219:118:5"
											},
											{
												"body": {
													"nativeSrc": "2441:124:5",
													"nodeType": "YulBlock",
													"src": "2441:124:5",
													"statements": [
														{
															"nativeSrc": "2451:26:5",
															"nodeType": "YulAssignment",
															"src": "2451:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2474:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2459:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:5"
																},
																"nativeSrc": "2459:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2459:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2451:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2531:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:5"
																		},
																		"nativeSrc": "2540:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2487:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:5"
																},
																"nativeSrc": "2487:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2487:71:5"
															},
															"nativeSrc": "2487:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2343:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2413:9:5",
														"nodeType": "YulTypedName",
														"src": "2413:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2425:6:5",
														"nodeType": "YulTypedName",
														"src": "2425:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2436:4:5",
														"nodeType": "YulTypedName",
														"src": "2436:4:5",
														"type": ""
													}
												],
												"src": "2343:222:5"
											},
											{
												"body": {
													"nativeSrc": "2654:391:5",
													"nodeType": "YulBlock",
													"src": "2654:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2700:83:5",
																"nodeType": "YulBlock",
																"src": "2700:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2702:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2702:77:5"
																			},
																			"nativeSrc": "2702:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2702:79:5"
																		},
																		"nativeSrc": "2702:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2675:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2684:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2671:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:5"
																		},
																		"nativeSrc": "2671:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2667:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:5"
																},
																"nativeSrc": "2667:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2667:32:5"
															},
															"nativeSrc": "2664:119:5",
															"nodeType": "YulIf",
															"src": "2664:119:5"
														},
														{
															"nativeSrc": "2793:117:5",
															"nodeType": "YulBlock",
															"src": "2793:117:5",
															"statements": [
																{
																	"nativeSrc": "2808:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2808:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2822:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2822:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2812:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2812:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2837:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2837:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2872:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2872:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2883:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2883:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2868:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2868:3:5"
																				},
																				"nativeSrc": "2868:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2892:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2892:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2847:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2847:20:5"
																		},
																		"nativeSrc": "2847:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2847:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2837:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2837:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2920:118:5",
															"nodeType": "YulBlock",
															"src": "2920:118:5",
															"statements": [
																{
																	"nativeSrc": "2935:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2935:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2939:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2939:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:5"
																				},
																				"nativeSrc": "2996:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2975:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:5"
																		},
																		"nativeSrc": "2975:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2965:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2571:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2616:9:5",
														"nodeType": "YulTypedName",
														"src": "2616:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2627:7:5",
														"nodeType": "YulTypedName",
														"src": "2627:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2639:6:5",
														"nodeType": "YulTypedName",
														"src": "2639:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2647:6:5",
														"nodeType": "YulTypedName",
														"src": "2647:6:5",
														"type": ""
													}
												],
												"src": "2571:474:5"
											},
											{
												"body": {
													"nativeSrc": "3093:48:5",
													"nodeType": "YulBlock",
													"src": "3093:48:5",
													"statements": [
														{
															"nativeSrc": "3103:32:5",
															"nodeType": "YulAssignment",
															"src": "3103:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3128:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3121:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:5"
																		},
																		"nativeSrc": "3121:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3114:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:5"
																},
																"nativeSrc": "3114:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3103:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3103:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3051:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3075:5:5",
														"nodeType": "YulTypedName",
														"src": "3075:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3085:7:5",
														"nodeType": "YulTypedName",
														"src": "3085:7:5",
														"type": ""
													}
												],
												"src": "3051:90:5"
											},
											{
												"body": {
													"nativeSrc": "3206:50:5",
													"nodeType": "YulBlock",
													"src": "3206:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3223:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3223:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3243:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3243:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3228:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "3228:14:5"
																		},
																		"nativeSrc": "3228:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:5"
																},
																"nativeSrc": "3216:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:5"
															},
															"nativeSrc": "3216:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3147:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3194:5:5",
														"nodeType": "YulTypedName",
														"src": "3194:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3201:3:5",
														"nodeType": "YulTypedName",
														"src": "3201:3:5",
														"type": ""
													}
												],
												"src": "3147:109:5"
											},
											{
												"body": {
													"nativeSrc": "3354:118:5",
													"nodeType": "YulBlock",
													"src": "3354:118:5",
													"statements": [
														{
															"nativeSrc": "3364:26:5",
															"nodeType": "YulAssignment",
															"src": "3364:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:5"
																},
																"nativeSrc": "3372:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3438:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:5"
																		},
																		"nativeSrc": "3447:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3400:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3400:37:5"
																},
																"nativeSrc": "3400:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3400:65:5"
															},
															"nativeSrc": "3400:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3400:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3262:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:5",
														"nodeType": "YulTypedName",
														"src": "3326:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:5",
														"nodeType": "YulTypedName",
														"src": "3338:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:5",
														"nodeType": "YulTypedName",
														"src": "3349:4:5",
														"type": ""
													}
												],
												"src": "3262:210:5"
											},
											{
												"body": {
													"nativeSrc": "3510:28:5",
													"nodeType": "YulBlock",
													"src": "3510:28:5",
													"statements": [
														{
															"nativeSrc": "3520:12:5",
															"nodeType": "YulAssignment",
															"src": "3520:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "3527:5:5",
																"nodeType": "YulIdentifier",
																"src": "3527:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3520:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3478:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3496:5:5",
														"nodeType": "YulTypedName",
														"src": "3496:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3506:3:5",
														"nodeType": "YulTypedName",
														"src": "3506:3:5",
														"type": ""
													}
												],
												"src": "3478:60:5"
											},
											{
												"body": {
													"nativeSrc": "3604:82:5",
													"nodeType": "YulBlock",
													"src": "3604:82:5",
													"statements": [
														{
															"nativeSrc": "3614:66:5",
															"nodeType": "YulAssignment",
															"src": "3614:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3672:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3672:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3654:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3654:17:5"
																				},
																				"nativeSrc": "3654:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3654:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3645:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "3645:8:5"
																		},
																		"nativeSrc": "3645:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3627:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3627:17:5"
																},
																"nativeSrc": "3627:53:5",
																"nodeType": "YulFunctionCall",
																"src": "3627:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3614:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3614:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3544:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3584:5:5",
														"nodeType": "YulTypedName",
														"src": "3584:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3594:9:5",
														"nodeType": "YulTypedName",
														"src": "3594:9:5",
														"type": ""
													}
												],
												"src": "3544:142:5"
											},
											{
												"body": {
													"nativeSrc": "3752:66:5",
													"nodeType": "YulBlock",
													"src": "3752:66:5",
													"statements": [
														{
															"nativeSrc": "3762:50:5",
															"nodeType": "YulAssignment",
															"src": "3762:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3806:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3806:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3775:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3775:30:5"
																},
																"nativeSrc": "3775:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3775:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3762:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3762:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3692:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3732:5:5",
														"nodeType": "YulTypedName",
														"src": "3732:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3742:9:5",
														"nodeType": "YulTypedName",
														"src": "3742:9:5",
														"type": ""
													}
												],
												"src": "3692:126:5"
											},
											{
												"body": {
													"nativeSrc": "3897:66:5",
													"nodeType": "YulBlock",
													"src": "3897:66:5",
													"statements": [
														{
															"nativeSrc": "3907:50:5",
															"nodeType": "YulAssignment",
															"src": "3907:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3951:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3951:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3920:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "3920:30:5"
																},
																"nativeSrc": "3920:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3920:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3907:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3907:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBlast_$15_to_t_address",
												"nativeSrc": "3824:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3877:5:5",
														"nodeType": "YulTypedName",
														"src": "3877:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3887:9:5",
														"nodeType": "YulTypedName",
														"src": "3887:9:5",
														"type": ""
													}
												],
												"src": "3824:139:5"
											},
											{
												"body": {
													"nativeSrc": "4047:79:5",
													"nodeType": "YulBlock",
													"src": "4047:79:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4064:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4064:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4113:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4113:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBlast_$15_to_t_address",
																			"nativeSrc": "4069:43:5",
																			"nodeType": "YulIdentifier",
																			"src": "4069:43:5"
																		},
																		"nativeSrc": "4069:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4069:50:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4057:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4057:6:5"
																},
																"nativeSrc": "4057:63:5",
																"nodeType": "YulFunctionCall",
																"src": "4057:63:5"
															},
															"nativeSrc": "4057:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "4057:63:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack",
												"nativeSrc": "3969:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4035:5:5",
														"nodeType": "YulTypedName",
														"src": "4035:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4042:3:5",
														"nodeType": "YulTypedName",
														"src": "4042:3:5",
														"type": ""
													}
												],
												"src": "3969:157:5"
											},
											{
												"body": {
													"nativeSrc": "4243:137:5",
													"nodeType": "YulBlock",
													"src": "4243:137:5",
													"statements": [
														{
															"nativeSrc": "4253:26:5",
															"nodeType": "YulAssignment",
															"src": "4253:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4265:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4265:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4276:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4276:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4261:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:5"
																},
																"nativeSrc": "4261:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4261:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4253:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4253:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4346:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4359:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4359:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4370:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4370:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4355:3:5"
																		},
																		"nativeSrc": "4355:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack",
																	"nativeSrc": "4289:56:5",
																	"nodeType": "YulIdentifier",
																	"src": "4289:56:5"
																},
																"nativeSrc": "4289:84:5",
																"nodeType": "YulFunctionCall",
																"src": "4289:84:5"
															},
															"nativeSrc": "4289:84:5",
															"nodeType": "YulExpressionStatement",
															"src": "4289:84:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBlast_$15__to_t_address__fromStack_reversed",
												"nativeSrc": "4132:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4215:9:5",
														"nodeType": "YulTypedName",
														"src": "4215:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4227:6:5",
														"nodeType": "YulTypedName",
														"src": "4227:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4238:4:5",
														"nodeType": "YulTypedName",
														"src": "4238:4:5",
														"type": ""
													}
												],
												"src": "4132:248:5"
											},
											{
												"body": {
													"nativeSrc": "4414:152:5",
													"nodeType": "YulBlock",
													"src": "4414:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4431:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4431:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4434:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4424:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:5"
																},
																"nativeSrc": "4424:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4424:88:5"
															},
															"nativeSrc": "4424:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4424:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4528:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4528:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4531:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4521:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:5"
																},
																"nativeSrc": "4521:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4521:15:5"
															},
															"nativeSrc": "4521:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4521:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4552:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4552:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4555:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4555:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4545:6:5"
																},
																"nativeSrc": "4545:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4545:15:5"
															},
															"nativeSrc": "4545:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4545:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4386:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4386:180:5"
											},
											{
												"body": {
													"nativeSrc": "4616:147:5",
													"nodeType": "YulBlock",
													"src": "4616:147:5",
													"statements": [
														{
															"nativeSrc": "4626:25:5",
															"nodeType": "YulAssignment",
															"src": "4626:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4649:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4649:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4631:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4631:17:5"
																},
																"nativeSrc": "4631:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4631:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4626:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4626:1:5"
																}
															]
														},
														{
															"nativeSrc": "4660:25:5",
															"nodeType": "YulAssignment",
															"src": "4660:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4683:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4683:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4665:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4665:17:5"
																},
																"nativeSrc": "4665:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4665:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4660:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4660:1:5"
																}
															]
														},
														{
															"nativeSrc": "4694:16:5",
															"nodeType": "YulAssignment",
															"src": "4694:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4705:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4705:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4708:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4708:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4701:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4701:3:5"
																},
																"nativeSrc": "4701:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4701:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4694:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4734:22:5",
																"nodeType": "YulBlock",
																"src": "4734:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4736:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4736:16:5"
																			},
																			"nativeSrc": "4736:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4736:18:5"
																		},
																		"nativeSrc": "4736:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4736:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4726:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4726:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4729:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4729:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4723:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4723:2:5"
																},
																"nativeSrc": "4723:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4723:10:5"
															},
															"nativeSrc": "4720:36:5",
															"nodeType": "YulIf",
															"src": "4720:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4572:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4603:1:5",
														"nodeType": "YulTypedName",
														"src": "4603:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4606:1:5",
														"nodeType": "YulTypedName",
														"src": "4606:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4612:3:5",
														"nodeType": "YulTypedName",
														"src": "4612:3:5",
														"type": ""
													}
												],
												"src": "4572:191:5"
											},
											{
												"body": {
													"nativeSrc": "4895:206:5",
													"nodeType": "YulBlock",
													"src": "4895:206:5",
													"statements": [
														{
															"nativeSrc": "4905:26:5",
															"nodeType": "YulAssignment",
															"src": "4905:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4917:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4917:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4928:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4928:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4913:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:5"
																},
																"nativeSrc": "4913:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4913:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4905:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4905:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4985:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4985:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4998:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4994:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:5"
																		},
																		"nativeSrc": "4994:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4994:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4941:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4941:43:5"
																},
																"nativeSrc": "4941:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4941:71:5"
															},
															"nativeSrc": "4941:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4941:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5066:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5066:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5079:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5079:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5090:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5090:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5075:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5075:3:5"
																		},
																		"nativeSrc": "5075:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5075:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5022:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5022:43:5"
																},
																"nativeSrc": "5022:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5022:72:5"
															},
															"nativeSrc": "5022:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5022:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4769:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4859:9:5",
														"nodeType": "YulTypedName",
														"src": "4859:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4871:6:5",
														"nodeType": "YulTypedName",
														"src": "4871:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4879:6:5",
														"nodeType": "YulTypedName",
														"src": "4879:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4890:4:5",
														"nodeType": "YulTypedName",
														"src": "4890:4:5",
														"type": ""
													}
												],
												"src": "4769:332:5"
											},
											{
												"body": {
													"nativeSrc": "5170:80:5",
													"nodeType": "YulBlock",
													"src": "5170:80:5",
													"statements": [
														{
															"nativeSrc": "5180:22:5",
															"nodeType": "YulAssignment",
															"src": "5180:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5195:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5195:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5189:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5189:5:5"
																},
																"nativeSrc": "5189:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5189:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5180:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5180:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5238:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5238:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5211:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5211:26:5"
																},
																"nativeSrc": "5211:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5211:33:5"
															},
															"nativeSrc": "5211:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5211:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5107:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5148:6:5",
														"nodeType": "YulTypedName",
														"src": "5148:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5156:3:5",
														"nodeType": "YulTypedName",
														"src": "5156:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5164:5:5",
														"nodeType": "YulTypedName",
														"src": "5164:5:5",
														"type": ""
													}
												],
												"src": "5107:143:5"
											},
											{
												"body": {
													"nativeSrc": "5333:274:5",
													"nodeType": "YulBlock",
													"src": "5333:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5379:83:5",
																"nodeType": "YulBlock",
																"src": "5379:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5381:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5381:77:5"
																			},
																			"nativeSrc": "5381:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5381:79:5"
																		},
																		"nativeSrc": "5381:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5381:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5354:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5354:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5363:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5363:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5350:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:5"
																		},
																		"nativeSrc": "5350:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5350:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5375:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5346:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5346:3:5"
																},
																"nativeSrc": "5346:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5346:32:5"
															},
															"nativeSrc": "5343:119:5",
															"nodeType": "YulIf",
															"src": "5343:119:5"
														},
														{
															"nativeSrc": "5472:128:5",
															"nodeType": "YulBlock",
															"src": "5472:128:5",
															"statements": [
																{
																	"nativeSrc": "5487:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5487:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5501:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5501:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5491:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5491:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5516:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5516:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5562:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5562:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5573:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5573:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5558:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5558:3:5"
																				},
																				"nativeSrc": "5558:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5558:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5582:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5582:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5526:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5526:31:5"
																		},
																		"nativeSrc": "5526:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5516:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5516:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5256:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5303:9:5",
														"nodeType": "YulTypedName",
														"src": "5303:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5314:7:5",
														"nodeType": "YulTypedName",
														"src": "5314:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5326:6:5",
														"nodeType": "YulTypedName",
														"src": "5326:6:5",
														"type": ""
													}
												],
												"src": "5256:351:5"
											},
											{
												"body": {
													"nativeSrc": "5658:149:5",
													"nodeType": "YulBlock",
													"src": "5658:149:5",
													"statements": [
														{
															"nativeSrc": "5668:25:5",
															"nodeType": "YulAssignment",
															"src": "5668:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5691:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5691:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5673:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5673:17:5"
																},
																"nativeSrc": "5673:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5673:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5668:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5668:1:5"
																}
															]
														},
														{
															"nativeSrc": "5702:25:5",
															"nodeType": "YulAssignment",
															"src": "5702:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5725:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5725:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5707:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5707:17:5"
																},
																"nativeSrc": "5707:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5707:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5702:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5702:1:5"
																}
															]
														},
														{
															"nativeSrc": "5736:17:5",
															"nodeType": "YulAssignment",
															"src": "5736:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5748:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5748:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5751:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5751:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5744:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:5"
																},
																"nativeSrc": "5744:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5744:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5736:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5736:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5778:22:5",
																"nodeType": "YulBlock",
																"src": "5778:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5780:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5780:16:5"
																			},
																			"nativeSrc": "5780:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5780:18:5"
																		},
																		"nativeSrc": "5780:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5780:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5769:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5769:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5775:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5775:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5766:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5766:2:5"
																},
																"nativeSrc": "5766:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5766:11:5"
															},
															"nativeSrc": "5763:37:5",
															"nodeType": "YulIf",
															"src": "5763:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5613:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5644:1:5",
														"nodeType": "YulTypedName",
														"src": "5644:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5647:1:5",
														"nodeType": "YulTypedName",
														"src": "5647:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5653:4:5",
														"nodeType": "YulTypedName",
														"src": "5653:4:5",
														"type": ""
													}
												],
												"src": "5613:194:5"
											},
											{
												"body": {
													"nativeSrc": "5861:362:5",
													"nodeType": "YulBlock",
													"src": "5861:362:5",
													"statements": [
														{
															"nativeSrc": "5871:25:5",
															"nodeType": "YulAssignment",
															"src": "5871:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5894:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5894:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5876:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5876:17:5"
																},
																"nativeSrc": "5876:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5876:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5871:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5871:1:5"
																}
															]
														},
														{
															"nativeSrc": "5905:25:5",
															"nodeType": "YulAssignment",
															"src": "5905:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5928:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5928:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5910:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5910:17:5"
																},
																"nativeSrc": "5910:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5910:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5905:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5905:1:5"
																}
															]
														},
														{
															"nativeSrc": "5939:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5939:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5962:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5962:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5965:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5965:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5958:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:5"
																},
																"nativeSrc": "5958:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5958:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5943:11:5",
																	"nodeType": "YulTypedName",
																	"src": "5943:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5976:41:5",
															"nodeType": "YulAssignment",
															"src": "5976:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6005:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "6005:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5987:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5987:17:5"
																},
																"nativeSrc": "5987:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5987:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5976:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "5976:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6194:22:5",
																"nodeType": "YulBlock",
																"src": "6194:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6196:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6196:16:5"
																			},
																			"nativeSrc": "6196:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6196:18:5"
																		},
																		"nativeSrc": "6196:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6196:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6127:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6127:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6120:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6120:6:5"
																				},
																				"nativeSrc": "6120:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6120:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6150:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6150:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6157:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "6157:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6166:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "6166:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6153:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6153:3:5"
																						},
																						"nativeSrc": "6153:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6153:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6147:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6147:2:5"
																				},
																				"nativeSrc": "6147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6100:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6100:2:5"
																		},
																		"nativeSrc": "6100:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6080:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6080:6:5"
																},
																"nativeSrc": "6080:113:5",
																"nodeType": "YulFunctionCall",
																"src": "6080:113:5"
															},
															"nativeSrc": "6077:139:5",
															"nodeType": "YulIf",
															"src": "6077:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5813:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5844:1:5",
														"nodeType": "YulTypedName",
														"src": "5844:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5847:1:5",
														"nodeType": "YulTypedName",
														"src": "5847:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5853:7:5",
														"nodeType": "YulTypedName",
														"src": "5853:7:5",
														"type": ""
													}
												],
												"src": "5813:410:5"
											},
											{
												"body": {
													"nativeSrc": "6257:152:5",
													"nodeType": "YulBlock",
													"src": "6257:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6274:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6274:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6277:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6277:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6267:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:5"
																},
																"nativeSrc": "6267:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6267:88:5"
															},
															"nativeSrc": "6267:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6267:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6371:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6371:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6374:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6374:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6364:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:5"
																},
																"nativeSrc": "6364:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6364:15:5"
															},
															"nativeSrc": "6364:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6364:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6395:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6395:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6398:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6398:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6388:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:5"
																},
																"nativeSrc": "6388:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6388:15:5"
															},
															"nativeSrc": "6388:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6388:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6229:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6229:180:5"
											},
											{
												"body": {
													"nativeSrc": "6457:143:5",
													"nodeType": "YulBlock",
													"src": "6457:143:5",
													"statements": [
														{
															"nativeSrc": "6467:25:5",
															"nodeType": "YulAssignment",
															"src": "6467:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6490:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6490:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6472:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6472:17:5"
																},
																"nativeSrc": "6472:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6472:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6467:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6467:1:5"
																}
															]
														},
														{
															"nativeSrc": "6501:25:5",
															"nodeType": "YulAssignment",
															"src": "6501:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6524:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6524:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6506:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6506:17:5"
																},
																"nativeSrc": "6506:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6506:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6501:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6501:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6548:22:5",
																"nodeType": "YulBlock",
																"src": "6548:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6550:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6550:16:5"
																			},
																			"nativeSrc": "6550:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6550:18:5"
																		},
																		"nativeSrc": "6550:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6550:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6545:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6545:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6538:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:5"
																},
																"nativeSrc": "6538:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6538:9:5"
															},
															"nativeSrc": "6535:35:5",
															"nodeType": "YulIf",
															"src": "6535:35:5"
														},
														{
															"nativeSrc": "6580:14:5",
															"nodeType": "YulAssignment",
															"src": "6580:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6589:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6589:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6592:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6592:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6585:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:5"
																},
																"nativeSrc": "6585:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6585:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6580:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6580:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6415:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6446:1:5",
														"nodeType": "YulTypedName",
														"src": "6446:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6449:1:5",
														"nodeType": "YulTypedName",
														"src": "6449:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6455:1:5",
														"nodeType": "YulTypedName",
														"src": "6455:1:5",
														"type": ""
													}
												],
												"src": "6415:185:5"
											},
											{
												"body": {
													"nativeSrc": "6634:152:5",
													"nodeType": "YulBlock",
													"src": "6634:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6651:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6651:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6654:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6654:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6644:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6644:6:5"
																},
																"nativeSrc": "6644:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6644:88:5"
															},
															"nativeSrc": "6644:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6644:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6748:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6748:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6751:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6751:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6741:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:5"
																},
																"nativeSrc": "6741:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6741:15:5"
															},
															"nativeSrc": "6741:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6741:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6772:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6772:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6775:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6775:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6765:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6765:6:5"
																},
																"nativeSrc": "6765:15:5",
																"nodeType": "YulFunctionCall",
																"src": "6765:15:5"
															},
															"nativeSrc": "6765:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "6765:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6606:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6606:180:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IBlast_$15_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBlast_$15_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IBlast_$15__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBlast_$15_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610134575f3560e01c80638da5cb5b116100aa578063e5d782fc1161006e578063e5d782fc146103fa578063e953f98214610416578063eaca243b14610452578063f2e809e01461047a578063f2fde38b146104a2578063feeea92e146104ca57610134565b80638da5cb5b146103045780638f32d59b1461032e57806397d7577614610358578063b18a2f8214610382578063c2a6856f146103be57610134565b8063450c9d7d116100fc578063450c9d7d146101d45780634addc0e8146102105780634b634b061461023a57806353e3323b14610276578063715018a6146102b25780637a571ae1146102c857610134565b8063012d754c1461013857806312065fe01461014e57806323084e5f146101785780632cf4f2741461018e5780633c5f07cb146101ca575b5f80fd5b348015610143575f80fd5b5061014c6104f2565b005b348015610159575f80fd5b5061016261067b565b60405161016f9190611776565b60405180910390f35b348015610183575f80fd5b5061018c610682565b005b348015610199575f80fd5b506101b460048036038101906101af91906117ed565b6107f4565b6040516101c19190611776565b60405180910390f35b6101d261084b565b005b3480156101df575f80fd5b506101fa60048036038101906101f591906117ed565b610890565b6040516102079190611776565b60405180910390f35b34801561021b575f80fd5b506102246108b3565b6040516102319190611776565b60405180910390f35b348015610245575f80fd5b50610260600480360381019061025b91906117ed565b6108b9565b60405161026d9190611776565b60405180910390f35b348015610281575f80fd5b5061029c60048036038101906102979190611842565b6108ff565b6040516102a9919061187c565b60405180910390f35b3480156102bd575f80fd5b506102c661093a565b005b3480156102d3575f80fd5b506102ee60048036038101906102e99190611895565b6109ed565b6040516102fb9190611776565b60405180910390f35b34801561030f575f80fd5b50610318610a03565b604051610325919061187c565b60405180910390f35b348015610339575f80fd5b50610342610a2a565b60405161034f91906118ed565b60405180910390f35b348015610363575f80fd5b5061036c610a7f565b6040516103799190611961565b60405180910390f35b34801561038d575f80fd5b506103a860048036038101906103a39190611842565b610aa4565b6040516103b59190611776565b60405180910390f35b3480156103c9575f80fd5b506103e460048036038101906103df91906117ed565b610ab9565b6040516103f19190611776565b60405180910390f35b610414600480360381019061040f91906117ed565b610b5e565b005b348015610421575f80fd5b5061043c60048036038101906104379190611842565b610d8f565b6040516104499190611776565b60405180910390f35b34801561045d575f80fd5b5061047860048036038101906104739190611842565b610da1565b005b348015610485575f80fd5b506104a0600480360381019061049b91906117ed565b610dbb565b005b3480156104ad575f80fd5b506104c860048036038101906104c391906117ed565b610ed5565b005b3480156104d5575f80fd5b506104f060048036038101906104eb91906117ed565b610ef1565b005b60095f9054906101000a900460ff16610509575f80fd5b5f610513336107f4565b90505f61051f82610aa4565b90505f61052b82611301565b90505f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506105bd600e548461131f565b600e81905550600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610628573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc61064d8484611334565b90811502906040515f60405180830381858888f19350505050158015610675573d5f803e3d5ffd5b50505050565b5f47905090565b5f3390505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905042600354826106d691906119a7565b10156106e35750506107f2565b4260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663954fa5ee30856040518363ffffffff1660e01b81526004016107829291906119da565b6020604051808303815f875af115801561079e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c29190611a15565b90505f8111156107ee578060045f8282546107dd91906119a7565b925050819055506107ed81611349565b5b5050505b565b5f610844600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461083f84610ab9565b61131f565b9050919050565b610853610a2a565b61085b575f80fd5b5f600e5414610868575f80fd5b600160095f6101000a81548160ff0219169083151502179055506419254d3800600e81905550565b5f8061089b836107f4565b90505f6108a782610aa4565b90508092505050919050565b60035481565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600f818154811061090e575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610942610a2a565b61094a575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f6109fb8383600e54611355565b905092915050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610ab282600e5447611355565b9050919050565b5f80610b0d600554610b0842600c5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611334565b6113a7565b9050610b5681600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546113bf565b915050919050565b60095f9054906101000a900460ff16610b75575f80fd5b5f3390505f610b8d34610b884734611334565b6109ed565b9050610ba181610b9c83611301565b611334565b90505f610bad34611301565b9050600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c14573d5f803e3d5ffd5b50610c6583610c60600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548561131f565b6113d4565b610c6e84610ef1565b6706f05b59d3b200003410610d89576001151560115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514610d8857600160115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600f83908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50505050565b5f610d9a82476109ed565b9050919050565b610da9610a2a565b610db1575f80fd5b8060038190555050565b610dc3610a2a565b610dcb575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e165773430000000000000000000000000000000000000290505b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610ebc575f80fd5b505af1158015610ece573d5f803e3d5ffd5b5050505050565b610edd610a2a565b610ee5575f80fd5b610eee81611525565b50565b60095f9054906101000a900460ff16610f08575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f3f575f90505b5f73ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561105e57503373ffffffffffffffffffffffffffffffffffffffff16600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156110df5780600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5f6110e9336107f4565b90505f6110f882600554611617565b9050611141600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548261131f565b600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061118c335f6113d4565b42600c5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506112e0600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166112db600b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546112d6866008611617565b61131f565b6113d4565b6112f6600e546112f1846005611617565b61131f565b600e81905550505050565b5f611318611311836008546113bf565b6064611617565b9050919050565b5f818361132c91906119a7565b905092915050565b5f81836113419190611a40565b905092915050565b6113528161162c565b50565b5f61139e611365600654846113bf565b61139960075461139461138e61137d6006548a6113bf565b6113896007548c6113bf565b61131f565b89611617565b61131f565b611617565b90509392505050565b5f8183106113b557816113b7565b825b905092915050565b5f81836113cc9190611a73565b905092915050565b6001151560105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515146114df57601282908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361155c575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f81836116249190611ae1565b905092915050565b5f81111561170e575f805f5b60128054905081101561170a576012818154811061165957611658611b11565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506116e7600e546116d9600b5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054876113bf90919063ffffffff16565b61161790919063ffffffff16565b91505f8211156116fd576116fb8383611711565b505b8080600101915050611638565b5050505b50565b5f8273ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050156117545760019050611758565b5f90505b92915050565b5f819050919050565b6117708161175e565b82525050565b5f6020820190506117895f830184611767565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117bc82611793565b9050919050565b6117cc816117b2565b81146117d6575f80fd5b50565b5f813590506117e7816117c3565b92915050565b5f602082840312156118025761180161178f565b5b5f61180f848285016117d9565b91505092915050565b6118218161175e565b811461182b575f80fd5b50565b5f8135905061183c81611818565b92915050565b5f602082840312156118575761185661178f565b5b5f6118648482850161182e565b91505092915050565b611876816117b2565b82525050565b5f60208201905061188f5f83018461186d565b92915050565b5f80604083850312156118ab576118aa61178f565b5b5f6118b88582860161182e565b92505060206118c98582860161182e565b9150509250929050565b5f8115159050919050565b6118e7816118d3565b82525050565b5f6020820190506119005f8301846118de565b92915050565b5f819050919050565b5f61192961192461191f84611793565b611906565b611793565b9050919050565b5f61193a8261190f565b9050919050565b5f61194b82611930565b9050919050565b61195b81611941565b82525050565b5f6020820190506119745f830184611952565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119b18261175e565b91506119bc8361175e565b92508282019050808211156119d4576119d361197a565b5b92915050565b5f6040820190506119ed5f83018561186d565b6119fa602083018461186d565b9392505050565b5f81519050611a0f81611818565b92915050565b5f60208284031215611a2a57611a2961178f565b5b5f611a3784828501611a01565b91505092915050565b5f611a4a8261175e565b9150611a558361175e565b9250828203905081811115611a6d57611a6c61197a565b5b92915050565b5f611a7d8261175e565b9150611a888361175e565b9250828202611a968161175e565b91508282048414831517611aad57611aac61197a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aeb8261175e565b9150611af68361175e565b925082611b0657611b05611ab4565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea26469706673582212206a2f79ac37994ea56b054b14a61ee2bf409d2c7abd98d59767b8c08b6f9b6c9764736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x134 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xE5D782FC GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE5D782FC EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xE953F982 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xEACA243B EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xF2E809E0 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xFEEEA92E EQ PUSH2 0x4CA JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x97D75776 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xB18A2F82 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xC2A6856F EQ PUSH2 0x3BE JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x450C9D7D GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x450C9D7D EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4ADDC0E8 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x4B634B06 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x53E3323B EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x7A571AE1 EQ PUSH2 0x2C8 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x12D754C EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x23084E5F EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x2CF4F274 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x84B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xDA1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x509 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x513 CALLER PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x51F DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x52B DUP3 PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5BD PUSH1 0xE SLOAD DUP5 PUSH2 0x131F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x64D DUP5 DUP5 PUSH2 0x1334 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP TIMESTAMP PUSH1 0x3 SLOAD DUP3 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST LT ISZERO PUSH2 0x6E3 JUMPI POP POP PUSH2 0x7F2 JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x954FA5EE ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x782 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x7EE JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7ED DUP2 PUSH2 0x1349 JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x844 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x83F DUP5 PUSH2 0xAB9 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x853 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x85B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xE SLOAD EQ PUSH2 0x868 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH5 0x19254D3800 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89B DUP4 PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x8A7 DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x90E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x942 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x94A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9FB DUP4 DUP4 PUSH1 0xE SLOAD PUSH2 0x1355 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xAB2 DUP3 PUSH1 0xE SLOAD SELFBALANCE PUSH2 0x1355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB0D PUSH1 0x5 SLOAD PUSH2 0xB08 TIMESTAMP PUSH1 0xC PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1334 JUMP JUMPDEST PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xB56 DUP2 PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x13BF JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB75 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH2 0xB8D CALLVALUE PUSH2 0xB88 SELFBALANCE CALLVALUE PUSH2 0x1334 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP PUSH2 0xBA1 DUP2 PUSH2 0xB9C DUP4 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x1334 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xBAD CALLVALUE PUSH2 0x1301 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC14 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xC65 DUP4 PUSH2 0xC60 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP6 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0xC6E DUP5 PUSH2 0xEF1 JUMP JUMPDEST PUSH8 0x6F05B59D3B20000 CALLVALUE LT PUSH2 0xD89 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xD88 JUMPI PUSH1 0x1 PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD9A DUP3 SELFBALANCE PUSH2 0x9ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA9 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xDB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDC3 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xDCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE16 JUMPI PUSH20 0x4300000000000000000000000000000000000002 SWAP1 POP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E606C47 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDD PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xEE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEEE DUP2 PUSH2 0x1525 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF08 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3F JUMPI PUSH0 SWAP1 POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x105E JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x10DF JUMPI DUP1 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH2 0x10E9 CALLER PUSH2 0x7F4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10F8 DUP3 PUSH1 0x5 SLOAD PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP PUSH2 0x1141 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x131F JUMP JUMPDEST PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x118C CALLER PUSH0 PUSH2 0x13D4 JUMP JUMPDEST TIMESTAMP PUSH1 0xC PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12E0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12DB PUSH1 0xB PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x12D6 DUP7 PUSH1 0x8 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x12F6 PUSH1 0xE SLOAD PUSH2 0x12F1 DUP5 PUSH1 0x5 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1318 PUSH2 0x1311 DUP4 PUSH1 0x8 SLOAD PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x132C SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1352 DUP2 PUSH2 0x162C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x139E PUSH2 0x1365 PUSH1 0x6 SLOAD DUP5 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x7 SLOAD PUSH2 0x1394 PUSH2 0x138E PUSH2 0x137D PUSH1 0x6 SLOAD DUP11 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x1389 PUSH1 0x7 SLOAD DUP13 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST DUP10 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x131F JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x13B5 JUMPI DUP2 PUSH2 0x13B7 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x13CC SWAP2 SWAP1 PUSH2 0x1A73 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x14DF JUMPI PUSH1 0x12 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1624 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x170E JUMPI PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x12 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x170A JUMPI PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x1B11 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x16E7 PUSH1 0xE SLOAD PUSH2 0x16D9 PUSH1 0xB PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP8 PUSH2 0x13BF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1617 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FB DUP4 DUP4 PUSH2 0x1711 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1638 JUMP JUMPDEST POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO PUSH2 0x1754 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1758 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1770 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1789 PUSH0 DUP4 ADD DUP5 PUSH2 0x1767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BC DUP3 PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17CC DUP2 PUSH2 0x17B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E7 DUP2 PUSH2 0x17C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x180F DUP5 DUP3 DUP6 ADD PUSH2 0x17D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1821 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183C DUP2 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1864 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1876 DUP2 PUSH2 0x17B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x188F PUSH0 DUP4 ADD DUP5 PUSH2 0x186D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B8 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C9 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E7 DUP2 PUSH2 0x18D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1900 PUSH0 DUP4 ADD DUP5 PUSH2 0x18DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1929 PUSH2 0x1924 PUSH2 0x191F DUP5 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x193A DUP3 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x194B DUP3 PUSH2 0x1930 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x1941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1974 PUSH0 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19B1 DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x19BC DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19ED PUSH0 DUP4 ADD DUP6 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x19FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x186D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A0F DUP2 PUSH2 0x1818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A2A JUMPI PUSH2 0x1A29 PUSH2 0x178F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A37 DUP5 DUP3 DUP6 ADD PUSH2 0x1A01 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4A DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A55 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x197A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7D DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A88 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A96 DUP2 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x197A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AEB DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF6 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B06 JUMPI PUSH2 0x1B05 PUSH2 0x1AB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x2F79AC37994EA56B054B14 0xA6 0x1E 0xE2 0xBF BLOCKHASH SWAP14 0x2C PUSH27 0xBD98D59767B8C08B6F9B6C9764736F6C6343000818003300000000 ",
							"sourceMap": "1797:5199:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3630:423;;;;;;;;;;;;;:::i;:::-;;5849:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:411:0;;;;;;;;;;;;;:::i;:::-;;6049:143:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:138;;;:::i;:::-;;4058:190;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:43:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5944:100:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2395:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:111:3;;;;;;;;;;;;;:::i;:::-;;5261:162:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:70:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;301:19:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5106:150:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6197:245;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4253:601;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5428:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1102:108:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;871:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;647:100:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2820:805:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3630:423;3672:11;;;;;;;;;;;3664:20;;;;;;3689:17;3709:23;3721:10;3709:11;:23::i;:::-;3689:43;;3737:18;3758:29;3777:9;3758:18;:29::i;:::-;3737:50;;3792:11;3806:18;3813:10;3806:6;:18::i;:::-;3792:32;;3857:1;3829:13;:25;3843:10;3829:25;;;;;;;;;;;;;;;:29;;;;3887:15;3863:9;:21;3873:10;3863:21;;;;;;;;;;;;;;;:39;;;;3922:37;3935:12;;3949:9;3922:12;:37::i;:::-;3907:12;:52;;;;3964:6;;;;;;;;;;;:15;;:20;3980:3;3964:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3997:10;3989:28;;:59;4018:29;4031:10;4043:3;4018:12;:29::i;:::-;3989:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:394;;;3630:423::o;5849:90::-;5892:7;5913:21;5906:28;;5849:90;:::o;455:411:0:-;495:17;515:10;495:30;;530:17;550:15;:26;566:9;550:26;;;;;;;;;;;;;;;;530:46;;621:15;599:19;;587:9;:31;;;;:::i;:::-;:49;583:73;;;644:7;;;;583:73;691:15;662;:26;678:9;662:26;;;;;;;;;;;;;;;:44;;;;711:15;729:5;;;;;;;;;;;:17;;;755:4;762:9;729:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;711:61;;793:1;783:7;:11;779:83;;;818:7;802:12;;:23;;;;;;;:::i;:::-;;;;;;;;831:25;848:7;831:16;:25::i;:::-;779:83;490:376;;;455:411;:::o;6049:143:1:-;6104:7;6125:62;6138:13;:18;6152:3;6138:18;;;;;;;;;;;;;;;;6158:28;6182:3;6158:23;:28::i;:::-;6125:12;:62::i;:::-;6118:69;;6049:143;;;:::o;5706:138::-;417:9:3;:7;:9::i;:::-;409:18;;;;;;5782:1:1::1;5766:12;;:17;5758:26;;;::::0;::::1;;5803:4;5789:11;;:18;;;;;;;;;;;;;;;;;;5827:12;5812;:27;;;;5706:138::o:0;4058:190::-;4116:7;4130:17;4150:16;4162:3;4150:11;:16::i;:::-;4130:36;;4171:18;4192:29;4211:9;4192:18;:29::i;:::-;4171:50;;4233:10;4226:17;;;;4058:190;;;:::o;373:43:0:-;;;;:::o;5944:100:1:-;5999:7;6020:14;:19;6035:3;6020:19;;;;;;;;;;;;;;;;6013:26;;5944:100;;;:::o;2395:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;531:111:3:-;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;5261:162:1:-;5347:7;5368:50;5383:3;5388:15;5405:12;;5368:14;:50::i;:::-;5361:57;;5261:162;;;;:::o;308:70:3:-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;443:83::-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;301:19:0:-;;;;;;;;;;;;;:::o;5106:150:1:-;5171:7;5192:59;5207:6;5215:12;;5229:21;5192:14;:59::i;:::-;5185:66;;5106:150;;;:::o;6197:245::-;6264:7;6278:21;6302:75;6306:23;;6331:45;6344:15;6361:9;:14;6371:3;6361:14;;;;;;;;;;;;;;;;6331:12;:45::i;:::-;6302:3;:75::i;:::-;6278:99;;6389:48;6402:13;6417:14;:19;6432:3;6417:19;;;;;;;;;;;;;;;;6389:12;:48::i;:::-;6382:55;;;6197:245;;;:::o;4253:601::-;4313:11;;;;;;;;;;;4305:20;;;;;;4330:13;4346:10;4330:26;;4363:20;4386:76;4404:9;4415:46;4428:21;4451:9;4415:12;:46::i;:::-;4386:17;:76::i;:::-;4363:99;;4482:48;4495:12;4509:20;4516:12;4509:6;:20::i;:::-;4482:12;:48::i;:::-;4467:63;;4535:11;4549:17;4556:9;4549:6;:17::i;:::-;4535:31;;4571:6;;;;;;;;;;;:15;;:20;4587:3;4571:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4596:68;4608:5;4615:48;4628:13;:20;4642:5;4628:20;;;;;;;;;;;;;;;;4650:12;4615;:48::i;:::-;4596:11;:68::i;:::-;4669:16;4681:3;4669:11;:16::i;:::-;4709:5;4696:9;:18;4692:158;;4756:4;4726:34;;:19;:26;4746:5;4726:26;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;4722:123;;4798:4;4769:19;:26;4789:5;4769:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4809:17;4832:5;4809:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4722:123;4692:158;4300:554;;;4253:601;:::o;5428:138::-;5495:7;5516:45;5534:3;5539:21;5516:17;:45::i;:::-;5509:52;;5428:138;;;:::o;1102:108:0:-;417:9:3;:7;:9::i;:::-;409:18;;;;;;1197:8:0::1;1175:19;:30;;;;1102:108:::0;:::o;871:226::-;417:9:3;:7;:9::i;:::-;409:18;;;;;;959:1:0::1;938:23;;:9;:23;;::::0;934:95:::1;;981:42;969:54;;934:95;1048:9;1033:5;;:25;;;;;;;;;;;;;;;;;;1063:5;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;871:226:::0;:::o;647:100:3:-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;2820:805:1:-;2874:11;;;;;;;;;;;2866:20;;;;;;2904:10;2897:17;;:3;:17;;;2893:51;;2936:1;2922:16;;2893:51;2987:1;2954:35;;:9;:21;2964:10;2954:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;:74;;;;;3018:10;2993:35;;:9;:21;3003:10;2993:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;2954:74;2950:119;;;3060:3;3036:9;:21;3046:10;3036:21;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2950:119;3075:18;3096:23;3108:10;3096:11;:23::i;:::-;3075:44;;3124:17;3144:49;3157:10;3169:23;;3144:12;:49::i;:::-;3124:69;;3227:51;3240:14;:26;3255:10;3240:26;;;;;;;;;;;;;;;;3268:9;3227:12;:51::i;:::-;3198:14;:26;3213:10;3198:26;;;;;;;;;;;;;;;:80;;;;3283:26;3295:10;3307:1;3283:11;:26::i;:::-;3338:15;3314:9;:21;3324:10;3314:21;;;;;;;;;;;;;;;:39;;;;3386:115;3398:9;:21;3408:10;3398:21;;;;;;;;;;;;;;;;;;;;;;;;;3421:79;3434:13;:36;3448:9;:21;3458:10;3448:21;;;;;;;;;;;;;;;;;;;;;;;;;3434:36;;;;;;;;;;;;;;;;3472:27;3485:10;3497:1;3472:12;:27::i;:::-;3421:12;:79::i;:::-;3386:11;:115::i;:::-;3565:55;3578:12;;3592:27;3605:10;3617:1;3592:12;:27::i;:::-;3565:12;:55::i;:::-;3550:12;:70;;;;2861:764;;2820:805;:::o;5571:130::-;5625:7;5646:50;5659:31;5672:6;5680:9;;5659:12;:31::i;:::-;5692:3;5646:12;:50::i;:::-;5639:57;;5571:130;;;:::o;2070:89:4:-;2128:7;2153:1;2149;:5;;;;:::i;:::-;2142:12;;2070:89;;;;:::o;2409:::-;2467:7;2492:1;2488;:5;;;;:::i;:::-;2481:12;;2409:89;;;;:::o;6548:101:1:-;6620:24;6638:5;6620:17;:24::i;:::-;6548:101;:::o;4859:242::-;4941:7;4962:134;4975:21;4988:3;;4993:2;4975:12;:21::i;:::-;4998:97;5011:4;;5017:77;5030:59;5043:21;5056:3;;5061:2;5043:12;:21::i;:::-;5066:22;5079:4;;5085:2;5066:12;:22::i;:::-;5030:12;:59::i;:::-;5091:2;5017:12;:77::i;:::-;4998:12;:97::i;:::-;4962:12;:134::i;:::-;4955:141;;4859:242;;;;;:::o;6447:96::-;6504:7;6529:1;6525;:5;:13;;6537:1;6525:13;;;6533:1;6525:13;6518:20;;6447:96;;;;:::o;2724:89:4:-;2782:7;2807:1;2803;:5;;;;:::i;:::-;2796:12;;2724:89;;;;:::o;2626:189:1:-;2712:4;2693:23;;:9;:15;2703:4;2693:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;2689:88;;2724:8;2738:4;2724:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2767:4;2749:9;:15;2759:4;2749:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2689:88;2805:5;2783:13;:19;2797:4;2783:19;;;;;;;;;;;;;;;:27;;;;2626:189;;:::o;752:166:3:-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;3081:89:4:-;3139:7;3164:1;3160;:5;;;;:::i;:::-;3153:12;;3081:89;;;;:::o;6654:339:1:-;6725:1;6715:6;:11;6711:35;6734:7;6711:35;6752:14;6771:11;6794:6;6789:200;6810:8;:15;;;;6806:1;:19;6789:200;;;6847:8;6856:1;6847:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6838:20;;6870:51;6908:12;;6870:33;6881:13;:21;6895:6;6881:21;;;;;;;;;;;;;;;;6870:6;:10;;:33;;;;:::i;:::-;:37;;:51;;;;:::i;:::-;6864:57;;6939:1;6933:3;:7;6929:55;;;6949:28;6965:6;6973:3;6949:15;:28::i;:::-;;6929:55;6827:3;;;;;;;6789:200;;;;6706:287;;6654:339;;:::o;102:158:2:-;173:4;196:2;188:16;;:24;205:6;188:24;;;;;;;;;;;;;;;;;;;;;;;184:53;;;227:4;220:11;;;;184:53;250:5;243:12;;102:158;;;;;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:90::-;3085:7;3128:5;3121:13;3114:21;3103:32;;3051:90;;;:::o;3147:109::-;3228:21;3243:5;3228:21;:::i;:::-;3223:3;3216:34;3147:109;;:::o;3262:210::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:65;3462:1;3451:9;3447:17;3438:6;3400:65;:::i;:::-;3262:210;;;;:::o;3478:60::-;3506:3;3527:5;3520:12;;3478:60;;;:::o;3544:142::-;3594:9;3627:53;3645:34;3654:24;3672:5;3654:24;:::i;:::-;3645:34;:::i;:::-;3627:53;:::i;:::-;3614:66;;3544:142;;;:::o;3692:126::-;3742:9;3775:37;3806:5;3775:37;:::i;:::-;3762:50;;3692:126;;;:::o;3824:139::-;3887:9;3920:37;3951:5;3920:37;:::i;:::-;3907:50;;3824:139;;;:::o;3969:157::-;4069:50;4113:5;4069:50;:::i;:::-;4064:3;4057:63;3969:157;;:::o;4132:248::-;4238:4;4276:2;4265:9;4261:18;4253:26;;4289:84;4370:1;4359:9;4355:17;4346:6;4289:84;:::i;:::-;4132:248;;;;:::o;4386:180::-;4434:77;4431:1;4424:88;4531:4;4528:1;4521:15;4555:4;4552:1;4545:15;4572:191;4612:3;4631:20;4649:1;4631:20;:::i;:::-;4626:25;;4665:20;4683:1;4665:20;:::i;:::-;4660:25;;4708:1;4705;4701:9;4694:16;;4729:3;4726:1;4723:10;4720:36;;;4736:18;;:::i;:::-;4720:36;4572:191;;;;:::o;4769:332::-;4890:4;4928:2;4917:9;4913:18;4905:26;;4941:71;5009:1;4998:9;4994:17;4985:6;4941:71;:::i;:::-;5022:72;5090:2;5079:9;5075:18;5066:6;5022:72;:::i;:::-;4769:332;;;;;:::o;5107:143::-;5164:5;5195:6;5189:13;5180:22;;5211:33;5238:5;5211:33;:::i;:::-;5107:143;;;;:::o;5256:351::-;5326:6;5375:2;5363:9;5354:7;5350:23;5346:32;5343:119;;;5381:79;;:::i;:::-;5343:119;5501:1;5526:64;5582:7;5573:6;5562:9;5558:22;5526:64;:::i;:::-;5516:74;;5472:128;5256:351;;;;:::o;5613:194::-;5653:4;5673:20;5691:1;5673:20;:::i;:::-;5668:25;;5707:20;5725:1;5707:20;:::i;:::-;5702:25;;5751:1;5748;5744:9;5736:17;;5775:1;5769:4;5766:11;5763:37;;;5780:18;;:::i;:::-;5763:37;5613:194;;;;:::o;5813:410::-;5853:7;5876:20;5894:1;5876:20;:::i;:::-;5871:25;;5910:20;5928:1;5910:20;:::i;:::-;5905:25;;5965:1;5962;5958:9;5987:30;6005:11;5987:30;:::i;:::-;5976:41;;6166:1;6157:7;6153:15;6150:1;6147:22;6127:1;6120:9;6100:83;6077:139;;6196:18;;:::i;:::-;6077:139;5861:362;5813:410;;;;:::o;6229:180::-;6277:77;6274:1;6267:88;6374:4;6371:1;6364:15;6398:4;6395:1;6388:15;6415:185;6455:1;6472:20;6490:1;6472:20;:::i;:::-;6467:25;;6506:20;6524:1;6506:20;:::i;:::-;6501:25;;6545:1;6535:35;;6550:18;;:::i;:::-;6535:35;6592:1;6589;6585:9;6580:14;;6415:185;;;;:::o;6606:180::-;6654:77;6651:1;6644:88;6751:4;6748:1;6741:15;6775:4;6772:1;6765:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1405600",
								"executionCost": "184839",
								"totalCost": "1590439"
							},
							"external": {
								"BLAST()": "infinite",
								"_blastClaimInterval()": "2470",
								"airdropQualifiers(uint256)": "5033",
								"buyIngots(address)": "infinite",
								"calculateIngotBuy(uint256,uint256)": "infinite",
								"calculateIngotBuySimple(uint256)": "infinite",
								"calculateIngotSell(uint256)": "infinite",
								"claimMyGasFees()": "infinite",
								"furnaceRewards(address)": "infinite",
								"getBalance()": "380",
								"getIngotsSinceLastHatch(address)": "infinite",
								"getMyIngots(address)": "infinite",
								"getMyMiners(address)": "2896",
								"hatchIngots(address)": "infinite",
								"isOwner()": "2535",
								"owner()": "2538",
								"renounceOwnership()": "30015",
								"seedMarket()": "50936",
								"sellIngots()": "infinite",
								"setBlastClaimInterval(uint256)": "24784",
								"setupBlast(address)": "infinite",
								"transferOwnership(address)": "30768"
							},
							"internal": {
								"_distributeNative(uint256)": "infinite",
								"_setClaimed(address,uint256)": "97409",
								"blastFeesClaimed(uint256)": "infinite",
								"calculateTrade(uint256,uint256,uint256)": "infinite",
								"devFee(uint256)": "infinite",
								"min(uint256,uint256)": "63"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1797,
									"end": 6996,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 410,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "15180"
								},
								{
									"begin": 373,
									"end": 416,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 373,
									"end": 416,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1935,
									"end": 1942,
									"name": "PUSH",
									"source": 1,
									"value": "107AC0"
								},
								{
									"begin": 1893,
									"end": 1942,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1893,
									"end": 1942,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2020,
									"name": "PUSH",
									"source": 1,
									"value": "2710"
								},
								{
									"begin": 1993,
									"end": 2020,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1993,
									"end": 2020,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2047,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "1388"
								},
								{
									"begin": 2024,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2024,
									"end": 2051,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2055,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2084,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2120,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2569,
									"end": 2621,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2605,
									"end": 2615,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2594,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2588,
									"end": 2594,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2616,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1797,
									"end": 6996,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a2f79ac37994ea56b054b14a61ee2bf409d2c7abd98d59767b8c08b6f9b6c9764736f6c63430008180033",
									".code": [
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "E5D782FC"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "E5D782FC"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "E953F982"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "EACA243B"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "F2E809E0"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "FEEEA92E"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "8F32D59B"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "97D75776"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "B18A2F82"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "C2A6856F"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "450C9D7D"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "450C9D7D"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "4ADDC0E8"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "4B634B06"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "53E3323B"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "7A571AE1"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "12D754C"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "12065FE0"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "23084E5F"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "2CF4F274"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "3C5F07CB"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 6996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3630,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5849,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5849,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 455,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6049,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6049,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6049,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5706,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4058,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4058,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4058,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5944,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5944,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5944,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2395,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2395,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2395,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5261,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5261,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5261,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 301,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 301,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5106,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5106,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5106,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6197,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6197,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6197,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4253,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4253,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5428,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5428,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5428,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1102,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1102,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 871,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 871,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2820,
											"end": 3625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2820,
											"end": 3625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3630,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3664,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3721,
											"end": 3731,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3709,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3732,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3709,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3777,
											"end": 3786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3758,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3813,
											"end": 3823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3806,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3853,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3854,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3858,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3902,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3883,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3902,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3935,
											"end": 3947,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3935,
											"end": 3947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3958,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3922,
											"end": 3959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3959,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3922,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3980,
											"end": 3983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4007,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4018,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4031,
											"end": 4041,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4046,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4018,
											"end": 4047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4047,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4018,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 4053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5934,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5849,
											"end": 5939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 495,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 495,
											"end": 525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 530,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 636,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 599,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 587,
											"end": 618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 587,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 636,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 583,
											"end": 656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 583,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 583,
											"end": 656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 644,
											"end": 651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 583,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 706,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 711,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 729,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "954FA5EE"
										},
										{
											"begin": 755,
											"end": 759,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 762,
											"end": 771,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 729,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 729,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 729,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 711,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 711,
											"end": 772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 783,
											"end": 794,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 779,
											"end": 862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 779,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 779,
											"end": 862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 818,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 802,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 802,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 831,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 831,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 856,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 831,
											"end": 856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 779,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 490,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 455,
											"end": 866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6138,
											"end": 6151,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6155,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6158,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6186,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6158,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6125,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6187,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6125,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5706,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5782,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5766,
											"end": 5778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5783,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5758,
											"end": 5784,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5784,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5758,
											"end": 5784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5803,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5789,
											"end": 5800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5789,
											"end": 5800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5807,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "19254D3800"
										},
										{
											"begin": 5812,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5812,
											"end": 5839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5839,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4162,
											"end": 4165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4150,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4166,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4150,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4192,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4221,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4192,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4243,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 373,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6034,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6039,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 6044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5383,
											"end": 5386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5405,
											"end": 5417,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5405,
											"end": 5417,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5368,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5418,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5368,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 301,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 301,
											"end": 320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5215,
											"end": 5227,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5192,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5251,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5192,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6306,
											"end": 6329,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6306,
											"end": 6329,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6371,
											"end": 6374,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6331,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6331,
											"end": 6376,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6331,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6302,
											"end": 6377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6377,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6302,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6402,
											"end": 6415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6431,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6389,
											"end": 6437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6437,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6389,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4305,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4356,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4415,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4461,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4415,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4386,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4462,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4386,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4495,
											"end": 4507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4516,
											"end": 4528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4509,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4529,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4509,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4482,
											"end": 4530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4530,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4482,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4556,
											"end": 4565,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4549,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4566,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4549,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4571,
											"end": 4586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4587,
											"end": 4590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4628,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4647,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4662,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4615,
											"end": 4663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4663,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4615,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4596,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4664,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4596,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4681,
											"end": 4684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4669,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4714,
											"name": "PUSH",
											"source": 1,
											"value": "6F05B59D3B20000"
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4692,
											"end": 4850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4756,
											"end": 4760,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4745,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4751,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4726,
											"end": 4752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4722,
											"end": 4845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4802,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4769,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4794,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4826,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4832,
											"end": 4837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4845,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4722,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4692,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5534,
											"end": 5537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5560,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5516,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5561,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5516,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 959,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000002"
										},
										{
											"begin": 969,
											"end": 1023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 1023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 934,
											"end": 1029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1057,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1058,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4E606C47"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2885,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2914,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2914,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2893,
											"end": 2944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2893,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2989,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2989,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3018,
											"end": 3028,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3013,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3028,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2954,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3069,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2950,
											"end": 3069,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3056,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2950,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3108,
											"end": 3118,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3096,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3096,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3157,
											"end": 3167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3192,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3169,
											"end": 3192,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3144,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3193,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3144,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3265,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3266,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3227,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3227,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3223,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3224,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3278,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3283,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3353,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3335,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3353,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3398,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3434,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3457,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3468,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3470,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3472,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3472,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3499,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3472,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3421,
											"end": 3500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3500,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3421,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3386,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3501,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3386,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3605,
											"end": 3615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3618,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3592,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3592,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3619,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3592,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3565,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3565,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3550,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3620,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 3625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 3625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5701,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5571,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5659,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5672,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5689,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5680,
											"end": 5689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5659,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5690,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5659,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5646,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5646,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5646,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2149,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2488,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6649,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6548,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6638,
											"end": 6643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6620,
											"end": 6644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6644,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6620,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4988,
											"end": 4991,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4988,
											"end": 4991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 4995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4975,
											"end": 4996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5030,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5056,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5056,
											"end": 5059,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5063,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5043,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5079,
											"end": 5083,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5079,
											"end": 5083,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5066,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5088,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5066,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5030,
											"end": 5089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5089,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 5030,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5017,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5017,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4998,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5095,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4998,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4962,
											"end": 5096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 5096,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4962,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 5096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 5096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6543,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6447,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6504,
											"end": 6511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6530,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6525,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2803,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2815,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2626,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2707,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2689,
											"end": 2777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2732,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2738,
											"end": 2742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2771,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2777,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2689,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2810,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3160,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 6993,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6654,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6715,
											"end": 6726,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6711,
											"end": 6746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6752,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6818,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6825,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6855,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6856,
											"end": 6857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 6847,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 6908,
											"end": 6920,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6908,
											"end": 6920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6881,
											"end": 6894,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6902,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6876,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6870,
											"end": 6880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6870,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6870,
											"end": 6907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6929,
											"end": 6984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6965,
											"end": 6971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 6976,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6949,
											"end": 6977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6977,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6949,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6984,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 6929,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6993,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6654,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 102,
											"end": 260,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 102,
											"end": 260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 173,
											"end": 177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 188,
											"end": 204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 205,
											"end": 211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 212,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 188,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 184,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 184,
											"end": 237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 227,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 220,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 220,
											"end": 231,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 237,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 184,
											"end": 237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 250,
											"end": 255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 243,
											"end": 255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 102,
											"end": 260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 102,
											"end": 260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2702,
											"end": 2781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 2702,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 2664,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2847,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 2847,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 3038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3228,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3400,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3654,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 3645,
											"end": 3679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 3645,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3627,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3627,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 3680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3614,
											"end": 3680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 3806,
											"end": 3811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3775,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 3775,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3692,
											"end": 3818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3963,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 3824,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 3951,
											"end": 3956,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 3920,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 3920,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4126,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 3969,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 4113,
											"end": 4118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 4069,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4119,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 4069,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 4126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4278,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4289,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 4370,
											"end": 4371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4368,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4289,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 4289,
											"end": 4373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4289,
											"end": 4373,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 4289,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 4386,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4511,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4431,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4521,
											"end": 4536,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4552,
											"end": 4553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4560,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4763,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4572,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4612,
											"end": 4615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 4649,
											"end": 4650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 4631,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4631,
											"end": 4651,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 4631,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 4683,
											"end": 4684,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 4665,
											"end": 4685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4685,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4723,
											"end": 4733,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 4720,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4763,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 5009,
											"end": 5010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 4941,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 5012,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 4941,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 5090,
											"end": 5092,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5075,
											"end": 5093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5022,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 5022,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 5101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5250,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 5107,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5164,
											"end": 5169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 5238,
											"end": 5243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5211,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5244,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 5211,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5250,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5107,
											"end": 5250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5607,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5256,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5377,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5462,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 5343,
											"end": 5462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 5381,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 5381,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5460,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 5381,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5462,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 5343,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 5526,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 5526,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5516,
											"end": 5590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5607,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5256,
											"end": 5607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5807,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5613,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5673,
											"end": 5693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 5673,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5707,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5727,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 5707,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5702,
											"end": 5727,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5702,
											"end": 5727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5777,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5800,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5763,
											"end": 5800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5780,
											"end": 5798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5800,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5763,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5807,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6223,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5813,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5876,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5896,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 5876,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 5896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5910,
											"end": 5930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5930,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 5910,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 5930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 5930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5965,
											"end": 5966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5958,
											"end": 5967,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 6005,
											"end": 6016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5987,
											"end": 6017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5976,
											"end": 6017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5976,
											"end": 6017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6153,
											"end": 6168,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6150,
											"end": 6151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6129,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6183,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 6077,
											"end": 6216,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 6196,
											"end": 6214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 6196,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6216,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 6077,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 6223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6223,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6229,
											"end": 6409,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6229,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6277,
											"end": 6354,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6374,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6371,
											"end": 6372,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6364,
											"end": 6379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6402,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6395,
											"end": 6396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6600,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 6415,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6472,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6472,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6472,
											"end": 6492,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 6472,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6467,
											"end": 6492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6506,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6526,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 6506,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 6535,
											"end": 6570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6550,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6535,
											"end": 6570,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 6535,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6786,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6606,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6654,
											"end": 6731,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6644,
											"end": 6732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6741,
											"end": 6756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6775,
											"end": 6779,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6772,
											"end": 6773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6780,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/BlastFurnace.sol",
								"contracts/NativeTransferable.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BLAST()": "97d75776",
							"_blastClaimInterval()": "4addc0e8",
							"airdropQualifiers(uint256)": "53e3323b",
							"buyIngots(address)": "e5d782fc",
							"calculateIngotBuy(uint256,uint256)": "7a571ae1",
							"calculateIngotBuySimple(uint256)": "e953f982",
							"calculateIngotSell(uint256)": "b18a2f82",
							"claimMyGasFees()": "23084e5f",
							"furnaceRewards(address)": "450c9d7d",
							"getBalance()": "12065fe0",
							"getIngotsSinceLastHatch(address)": "c2a6856f",
							"getMyIngots(address)": "2cf4f274",
							"getMyMiners(address)": "4b634b06",
							"hatchIngots(address)": "feeea92e",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"seedMarket()": "3c5f07cb",
							"sellIngots()": "012d754c",
							"setBlastClaimInterval(uint256)": "eaca243b",
							"setupBlast(address)": "f2e809e0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blastClaimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"airdropQualifiers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"buyIngots\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateIngotBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateIngotBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ingots\",\"type\":\"uint256\"}],\"name\":\"calculateIngotSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMyGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"furnaceRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getIngotsSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyIngots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"hatchIngots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellIngots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBlastClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blastAddr\",\"type\":\"address\"}],\"name\":\"setupBlast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastFurnace.sol\":\"BlastFurnace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/BlastFurnace.sol\":{\"keccak256\":\"0x19e8c6900c561f1ba1f9de952d497c84e8e13fbcc864c794f078c67cea781279\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2610313202cf2d809a40fbdbef10f2dba9ffca226f0cc15844f9bc5c12ca161a\",\"dweb:/ipfs/QmVhMf6w1XZSMmxXR9yVrWgeT3LQeo5TB4sqDVLzsJg76D\"]},\"contracts/NativeTransferable.sol\":{\"keccak256\":\"0x153f66ecb39c24a43c876361e23b5197d4427e054d69ab74649a7c13060a34b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198b057a024e80252d81b63e06037f098886e5d137b3be4fd0b420ef39d237f7\",\"dweb:/ipfs/QmSXXMwTxr85k5XvZM6nh2ow6cKTTXouYSg3ptpKeNrgSe\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 878,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "BLAST",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBlast)15"
							},
							{
								"astId": 24,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_lastBlastClaim",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_blastClaimInterval",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_feesClaimed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 149,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "INGOTS_TO_HATCH_1MINERS",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 152,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "PSN",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 155,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "PSNH",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 158,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "devFeeVal",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 161,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "initialized",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 163,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "recAdd",
								"offset": 1,
								"slot": "9",
								"type": "t_address_payable"
							},
							{
								"astId": 167,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "hatcheryMiners",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 171,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "claimedIngots",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 175,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "lastHatch",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 179,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "referrals",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 181,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "marketIngots",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 184,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "airdropQualifiers",
								"offset": 0,
								"slot": "15",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 188,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_isHolder",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 192,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_isAirDropQualifier",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 195,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_holders",
								"offset": 0,
								"slot": "18",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBlast)15": {
								"encoding": "inplace",
								"label": "contract IBlast",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NativeTransferable.sol": {
				"NativeTransferable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTransfer",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTransfer\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NativeTransferable.sol\":\"NativeTransferable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NativeTransferable.sol\":{\"keccak256\":\"0x153f66ecb39c24a43c876361e23b5197d4427e054d69ab74649a7c13060a34b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198b057a024e80252d81b63e06037f098886e5d137b3be4fd0b420ef39d237f7\",\"dweb:/ipfs/QmSXXMwTxr85k5XvZM6nh2ow6cKTTXouYSg3ptpKeNrgSe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":260:303  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_897": {
									"entryPoint": null,
									"id": 897,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104078061005c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:3:-:0;;;260:43;;;;;;;;;;288:10;279:6;;:19;;;;;;;;;;;;;;;;;;61:860;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_978": {
									"entryPoint": 507,
									"id": 978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_925": {
									"entryPoint": 394,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_905": {
									"entryPoint": 355,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_942": {
									"entryPoint": 176,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_954": {
									"entryPoint": 479,
									"id": 954,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:5",
										"nodeType": "YulBlock",
										"src": "0:1952:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "184:51:5",
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nativeSrc": "194:35:5",
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nativeSrc": "205:24:5",
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:5",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:5",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nativeSrc": "306:53:5",
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nativeSrc": "328:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nativeSrc": "316:37:5",
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nativeSrc": "316:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:5",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:5",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nativeSrc": "463:124:5",
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nativeSrc": "473:26:5",
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:5",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:18:5",
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:5",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nativeSrc": "562:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nativeSrc": "509:71:5",
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nativeSrc": "509:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:5",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:5",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:5",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nativeSrc": "635:48:5",
													"nodeType": "YulBlock",
													"src": "635:48:5",
													"statements": [
														{
															"nativeSrc": "645:32:5",
															"nodeType": "YulAssignment",
															"src": "645:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:5"
																		},
																		"nativeSrc": "663:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:5"
																},
																"nativeSrc": "656:21:5",
																"nodeType": "YulFunctionCall",
																"src": "656:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:5",
														"nodeType": "YulTypedName",
														"src": "617:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:5",
														"nodeType": "YulTypedName",
														"src": "627:7:5",
														"type": ""
													}
												],
												"src": "593:90:5"
											},
											{
												"body": {
													"nativeSrc": "748:50:5",
													"nodeType": "YulBlock",
													"src": "748:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:5"
																		},
																		"nativeSrc": "770:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:5"
																},
																"nativeSrc": "758:34:5",
																"nodeType": "YulFunctionCall",
																"src": "758:34:5"
															},
															"nativeSrc": "758:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:5",
														"nodeType": "YulTypedName",
														"src": "736:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:5",
														"nodeType": "YulTypedName",
														"src": "743:3:5",
														"type": ""
													}
												],
												"src": "689:109:5"
											},
											{
												"body": {
													"nativeSrc": "896:118:5",
													"nodeType": "YulBlock",
													"src": "896:118:5",
													"statements": [
														{
															"nativeSrc": "906:26:5",
															"nodeType": "YulAssignment",
															"src": "906:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:5",
																		"nodeType": "YulLiteral",
																		"src": "929:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:5"
																},
																"nativeSrc": "914:18:5",
																"nodeType": "YulFunctionCall",
																"src": "914:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:5"
																		},
																		"nativeSrc": "989:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:5"
																},
																"nativeSrc": "942:65:5",
																"nodeType": "YulFunctionCall",
																"src": "942:65:5"
															},
															"nativeSrc": "942:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:5",
														"nodeType": "YulTypedName",
														"src": "868:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:5",
														"nodeType": "YulTypedName",
														"src": "880:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:5",
														"nodeType": "YulTypedName",
														"src": "891:4:5",
														"type": ""
													}
												],
												"src": "804:210:5"
											},
											{
												"body": {
													"nativeSrc": "1060:35:5",
													"nodeType": "YulBlock",
													"src": "1060:35:5",
													"statements": [
														{
															"nativeSrc": "1070:19:5",
															"nodeType": "YulAssignment",
															"src": "1070:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:5"
																},
																"nativeSrc": "1080:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:5",
														"nodeType": "YulTypedName",
														"src": "1053:6:5",
														"type": ""
													}
												],
												"src": "1020:75:5"
											},
											{
												"body": {
													"nativeSrc": "1190:28:5",
													"nodeType": "YulBlock",
													"src": "1190:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:5"
																},
																"nativeSrc": "1200:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:5"
															},
															"nativeSrc": "1200:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:5"
											},
											{
												"body": {
													"nativeSrc": "1313:28:5",
													"nodeType": "YulBlock",
													"src": "1313:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:5"
																},
																"nativeSrc": "1323:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:5"
															},
															"nativeSrc": "1323:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:5"
											},
											{
												"body": {
													"nativeSrc": "1390:79:5",
													"nodeType": "YulBlock",
													"src": "1390:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:5",
																"nodeType": "YulBlock",
																"src": "1447:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:5"
																			},
																			"nativeSrc": "1449:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:5"
																		},
																		"nativeSrc": "1449:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:5"
																				},
																				"nativeSrc": "1420:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:5"
																		},
																		"nativeSrc": "1410:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:5"
																},
																"nativeSrc": "1403:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:5"
															},
															"nativeSrc": "1400:63:5",
															"nodeType": "YulIf",
															"src": "1400:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:5",
														"nodeType": "YulTypedName",
														"src": "1383:5:5",
														"type": ""
													}
												],
												"src": "1347:122:5"
											},
											{
												"body": {
													"nativeSrc": "1527:87:5",
													"nodeType": "YulBlock",
													"src": "1527:87:5",
													"statements": [
														{
															"nativeSrc": "1537:29:5",
															"nodeType": "YulAssignment",
															"src": "1537:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:5"
																},
																"nativeSrc": "1546:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:5"
																},
																"nativeSrc": "1575:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:5"
															},
															"nativeSrc": "1575:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:5",
														"nodeType": "YulTypedName",
														"src": "1505:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:5",
														"nodeType": "YulTypedName",
														"src": "1513:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:5",
														"nodeType": "YulTypedName",
														"src": "1521:5:5",
														"type": ""
													}
												],
												"src": "1475:139:5"
											},
											{
												"body": {
													"nativeSrc": "1686:263:5",
													"nodeType": "YulBlock",
													"src": "1686:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:5",
																"nodeType": "YulBlock",
																"src": "1732:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:5"
																			},
																			"nativeSrc": "1734:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:5"
																		},
																		"nativeSrc": "1734:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:5"
																		},
																		"nativeSrc": "1703:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:5"
																},
																"nativeSrc": "1699:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:5"
															},
															"nativeSrc": "1696:119:5",
															"nodeType": "YulIf",
															"src": "1696:119:5"
														},
														{
															"nativeSrc": "1825:117:5",
															"nodeType": "YulBlock",
															"src": "1825:117:5",
															"statements": [
																{
																	"nativeSrc": "1840:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:5"
																				},
																				"nativeSrc": "1900:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:5"
																		},
																		"nativeSrc": "1879:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:5",
														"nodeType": "YulTypedName",
														"src": "1656:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:5",
														"nodeType": "YulTypedName",
														"src": "1667:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:5",
														"nodeType": "YulTypedName",
														"src": "1679:6:5",
														"type": ""
													}
												],
												"src": "1620:329:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:111;;;:::i;:::-;;308:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;531:111;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;308:70::-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;443:83::-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;647:100::-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;752:166::-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206200",
								"executionCost": "24514",
								"totalCost": "230714"
							},
							"external": {
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferOwnership(address)": "27997"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 260,
									"end": 303,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "8F32D59B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/BlastFurnace.sol",
								"contracts/NativeTransferable.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 878,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":61:5718  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":61:5718  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH24 0x3954B2506FD2555C37DD4481A8114673A049FC165BB79E1A PUSH7 0x855F7C61466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "61:5657:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH24 0x3954B2506FD2555C37DD4481A8114673A049FC165BB79E1A PUSH7 0x855F7C61466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "61:5657:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/BlastFurnace.sol",
								"contracts/NativeTransferable.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BlastClaimable.sol": {
				"ast": {
					"absolutePath": "contracts/BlastClaimable.sol",
					"exportedSymbols": {
						"BlastClaimable": [
							133
						],
						"IBlast": [
							15
						],
						"Ownable": [
							979
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 134,
							"sourceUnit": 980,
							"src": "59:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlast",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "IBlast",
							"nameLocation": "96:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4e606c47",
									"id": 5,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureClaimableGas",
									"nameLocation": "116:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:0:0"
									},
									"scope": 15,
									"src": "107:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "954fa5ee",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAllGas",
									"nameLocation": "163:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "183:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "175:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "208:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "200:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:44:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:0"
									},
									"scope": 15,
									"src": "154:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "86:163:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 16,
										"name": "Ownable",
										"nameLocations": [
											"289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "289:7:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:0"
								}
							],
							"canonicalName": "BlastClaimable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133,
								979
							],
							"name": "BlastClaimable",
							"nameLocation": "271:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "97d75776",
									"id": 20,
									"mutability": "mutable",
									"name": "BLAST",
									"nameLocation": "315:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "301:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBlast_$15",
										"typeString": "contract IBlast"
									},
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "IBlast",
											"nameLocations": [
												"301:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 15,
											"src": "301:6:0"
										},
										"referencedDeclaration": 15,
										"src": "301:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBlast_$15",
											"typeString": "contract IBlast"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_lastBlastClaim",
									"nameLocation": "352:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "324:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "324:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "343:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4addc0e8",
									"id": 27,
									"mutability": "mutable",
									"name": "_blastClaimInterval",
									"nameLocation": "388:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "373:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "410:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_feesClaimed",
									"nameLocation": "437:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "420:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "420:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "490:376:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "recipient",
														"nameLocation": "503:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "495:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 32,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "495:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"expression": {
														"id": 34,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "515:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "519:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "515:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "495:30:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "lastClaim",
														"nameLocation": "538:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "530:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"baseExpression": {
														"id": 39,
														"name": "_lastBlastClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "550:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 41,
													"indexExpression": {
														"id": 40,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "550:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "530:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 43,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "587:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 44,
															"name": "_blastClaimInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "599:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "587:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 46,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "621:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "627:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "621:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "587:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "583:73:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "638:18:0",
													"statements": [
														{
															"functionReturnParameters": 31,
															"id": 49,
															"nodeType": "Return",
															"src": "644:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 52,
															"name": "_lastBlastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "662:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 54,
														"indexExpression": {
															"id": 53,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "678:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "662:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 55,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "697:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "691:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "662:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "662:44:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "claimed",
														"nameLocation": "719:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "711:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 65,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "755:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BlastClaimable_$133",
																		"typeString": "contract BlastClaimable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BlastClaimable_$133",
																		"typeString": "contract BlastClaimable"
																	}
																],
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "747:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 63,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "747:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 67,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "762:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 61,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "729:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$15",
																"typeString": "contract IBlast"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "735:11:0",
														"memberName": "claimAllGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "729:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) external returns (uint256)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "711:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "793:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "783:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "779:83:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "796:66:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "_feesClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "802:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 74,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "802:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "802:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 78,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "848:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 77,
																	"name": "blastFeesClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "831:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "831:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "831:25:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "23084e5f",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimMyGasFees",
									"nameLocation": "464:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:0:0"
									},
									"scope": 133,
									"src": "455:411:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "929:168:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "blastAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "938:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "951:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 92,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "951:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "951:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "938:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "IfStatement",
												"src": "934:95:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "963:66:0",
													"statements": [
														{
															"expression": {
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 97,
																	"name": "blastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "969:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "307834333030303030303030303030303030303030303030303030303030303030303030303030303032",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x4300000000000000000000000000000000000002"
																},
																"src": "969:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 100,
															"nodeType": "ExpressionStatement",
															"src": "969:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "BLAST",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1033:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlast_$15",
															"typeString": "contract IBlast"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 105,
																"name": "blastAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1048:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 104,
															"name": "IBlast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBlast_$15_$",
																"typeString": "type(contract IBlast)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1041:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlast_$15",
															"typeString": "contract IBlast"
														}
													},
													"src": "1033:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBlast_$15",
														"typeString": "contract IBlast"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1033:25:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 109,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$15",
																"typeString": "contract IBlast"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1069:21:0",
														"memberName": "configureClaimableGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1063:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1063:29:0"
											}
										]
									},
									"functionSelector": "f2e809e0",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 89,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "onlyOwner",
												"nameLocations": [
													"919:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "919:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:9:0"
										}
									],
									"name": "setupBlast",
									"nameLocation": "880:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "blastAddr",
												"nameLocation": "899:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "891:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:19:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:0"
									},
									"scope": 133,
									"src": "871:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1170:40:0",
										"statements": [
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "_blastClaimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1175:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 123,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1175:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1175:30:0"
											}
										]
									},
									"functionSelector": "eaca243b",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "onlyOwner",
												"nameLocations": [
													"1160:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "1160:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1160:9:0"
										}
									],
									"name": "setBlastClaimInterval",
									"nameLocation": "1111:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "1141:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1133:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:18:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:0"
									},
									"scope": 133,
									"src": "1102:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blastFeesClaimed",
									"nameLocation": "1224:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:15:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:0"
									},
									"scope": 133,
									"src": "1215:58:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 134,
							"src": "253:1023:0",
							"usedErrors": [],
							"usedEvents": [
								882,
								888
							]
						}
					],
					"src": "33:1245:0"
				},
				"id": 0
			},
			"contracts/BlastFurnace.sol": {
				"ast": {
					"absolutePath": "contracts/BlastFurnace.sol",
					"exportedSymbols": {
						"BlastClaimable": [
							133
						],
						"BlastFurnace": [
							842
						],
						"IBlast": [
							15
						],
						"NativeTransferable": [
							874
						],
						"Ownable": [
							979
						],
						"SafeMath": [
							1290
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "1640:24:1"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 843,
							"sourceUnit": 980,
							"src": "1666:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/BlastClaimable.sol",
							"file": "./BlastClaimable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 843,
							"sourceUnit": 134,
							"src": "1691:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NativeTransferable.sol",
							"file": "./NativeTransferable.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 843,
							"sourceUnit": 875,
							"src": "1723:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 843,
							"sourceUnit": 1291,
							"src": "1759:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 140,
										"name": "BlastClaimable",
										"nameLocations": [
											"1822:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 133,
										"src": "1822:14:1"
									},
									"id": 141,
									"nodeType": "InheritanceSpecifier",
									"src": "1822:14:1"
								},
								{
									"baseName": {
										"id": 142,
										"name": "NativeTransferable",
										"nameLocations": [
											"1838:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "1838:18:1"
									},
									"id": 143,
									"nodeType": "InheritanceSpecifier",
									"src": "1838:18:1"
								}
							],
							"canonicalName": "BlastFurnace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 842,
							"linearizedBaseContracts": [
								842,
								874,
								133,
								979
							],
							"name": "BlastFurnace",
							"nameLocation": "1806:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 146,
									"libraryName": {
										"id": 144,
										"name": "SafeMath",
										"nameLocations": [
											"1867:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1290,
										"src": "1867:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1861:27:1",
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1880:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 149,
									"mutability": "mutable",
									"name": "INGOTS_TO_HATCH_1MINERS",
									"nameLocation": "1909:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "1893:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1893:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303830303030",
										"id": 148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1935:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1080000_by_1",
											"typeString": "int_const 1080000"
										},
										"value": "1080000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "PSN",
									"nameLocation": "2009:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "1993:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1993:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2015:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 155,
									"mutability": "mutable",
									"name": "PSNH",
									"nameLocation": "2040:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2024:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2024:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2047:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "devFeeVal",
									"nameLocation": "2071:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2055:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2055:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2083:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "2101:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2088:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 159,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2088:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2115:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 163,
									"mutability": "mutable",
									"name": "recAdd",
									"nameLocation": "2148:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2124:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 162,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2124:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "hatcheryMiners",
									"nameLocation": "2194:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2158:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 166,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2166:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2158:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 165,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2177:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "claimedIngots",
									"nameLocation": "2248:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2212:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 170,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 168,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2220:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2212:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 169,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2231:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "lastHatch",
									"nameLocation": "2301:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2265:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 174,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 172,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2273:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2265:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2284:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "2350:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2314:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 178,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2322:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2314:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2333:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "marketIngots",
									"nameLocation": "2379:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2363:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 180,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2363:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "53e3323b",
									"id": 184,
									"mutability": "mutable",
									"name": "airdropQualifiers",
									"nameLocation": "2412:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2395:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2395:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 183,
										"nodeType": "ArrayTypeName",
										"src": "2395:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "_isHolder",
									"nameLocation": "2468:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2435:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 187,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2443:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2435:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 186,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2454:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_isAirDropQualifier",
									"nameLocation": "2514:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2481:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 191,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2489:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2481:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 190,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2500:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 195,
									"mutability": "mutable",
									"name": "_holders",
									"nameLocation": "2555:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 842,
									"src": "2537:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2537:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 194,
										"nodeType": "ArrayTypeName",
										"src": "2537:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2583:38:1",
										"statements": [
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "recAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2588:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 201,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2605:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2609:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2605:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2597:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 199,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2597:8:1",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2597:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2588:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2588:28:1"
											}
										]
									},
									"id": 207,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2580:2:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2583:0:1"
									},
									"scope": 842,
									"src": "2569:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2684:131:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 214,
															"name": "_isHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2693:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 216,
														"indexExpression": {
															"id": 215,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2703:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2693:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2712:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2693:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"nodeType": "IfStatement",
												"src": "2689:88:1",
												"trueBody": {
													"id": 231,
													"nodeType": "Block",
													"src": "2718:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 222,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2738:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 219,
																		"name": "_holders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "2724:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2733:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2724:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2724:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 224,
															"nodeType": "ExpressionStatement",
															"src": "2724:19:1"
														},
														{
															"expression": {
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 225,
																		"name": "_isHolder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2749:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 227,
																	"indexExpression": {
																		"id": 226,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2759:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2749:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2767:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2749:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 230,
															"nodeType": "ExpressionStatement",
															"src": "2749:22:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 233,
															"name": "claimedIngots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2783:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 235,
														"indexExpression": {
															"id": 234,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2797:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2783:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 236,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2805:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2783:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2783:27:1"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setClaimed",
									"nameLocation": "2635:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2655:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2647:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2669:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2661:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:29:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:0:1"
									},
									"scope": 842,
									"src": "2626:189:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2861:764:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2874:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2866:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2866:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2866:20:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 249,
														"name": "ref",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2897:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 250,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2904:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2908:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2904:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2897:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 261,
												"nodeType": "IfStatement",
												"src": "2893:51:1",
												"trueBody": {
													"id": 260,
													"nodeType": "Block",
													"src": "2916:28:1",
													"statements": [
														{
															"expression": {
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 253,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "2922:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2936:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2928:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 254,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2928:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2928:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2922:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 259,
															"nodeType": "ExpressionStatement",
															"src": "2922:16:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 262,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "2954:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 265,
															"indexExpression": {
																"expression": {
																	"id": 263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2964:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2968:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2964:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2987:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2979:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 266,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2979:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2979:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2954:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 271,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "2993:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 274,
															"indexExpression": {
																"expression": {
																	"id": 272,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3003:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3007:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3003:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2993:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3018:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3022:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3018:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2993:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2954:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 287,
												"nodeType": "IfStatement",
												"src": "2950:119:1",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "3030:39:1",
													"statements": [
														{
															"expression": {
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 279,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3036:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"expression": {
																			"id": 280,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3046:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3050:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3046:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3036:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 283,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3060:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3036:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "3036:27:1"
														}
													]
												}
											},
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "ingotsUsed",
														"nameLocation": "3083:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "3075:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3075:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3108:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3112:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3108:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 290,
														"name": "getMyIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3096:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3096:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3075:44:1"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "newMiners",
														"nameLocation": "3132:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "3124:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3124:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"arguments": [
														{
															"id": 299,
															"name": "ingotsUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3157:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 300,
															"name": "INGOTS_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3169:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 297,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "3144:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3153:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1199,
														"src": "3144:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3144:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3124:69:1"
											},
											{
												"expression": {
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 303,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3198:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 306,
														"indexExpression": {
															"expression": {
																"id": 304,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3213:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3217:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3213:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3198:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 309,
																	"name": "hatcheryMiners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "3240:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 312,
																"indexExpression": {
																	"expression": {
																		"id": 310,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3255:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3259:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3255:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3240:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 313,
																"name": "newMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "3268:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 307,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "3227:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3236:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "3227:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3227:51:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3198:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "3198:80:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 318,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3295:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3299:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3295:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3307:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 317,
														"name": "_setClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "3283:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3283:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "3283:26:1"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 323,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3314:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 326,
														"indexExpression": {
															"expression": {
																"id": 324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3324:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3328:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3324:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3314:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 327,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3338:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3344:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3338:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3314:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "3314:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 332,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3398:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 335,
															"indexExpression": {
																"expression": {
																	"id": 333,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3408:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3412:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3408:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3398:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 338,
																		"name": "claimedIngots",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "3434:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 343,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 339,
																			"name": "referrals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "3448:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																				"typeString": "mapping(address => address)"
																			}
																		},
																		"id": 342,
																		"indexExpression": {
																			"expression": {
																				"id": 340,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3458:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3462:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3458:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3448:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3434:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 346,
																			"name": "ingotsUsed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "3485:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "38",
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3497:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			}
																		],
																		"expression": {
																			"id": 344,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1290,
																			"src": "3472:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3481:3:1",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1199,
																		"src": "3472:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3472:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 336,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "3421:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3430:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1154,
																"src": "3421:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3421:79:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 331,
														"name": "_setClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "3386:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3386:115:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "3386:115:1"
											},
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "marketIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3550:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 355,
																"name": "marketIngots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "3578:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 358,
																		"name": "ingotsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3605:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "35",
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3617:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		}
																	],
																	"expression": {
																		"id": 356,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1290,
																		"src": "3592:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3601:3:1",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1199,
																	"src": "3592:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3592:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 353,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "3565:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3574:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "3565:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3565:55:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3550:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "3550:70:1"
											}
										]
									},
									"functionSelector": "feeea92e",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hatchIngots",
									"nameLocation": "2829:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "2849:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2841:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:13:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2861:0:1"
									},
									"scope": 842,
									"src": "2820:805:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3659:394:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3672:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3664:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "3664:20:1"
											},
											{
												"assignments": [
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "hasIngots",
														"nameLocation": "3697:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3689:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 372,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3689:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3721:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3725:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3721:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "getMyIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3709:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3709:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3689:43:1"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "IngotValue",
														"nameLocation": "3745:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3737:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"arguments": [
														{
															"id": 382,
															"name": "hasIngots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "3777:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "calculateIngotSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "3758:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3758:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3737:50:1"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3800:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3792:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3792:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"arguments": [
														{
															"id": 388,
															"name": "IngotValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3813:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 387,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3806:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3806:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3792:32:1"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 391,
															"name": "claimedIngots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "3829:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 394,
														"indexExpression": {
															"expression": {
																"id": 392,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3847:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3843:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3829:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3857:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3829:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "3829:29:1"
											},
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 398,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3863:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 401,
														"indexExpression": {
															"expression": {
																"id": 399,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3873:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3877:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3873:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3863:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 402,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3887:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3893:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3887:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3863:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3863:39:1"
											},
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "marketIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3907:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 409,
																"name": "marketIngots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "3935:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 410,
																"name": "hasIngots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "3949:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 407,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "3922:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1154,
															"src": "3922:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3922:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3907:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "3907:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "3980:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 414,
															"name": "recAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3964:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3971:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3964:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3964:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "3964:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 428,
																	"name": "IngotValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "4031:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 429,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "4043:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 426,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "4018:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4027:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "4018:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4018:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 422,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3997:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4001:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3997:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3989:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3989:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3989:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4009:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3989:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3989:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "3989:59:1"
											}
										]
									},
									"functionSelector": "012d754c",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellIngots",
									"nameLocation": "3639:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3649:2:1"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3659:0:1"
									},
									"scope": 842,
									"src": "3630:423:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "4125:123:1",
										"statements": [
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "hasIngots",
														"nameLocation": "4138:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "4130:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4130:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [
														{
															"id": 444,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "4162:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "getMyIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "4150:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4150:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4130:36:1"
											},
											{
												"assignments": [
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "IngotValue",
														"nameLocation": "4179:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "4171:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 450,
															"name": "hasIngots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "4211:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "calculateIngotSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "4192:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:50:1"
											},
											{
												"expression": {
													"id": 453,
													"name": "IngotValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "4233:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 454,
												"nodeType": "Return",
												"src": "4226:17:1"
											}
										]
									},
									"functionSelector": "450c9d7d",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "furnaceRewards",
									"nameLocation": "4067:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "4090:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4082:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4081:13:1"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:9:1"
									},
									"scope": 842,
									"src": "4058:190:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "4300:554:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4313:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4305:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4305:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "4305:20:1"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "4338:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "4330:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 465,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4330:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 469,
												"initialValue": {
													"expression": {
														"id": 467,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4346:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4346:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4330:26:1"
											},
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "ingotsBought",
														"nameLocation": "4371:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "4363:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 470,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4404:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4408:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4404:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 479,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4436:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BlastFurnace_$842",
																					"typeString": "contract BlastFurnace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BlastFurnace_$842",
																					"typeString": "contract BlastFurnace"
																				}
																			],
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4428:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 477,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4428:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4428:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4442:7:1",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "4428:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 482,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4451:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4455:5:1",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4451:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 475,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "4415:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4424:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "4415:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4415:46:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"name": "calculateIngotBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4386:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4386:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4363:99:1"
											},
											{
												"expression": {
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 487,
														"name": "ingotsBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "4467:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 490,
																"name": "ingotsBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4495:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 492,
																		"name": "ingotsBought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "4516:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 491,
																	"name": "devFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "4509:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4509:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 488,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "4482:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4491:3:1",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "4482:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4482:48:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4467:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "4467:63:1"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4543:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "4535:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4535:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 500,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4556:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4560:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4556:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "4549:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4549:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4535:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4587:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 504,
															"name": "recAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "4571:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4578:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4571:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4571:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "4571:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4608:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 514,
																		"name": "claimedIngots",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "4628:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "4642:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4628:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 517,
																	"name": "ingotsBought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "4650:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 512,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "4615:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4624:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1154,
																"src": "4615:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4615:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "_setClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "4596:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4596:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "4596:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "ref",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4681:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 521,
														"name": "hatchIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4669:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4669:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "4669:16:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 525,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4696:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4700:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4696:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "2e35653138",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4709:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000_by_1",
															"typeString": "int_const 500000000000000000"
														},
														"value": ".5e18"
													},
													"src": "4696:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "4692:158:1",
												"trueBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "4716:134:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 529,
																		"name": "_isAirDropQualifier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "4726:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 531,
																	"indexExpression": {
																		"id": 530,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "4746:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4726:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4756:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4726:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 547,
															"nodeType": "IfStatement",
															"src": "4722:123:1",
															"trueBody": {
																"id": 546,
																"nodeType": "Block",
																"src": "4762:83:1",
																"statements": [
																	{
																		"expression": {
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 534,
																					"name": "_isAirDropQualifier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 192,
																					"src": "4769:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 536,
																				"indexExpression": {
																					"id": 535,
																					"name": "buyer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 466,
																					"src": "4789:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4769:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4798:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "4769:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 539,
																		"nodeType": "ExpressionStatement",
																		"src": "4769:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 543,
																					"name": "buyer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 466,
																					"src": "4832:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 540,
																					"name": "airdropQualifiers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 184,
																					"src": "4809:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4827:4:1",
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "4809:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer,address)"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4809:29:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 545,
																		"nodeType": "ExpressionStatement",
																		"src": "4809:29:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "e5d782fc",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyIngots",
									"nameLocation": "4262:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "4280:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4272:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:13:1"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4300:0:1"
									},
									"scope": 842,
									"src": "4253:601:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "4950:151:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 566,
																	"name": "PSN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "4988:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 567,
																	"name": "bs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "4993:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 564,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "4975:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4984:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1184,
																"src": "4975:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4975:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 571,
																	"name": "PSNH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "5011:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 578,
																							"name": "PSN",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 152,
																							"src": "5056:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 579,
																							"name": "rs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 555,
																							"src": "5061:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 576,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1290,
																							"src": "5043:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5052:3:1",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1184,
																						"src": "5043:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 580,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5043:21:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 583,
																							"name": "PSNH",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 155,
																							"src": "5079:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 584,
																							"name": "rt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 553,
																							"src": "5085:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 581,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1290,
																							"src": "5066:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5075:3:1",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1184,
																						"src": "5066:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5066:22:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 574,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1290,
																					"src": "5030:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5039:3:1",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1154,
																				"src": "5030:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5030:59:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 587,
																			"name": "rt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 553,
																			"src": "5091:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 572,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1290,
																			"src": "5017:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5026:3:1",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1199,
																		"src": "5017:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5017:77:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 569,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "4998:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5007:3:1",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1154,
																"src": "4998:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4998:97:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 562,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "4962:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4971:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1199,
														"src": "4962:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4962:134:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 591,
												"nodeType": "Return",
												"src": "4955:141:1"
											}
										]
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTrade",
									"nameLocation": "4868:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "rt",
												"nameLocation": "4891:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4883:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4883:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "rs",
												"nameLocation": "4903:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4895:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "bs",
												"nameLocation": "4915:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4907:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4882:36:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4941:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4940:9:1"
									},
									"scope": 842,
									"src": "4859:242:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "5180:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "ingots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5207:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "marketIngots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5215:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 605,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5237:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BlastFurnace_$842",
																			"typeString": "contract BlastFurnace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BlastFurnace_$842",
																			"typeString": "contract BlastFurnace"
																		}
																	],
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5229:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 603,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5229:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5229:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5243:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5229:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5192:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5192:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 609,
												"nodeType": "Return",
												"src": "5185:66:1"
											}
										]
									},
									"functionSelector": "b18a2f82",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateIngotSell",
									"nameLocation": "5115:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "ingots",
												"nameLocation": "5142:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5134:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:16:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5171:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5170:9:1"
									},
									"scope": 842,
									"src": "5106:150:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5356:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "5383:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 622,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "5388:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 623,
															"name": "marketIngots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5405:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5368:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 619,
												"id": 625,
												"nodeType": "Return",
												"src": "5361:57:1"
											}
										]
									},
									"functionSelector": "7a571ae1",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateIngotBuy",
									"nameLocation": "5270:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "5296:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5288:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5288:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "contractBalance",
												"nameLocation": "5309:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5301:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5287:38:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5347:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5346:9:1"
									},
									"scope": 842,
									"src": "5261:162:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "5504:62:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "5534:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 638,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5547:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BlastFurnace_$842",
																			"typeString": "contract BlastFurnace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BlastFurnace_$842",
																			"typeString": "contract BlastFurnace"
																		}
																	],
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5539:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5539:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5539:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5553:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5539:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "calculateIngotBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "5516:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5516:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 633,
												"id": 642,
												"nodeType": "Return",
												"src": "5509:52:1"
											}
										]
									},
									"functionSelector": "e953f982",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateIngotBuySimple",
									"nameLocation": "5437:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "5469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5461:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:13:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5495:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:9:1"
									},
									"scope": 842,
									"src": "5428:138:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "5634:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 655,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "5672:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 656,
																	"name": "devFeeVal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "5680:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "5659:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5668:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1184,
																"src": "5659:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5692:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 651,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "5646:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5655:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1199,
														"src": "5646:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5646:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 650,
												"id": 660,
												"nodeType": "Return",
												"src": "5639:57:1"
											}
										]
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "devFee",
									"nameLocation": "5580:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5595:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "5587:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5586:16:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "5625:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5624:9:1"
									},
									"scope": 842,
									"src": "5571:130:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "5753:91:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "marketIngots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "5766:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5782:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5766:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5758:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5758:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "5758:26:1"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 673,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "5789:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5803:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5789:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "5789:18:1"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "marketIngots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "5812:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313038303030303030303030",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5827:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_108000000000_by_1",
															"typeString": "int_const 108000000000"
														},
														"value": "108000000000"
													},
													"src": "5812:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "5812:27:1"
											}
										]
									},
									"functionSelector": "3c5f07cb",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyOwner",
												"nameLocations": [
													"5743:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "5743:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5743:9:1"
										}
									],
									"name": "seedMarket",
									"nameLocation": "5715:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:2:1"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5753:0:1"
									},
									"scope": 842,
									"src": "5706:138:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "5901:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 689,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5921:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BlastFurnace_$842",
																	"typeString": "contract BlastFurnace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BlastFurnace_$842",
																	"typeString": "contract BlastFurnace"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5913:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5913:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5913:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5927:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 692,
												"nodeType": "Return",
												"src": "5906:28:1"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "5858:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5868:2:1"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "5892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:9:1"
									},
									"scope": 842,
									"src": "5849:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6008:36:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 701,
														"name": "hatcheryMiners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "6020:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 703,
													"indexExpression": {
														"id": 702,
														"name": "adr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6035:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6020:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 700,
												"id": 704,
												"nodeType": "Return",
												"src": "6013:26:1"
											}
										]
									},
									"functionSelector": "4b634b06",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyMiners",
									"nameLocation": "5953:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "5973:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5965:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5965:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5964:13:1"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5999:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5998:9:1"
									},
									"scope": 842,
									"src": "5944:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "6113:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 715,
																"name": "claimedIngots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "6138:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 717,
															"indexExpression": {
																"id": 716,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "6152:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6138:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 719,
																	"name": "adr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "6182:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 718,
																"name": "getIngotsSinceLastHatch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "6158:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6158:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 713,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "6125:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6134:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "6125:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 722,
												"nodeType": "Return",
												"src": "6118:69:1"
											}
										]
									},
									"functionSelector": "2cf4f274",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyIngots",
									"nameLocation": "6058:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "6078:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "6070:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6069:13:1"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "6104:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6104:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6103:9:1"
									},
									"scope": 842,
									"src": "6049:143:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "6273:169:1",
										"statements": [
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "secondsPassed",
														"nameLocation": "6286:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "6278:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6278:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"id": 734,
															"name": "INGOTS_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "6306:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 737,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6344:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6350:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6344:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"id": 739,
																		"name": "lastHatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "6361:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 741,
																	"indexExpression": {
																		"id": 740,
																		"name": "adr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "6371:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6361:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 735,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "6331:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6340:3:1",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "6331:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6331:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "6302:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6302:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6278:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 747,
															"name": "secondsPassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6402:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 748,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "6417:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 750,
															"indexExpression": {
																"id": 749,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "6432:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6417:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 745,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "6389:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1290_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6398:3:1",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1184,
														"src": "6389:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6389:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 730,
												"id": 752,
												"nodeType": "Return",
												"src": "6382:55:1"
											}
										]
									},
									"functionSelector": "c2a6856f",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIngotsSinceLastHatch",
									"nameLocation": "6206:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "6238:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6230:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6229:13:1"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "6264:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6264:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6263:9:1"
									},
									"scope": 842,
									"src": "6197:245:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "6513:30:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 763,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "6525:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 764,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "6529:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6525:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 767,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "6537:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6525:13:1",
													"trueExpression": {
														"id": 766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "6533:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 762,
												"id": 769,
												"nodeType": "Return",
												"src": "6518:20:1"
											}
										]
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6456:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6468:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6460:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6479:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6471:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6459:22:1"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "6504:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:9:1"
									},
									"scope": 842,
									"src": "6447:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										132
									],
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "6615:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "6638:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_distributeNative",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "6620:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6620:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "6620:24:1"
											}
										]
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blastFeesClaimed",
									"nameLocation": "6557:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6606:8:1"
									},
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6582:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "6574:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6573:15:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6615:0:1"
									},
									"scope": 842,
									"src": "6548:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6706:287:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "6715:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6725:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6715:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "6711:35:1",
												"trueBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "6728:18:1",
													"statements": [
														{
															"functionReturnParameters": 786,
															"id": 790,
															"nodeType": "Return",
															"src": "6734:7:1"
														}
													]
												}
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "holder",
														"nameLocation": "6760:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 840,
														"src": "6752:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 793,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6752:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"nodeType": "VariableDeclarationStatement",
												"src": "6752:14:1"
											},
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "cut",
														"nameLocation": "6779:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 840,
														"src": "6771:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6771:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"nodeType": "VariableDeclarationStatement",
												"src": "6771:11:1"
											},
											{
												"body": {
													"id": 838,
													"nodeType": "Block",
													"src": "6832:157:1",
													"statements": [
														{
															"expression": {
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 810,
																	"name": "holder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "6838:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 811,
																		"name": "_holders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "6847:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 813,
																	"indexExpression": {
																		"id": 812,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "6856:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6847:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6838:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 815,
															"nodeType": "ExpressionStatement",
															"src": "6838:20:1"
														},
														{
															"expression": {
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 816,
																	"name": "cut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "6864:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 824,
																			"name": "marketIngots",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "6908:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 819,
																						"name": "claimedIngots",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 171,
																						"src": "6881:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 821,
																					"indexExpression": {
																						"id": 820,
																						"name": "holder",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "6895:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6881:21:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 817,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "6870:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6877:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1184,
																				"src": "6870:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6870:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6904:3:1",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1199,
																		"src": "6870:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6870:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6864:57:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 827,
															"nodeType": "ExpressionStatement",
															"src": "6864:57:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 828,
																	"name": "cut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "6933:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6939:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6933:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 837,
															"nodeType": "IfStatement",
															"src": "6929:55:1",
															"trueBody": {
																"id": 836,
																"nodeType": "Block",
																"src": "6942:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 832,
																					"name": "holder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "6965:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 833,
																					"name": "cut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 797,
																					"src": "6973:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 831,
																				"name": "_transferNative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 867,
																				"src": "6949:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6949:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 835,
																		"nodeType": "ExpressionStatement",
																		"src": "6949:28:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6806:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 804,
															"name": "_holders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6810:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6819:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6810:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6806:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"initializationExpression": {
													"assignments": [
														800
													],
													"declarations": [
														{
															"constant": false,
															"id": 800,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6799:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 839,
															"src": "6794:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 799,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6794:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 802,
													"initialValue": {
														"hexValue": "30",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6803:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6794:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6827:3:1",
														"subExpression": {
															"id": 807,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "6827:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 809,
													"nodeType": "ExpressionStatement",
													"src": "6827:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6789:200:1"
											}
										]
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeNative",
									"nameLocation": "6663:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6689:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6681:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6680:16:1"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6706:0:1"
									},
									"scope": 842,
									"src": "6654:339:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 843,
							"src": "1797:5199:1",
							"usedErrors": [],
							"usedEvents": [
								873,
								882,
								888
							]
						}
					],
					"src": "1640:5358:1"
				},
				"id": 1
			},
			"contracts/NativeTransferable.sol": {
				"ast": {
					"absolutePath": "contracts/NativeTransferable.sol",
					"exportedSymbols": {
						"NativeTransferable": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "NativeTransferable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "NativeTransferable",
							"nameLocation": "79:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "179:81:2",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 858,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "205:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 855,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "196:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "188:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 853,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "188:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "188:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "200:4:2",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "188:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "188:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "184:53:2",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "214:23:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "227:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 852,
															"id": 861,
															"nodeType": "Return",
															"src": "220:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 852,
												"id": 865,
												"nodeType": "Return",
												"src": "243:12:2"
											}
										]
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNative",
									"nameLocation": "111:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "135:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "127:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "147:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "139:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:28:2"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "173:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:6:2"
									},
									"scope": 874,
									"src": "102:158:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "88479153c5a43e333375e4daf2e98cddbb4cb43428c64efdab6e987c263b6620",
									"id": 873,
									"name": "NativeTransfer",
									"nameLocation": "271:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "294:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "286:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "305:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:35:2"
									},
									"src": "265:56:2"
								}
							],
							"scope": 875,
							"src": "61:263:2",
							"usedErrors": [],
							"usedEvents": [
								873
							]
						}
					],
					"src": "33:293:2"
				},
				"id": 2
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Ownable",
							"nameLocation": "70:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 878,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "98:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "82:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 877,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 882,
									"name": "OwnershipRenounced",
									"nameLocation": "116:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "151:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "135:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:31:3"
									},
									"src": "110:56:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 888,
									"name": "OwnershipTransferred",
									"nameLocation": "177:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "214:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "198:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "245:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "229:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:57:3"
									},
									"src": "171:84:3"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "274:29:3",
										"statements": [
											{
												"expression": {
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 891,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "279:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 892,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "288:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "292:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "288:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "279:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "279:19:3"
											}
										]
									},
									"id": 897,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:3"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:0:3"
									},
									"scope": 979,
									"src": "260:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "355:23:3",
										"statements": [
											{
												"expression": {
													"id": 902,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 878,
													"src": "367:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 901,
												"id": 903,
												"nodeType": "Return",
												"src": "360:13:3"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "317:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:3"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "346:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:3"
									},
									"scope": 979,
									"src": "308:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "404:34:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 908,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "417:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "417:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "409:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "409:18:3"
											},
											{
												"id": 912,
												"nodeType": "PlaceholderStatement",
												"src": "432:1:3"
											}
										]
									},
									"id": 914,
									"name": "onlyOwner",
									"nameLocation": "392:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:3"
									},
									"src": "383:55:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "489:37:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 919,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "501:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "501:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 921,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "515:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "501:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 918,
												"id": 923,
												"nodeType": "Return",
												"src": "494:27:3"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "452:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:3"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "483:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:6:3"
									},
									"scope": 979,
									"src": "443:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "577:65:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 931,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "606:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 930,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "587:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "EmitStatement",
												"src": "582:31:3"
											},
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 934,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "618:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "627:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 935,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "627:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "627:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "618:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "618:19:3"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 928,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 927,
												"name": "onlyOwner",
												"nameLocations": [
													"567:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "567:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "567:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "540:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:3"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:3"
									},
									"scope": 979,
									"src": "531:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "709:38:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 950,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "733:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "714:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "714:28:3"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyOwner",
												"nameLocations": [
													"699:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 914,
												"src": "699:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "699:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "656:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "682:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "674:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:18:3"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:3"
									},
									"scope": 979,
									"src": "647:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "807:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "820:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "840:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "832:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 961,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "832:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "832:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "820:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "812:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "812:31:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 969,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "874:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "882:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "853:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "EmitStatement",
												"src": "848:43:3"
											},
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "896:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 974,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "905:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "896:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "896:17:3"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "761:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "788:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "780:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:18:3"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:0:3"
									},
									"scope": 979,
									"src": "752:166:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "61:860:3",
							"usedErrors": [],
							"usedEvents": [
								882,
								888
							]
						}
					],
					"src": "33:890:3"
				},
				"id": 3
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1290
						]
					},
					"id": 1291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1290,
							"linearizedBaseContracts": [
								1290
							],
							"name": "SafeMath",
							"nameLocation": "69:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "284:104:4",
										"statements": [
											{
												"id": 1011,
												"nodeType": "UncheckedBlock",
												"src": "289:95:4",
												"statements": [
													{
														"assignments": [
															994
														],
														"declarations": [
															{
																"constant": false,
																"id": 994,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "313:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1011,
																"src": "305:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 993,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "305:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 998,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 995,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "317:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 996,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "321:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "317:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "305:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "332:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1000,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "332:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1006,
														"nodeType": "IfStatement",
														"src": "328:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "347:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "354:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1004,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "346:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 992,
															"id": 1005,
															"nodeType": "Return",
															"src": "339:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "370:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1008,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "376:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1009,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "369:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 992,
														"id": 1010,
														"nodeType": "Return",
														"src": "362:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "82:123:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "217:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "232:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "224:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "243:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "235:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:22:4"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "269:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "275:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:15:4"
									},
									"scope": 1290,
									"src": "208:180:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "599:85:4",
										"statements": [
											{
												"id": 1039,
												"nodeType": "UncheckedBlock",
												"src": "604:76:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "624:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1026,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "628:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "624:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1032,
														"nodeType": "IfStatement",
														"src": "620:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "638:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1024,
															"id": 1031,
															"nodeType": "Return",
															"src": "631:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "662:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1034,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "668:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "672:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1037,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "661:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1024,
														"id": 1038,
														"nodeType": "Return",
														"src": "654:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "393:127:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "532:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "547:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "539:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "558:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "550:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:22:4"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "584:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "590:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:15:4"
									},
									"scope": 1290,
									"src": "523:161:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "897:349:4",
										"statements": [
											{
												"id": 1081,
												"nodeType": "UncheckedBlock",
												"src": "902:340:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "1128:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1133:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1128:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1060,
														"nodeType": "IfStatement",
														"src": "1124:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1144:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1150:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1143:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1052,
															"id": 1059,
															"nodeType": "Return",
															"src": "1136:16:4"
														}
													},
													{
														"assignments": [
															1062
														],
														"declarations": [
															{
																"constant": false,
																"id": 1062,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1166:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 1081,
																"src": "1158:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1061,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1158:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1066,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1063,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "1170:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1064,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "1174:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1170:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1158:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1067,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "1185:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1068,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "1189:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1185:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "1194:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1185:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1076,
														"nodeType": "IfStatement",
														"src": "1181:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1205:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1212:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1204:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1052,
															"id": 1075,
															"nodeType": "Return",
															"src": "1197:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1228:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1078,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "1234:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1079,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1227:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1052,
														"id": 1080,
														"nodeType": "Return",
														"src": "1220:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "689:129:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "830:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "845:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "837:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "856:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "848:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:22:4"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "882:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "888:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:15:4"
									},
									"scope": 1290,
									"src": "821:425:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "1460:86:4",
										"statements": [
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "1465:77:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1485:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1490:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1485:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1102,
														"nodeType": "IfStatement",
														"src": "1481:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1501:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1508:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1500:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1094,
															"id": 1101,
															"nodeType": "Return",
															"src": "1493:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1524:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1104,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "1530:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1105,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "1534:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1530:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1107,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1523:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1094,
														"id": 1108,
														"nodeType": "Return",
														"src": "1516:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1251:130:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1393:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1408:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1400:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1419:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1411:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:22:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1451:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:15:4"
									},
									"scope": 1290,
									"src": "1384:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "1770:86:4",
										"statements": [
											{
												"id": 1137,
												"nodeType": "UncheckedBlock",
												"src": "1775:77:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1795:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1795:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1130,
														"nodeType": "IfStatement",
														"src": "1791:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1811:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1818:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1810:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1122,
															"id": 1129,
															"nodeType": "Return",
															"src": "1803:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1834:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1132,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "1840:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1133,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "1844:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1840:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1135,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1833:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1122,
														"id": 1136,
														"nodeType": "Return",
														"src": "1826:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1551:140:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "1703:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1718:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1710:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1729:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1721:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:22:4"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1755:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1755:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1761:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:15:4"
									},
									"scope": 1290,
									"src": "1694:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "2137:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1149,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "2149:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1150,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2153:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1152,
												"nodeType": "Return",
												"src": "2142:12:4"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "1861:206:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2079:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2091:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2083:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2102:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2094:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:22:4"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2128:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:9:4"
									},
									"scope": 1290,
									"src": "2070:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "2476:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "2488:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2492:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2488:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1167,
												"nodeType": "Return",
												"src": "2481:12:4"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "2164:242:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2418:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2430:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2422:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2441:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2433:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:22:4"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:9:4"
									},
									"scope": 1290,
									"src": "2409:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "2791:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "2803:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1180,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "2807:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1182,
												"nodeType": "Return",
												"src": "2796:12:4"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "2503:218:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2733:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2745:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2737:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2756:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2748:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:22:4"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2782:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:9:4"
									},
									"scope": 1290,
									"src": "2724:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "3148:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3160:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1195,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "3164:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3160:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1193,
												"id": 1197,
												"nodeType": "Return",
												"src": "3153:12:4"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "2818:260:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3090:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3102:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "3094:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3113:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "3105:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:22:4"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "3139:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:9:4"
									},
									"scope": 1290,
									"src": "3081:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "3665:22:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "3677:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "3681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1212,
												"nodeType": "Return",
												"src": "3670:12:4"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "3175:420:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "3607:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3619:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "3611:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3630:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "3622:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3610:22:4"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "3656:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:9:4"
									},
									"scope": 1290,
									"src": "3598:89:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "4219:78:4",
										"statements": [
											{
												"id": 1237,
												"nodeType": "UncheckedBlock",
												"src": "4224:69:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1227,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "4248:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "4253:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4248:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1230,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "4256:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1226,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4240:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4240:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1232,
														"nodeType": "ExpressionStatement",
														"src": "4240:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1233,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "4282:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1234,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "4286:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4282:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1225,
														"id": 1236,
														"nodeType": "Return",
														"src": "4275:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "3692:429:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4133:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4145:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "4137:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4156:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "4148:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4173:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "4159:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:50:4"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "4210:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4209:9:4"
									},
									"scope": 1290,
									"src": "4124:173:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "4851:77:4",
										"statements": [
											{
												"id": 1262,
												"nodeType": "UncheckedBlock",
												"src": "4856:68:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1252,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "4880:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4884:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4880:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1255,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "4887:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1251,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4872:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4872:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1257,
														"nodeType": "ExpressionStatement",
														"src": "4872:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "4913:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "4917:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1250,
														"id": 1261,
														"nodeType": "Return",
														"src": "4906:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "4302:451:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4765:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4777:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4769:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4788:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4780:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4805:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4791:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1245,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4791:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:50:4"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4842:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:9:4"
									},
									"scope": 1290,
									"src": "4756:172:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "5638:77:4",
										"statements": [
											{
												"id": 1287,
												"nodeType": "UncheckedBlock",
												"src": "5643:68:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1277,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "5667:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5671:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5667:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1280,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "5674:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1276,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5659:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1282,
														"nodeType": "ExpressionStatement",
														"src": "5659:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "5700:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "5704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5700:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1275,
														"id": 1286,
														"nodeType": "Return",
														"src": "5693:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "4933:607:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5552:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5564:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "5556:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5556:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5575:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "5567:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5592:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "5578:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5578:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5555:50:4"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "5629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:9:4"
									},
									"scope": 1290,
									"src": "5543:172:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1291,
							"src": "61:5657:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5687:4"
				},
				"id": 4
			}
		}
	}
}