{
	"id": "6a2f11eda034904d1666eda7f81c4b32",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BlastClaimable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\nimport \"./Ownable.sol\";\r\n\r\ninterface IBlast {\r\n\tfunction configureClaimableGas() external;\r\n\r\n\tfunction claimAllGas(address contractAddress, address recipient) external returns (uint256);\r\n}\r\n\r\nabstract contract BlastClaimable is Ownable {\r\n\tIBlast public BLAST;\r\n\tmapping(address => uint256) _lastBlastClaim;\r\n\r\n\tuint256 public _blastClaimInterval = 1 days;\r\n\tuint256 internal _feesClaimed;\r\n\r\n\tfunction claimMyGasFees() external {\r\n\t\taddress recipient = msg.sender;\r\n\t\tuint256 lastClaim = _lastBlastClaim[recipient];\r\n\r\n\t\tif (lastClaim + _blastClaimInterval < block.timestamp) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_lastBlastClaim[recipient] = block.timestamp;\r\n\t\tuint256 claimed = BLAST.claimAllGas(address(this), recipient);\r\n\r\n\t\tif (claimed > 0) {\r\n\t\t\t_feesClaimed += claimed;\r\n\t\t\tblastFeesClaimed(claimed);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setupBlast(address blastAddr) external onlyOwner {\r\n\t\tif (blastAddr == address(0)) {\r\n\t\t\tblastAddr = 0x4300000000000000000000000000000000000002;\r\n\t\t}\r\n\t\tBLAST = IBlast(blastAddr);\r\n\t\tBLAST.configureClaimableGas();\r\n\t}\r\n\r\n\tfunction setBlastClaimInterval(uint256 interval) external onlyOwner {\r\n\t\t_blastClaimInterval = interval;\r\n\t}\r\n\r\n\tfunction blastFeesClaimed(uint256 value) internal virtual;\r\n}\r\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ncontract Ownable {\r\n\taddress private _owner;\r\n\r\n\tevent OwnershipRenounced(address indexed previousOwner);\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor() {\r\n\t\t_owner = msg.sender;\r\n\t}\r\n\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn _owner;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(isOwner());\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction isOwner() public view returns (bool) {\r\n\t\treturn msg.sender == _owner;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public onlyOwner {\r\n\t\temit OwnershipRenounced(_owner);\r\n\t\t_owner = address(0);\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\t_transferOwnership(newOwner);\r\n\t}\r\n\r\n\tfunction _transferOwnership(address newOwner) internal {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(_owner, newOwner);\r\n\t\t_owner = newOwner;\r\n\t}\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/BlastClaimable.sol": {
				"BlastClaimable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLAST",
							"outputs": [
								{
									"internalType": "contract IBlast",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_blastClaimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimMyGasFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBlastClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "blastAddr",
									"type": "address"
								}
							],
							"name": "setupBlast",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BLAST()": "97d75776",
							"_blastClaimInterval()": "4addc0e8",
							"claimMyGasFees()": "23084e5f",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBlastClaimInterval(uint256)": "eaca243b",
							"setupBlast(address)": "f2e809e0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLAST\",\"outputs\":[{\"internalType\":\"contract IBlast\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blastClaimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMyGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBlastClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blastAddr\",\"type\":\"address\"}],\"name\":\"setupBlast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastClaimable.sol\":\"BlastClaimable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "BLAST",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IBlast)15"
							},
							{
								"astId": 24,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_lastBlastClaim",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_blastClaimInterval",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/BlastClaimable.sol:BlastClaimable",
								"label": "_feesClaimed",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IBlast)15": {
								"encoding": "inplace",
								"label": "contract IBlast",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBlast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "claimAllGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "configureClaimableGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimAllGas(address,address)": "954fa5ee",
							"configureClaimableGas()": "4e606c47"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claimAllGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureClaimableGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastClaimable.sol\":\"IBlast\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastClaimable.sol\":{\"keccak256\":\"0x5e96243761ffeec86c67664bb8efc0897d4687b8cc44a7ee3a603b6ecde40be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://557faaad23631be2d37273b7273eccaf6a49876e44bc644fb0a4c0159d7c2c3d\",\"dweb:/ipfs/QmPZq8KPKeQKdHPEkJqtSYTzdCzDgA8FqgeZGqWc75Di1V\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":260:303  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104078061005c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:1:-:0;;;260:43;;;;;;;;;;288:10;279:6;;:19;;;;;;;;;;;;;;;;;;61:860;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_237": {
									"entryPoint": 507,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_184": {
									"entryPoint": 394,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_164": {
									"entryPoint": 355,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_201": {
									"entryPoint": 176,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_213": {
									"entryPoint": 479,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:2",
										"nodeType": "YulBlock",
										"src": "0:1952:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:2",
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nativeSrc": "62:65:2",
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:2",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nativeSrc": "73:54:2",
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nativeSrc": "184:51:2",
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nativeSrc": "194:35:2",
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nativeSrc": "205:24:2",
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:2",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:2",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nativeSrc": "306:53:2",
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nativeSrc": "328:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nativeSrc": "316:37:2",
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nativeSrc": "316:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:2",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:2",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nativeSrc": "463:124:2",
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nativeSrc": "473:26:2",
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:2",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nativeSrc": "481:18:2",
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:2",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nativeSrc": "562:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nativeSrc": "509:71:2",
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nativeSrc": "509:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:2",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:2",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:2",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nativeSrc": "635:48:2",
													"nodeType": "YulBlock",
													"src": "635:48:2",
													"statements": [
														{
															"nativeSrc": "645:32:2",
															"nodeType": "YulAssignment",
															"src": "645:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:2"
																		},
																		"nativeSrc": "663:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:2"
																},
																"nativeSrc": "656:21:2",
																"nodeType": "YulFunctionCall",
																"src": "656:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:2",
														"nodeType": "YulTypedName",
														"src": "617:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:2",
														"nodeType": "YulTypedName",
														"src": "627:7:2",
														"type": ""
													}
												],
												"src": "593:90:2"
											},
											{
												"body": {
													"nativeSrc": "748:50:2",
													"nodeType": "YulBlock",
													"src": "748:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:2"
																		},
																		"nativeSrc": "770:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:2"
																},
																"nativeSrc": "758:34:2",
																"nodeType": "YulFunctionCall",
																"src": "758:34:2"
															},
															"nativeSrc": "758:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:2",
														"nodeType": "YulTypedName",
														"src": "736:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:2",
														"nodeType": "YulTypedName",
														"src": "743:3:2",
														"type": ""
													}
												],
												"src": "689:109:2"
											},
											{
												"body": {
													"nativeSrc": "896:118:2",
													"nodeType": "YulBlock",
													"src": "896:118:2",
													"statements": [
														{
															"nativeSrc": "906:26:2",
															"nodeType": "YulAssignment",
															"src": "906:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:2",
																		"nodeType": "YulLiteral",
																		"src": "929:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:2"
																},
																"nativeSrc": "914:18:2",
																"nodeType": "YulFunctionCall",
																"src": "914:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:2"
																		},
																		"nativeSrc": "989:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:2"
																},
																"nativeSrc": "942:65:2",
																"nodeType": "YulFunctionCall",
																"src": "942:65:2"
															},
															"nativeSrc": "942:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:2",
														"nodeType": "YulTypedName",
														"src": "868:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:2",
														"nodeType": "YulTypedName",
														"src": "880:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:2",
														"nodeType": "YulTypedName",
														"src": "891:4:2",
														"type": ""
													}
												],
												"src": "804:210:2"
											},
											{
												"body": {
													"nativeSrc": "1060:35:2",
													"nodeType": "YulBlock",
													"src": "1060:35:2",
													"statements": [
														{
															"nativeSrc": "1070:19:2",
															"nodeType": "YulAssignment",
															"src": "1070:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:2"
																},
																"nativeSrc": "1080:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:2",
														"nodeType": "YulTypedName",
														"src": "1053:6:2",
														"type": ""
													}
												],
												"src": "1020:75:2"
											},
											{
												"body": {
													"nativeSrc": "1190:28:2",
													"nodeType": "YulBlock",
													"src": "1190:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:2"
																},
																"nativeSrc": "1200:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:2"
															},
															"nativeSrc": "1200:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:2"
											},
											{
												"body": {
													"nativeSrc": "1313:28:2",
													"nodeType": "YulBlock",
													"src": "1313:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:2"
																},
																"nativeSrc": "1323:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:2"
															},
															"nativeSrc": "1323:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:2"
											},
											{
												"body": {
													"nativeSrc": "1390:79:2",
													"nodeType": "YulBlock",
													"src": "1390:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:2",
																"nodeType": "YulBlock",
																"src": "1447:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:2"
																			},
																			"nativeSrc": "1449:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:2"
																		},
																		"nativeSrc": "1449:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:2"
																				},
																				"nativeSrc": "1420:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:2"
																		},
																		"nativeSrc": "1410:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:2"
																},
																"nativeSrc": "1403:43:2",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:2"
															},
															"nativeSrc": "1400:63:2",
															"nodeType": "YulIf",
															"src": "1400:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:2",
														"nodeType": "YulTypedName",
														"src": "1383:5:2",
														"type": ""
													}
												],
												"src": "1347:122:2"
											},
											{
												"body": {
													"nativeSrc": "1527:87:2",
													"nodeType": "YulBlock",
													"src": "1527:87:2",
													"statements": [
														{
															"nativeSrc": "1537:29:2",
															"nodeType": "YulAssignment",
															"src": "1537:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:2"
																},
																"nativeSrc": "1546:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:2"
																},
																"nativeSrc": "1575:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:2"
															},
															"nativeSrc": "1575:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:2",
														"nodeType": "YulTypedName",
														"src": "1505:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:2",
														"nodeType": "YulTypedName",
														"src": "1513:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:2",
														"nodeType": "YulTypedName",
														"src": "1521:5:2",
														"type": ""
													}
												],
												"src": "1475:139:2"
											},
											{
												"body": {
													"nativeSrc": "1686:263:2",
													"nodeType": "YulBlock",
													"src": "1686:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:2",
																"nodeType": "YulBlock",
																"src": "1732:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:2"
																			},
																			"nativeSrc": "1734:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:2"
																		},
																		"nativeSrc": "1734:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:2"
																		},
																		"nativeSrc": "1703:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:2"
																},
																"nativeSrc": "1699:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:2"
															},
															"nativeSrc": "1696:119:2",
															"nodeType": "YulIf",
															"src": "1696:119:2"
														},
														{
															"nativeSrc": "1825:117:2",
															"nodeType": "YulBlock",
															"src": "1825:117:2",
															"statements": [
																{
																	"nativeSrc": "1840:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:2"
																				},
																				"nativeSrc": "1900:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:2"
																		},
																		"nativeSrc": "1879:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:2",
														"nodeType": "YulTypedName",
														"src": "1656:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:2",
														"nodeType": "YulTypedName",
														"src": "1667:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:2",
														"nodeType": "YulTypedName",
														"src": "1679:6:2",
														"type": ""
													}
												],
												"src": "1620:329:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:111;;;:::i;:::-;;308:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;531:111;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;308:70::-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;443:83::-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;647:100::-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;752:166::-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206200",
								"executionCost": "24514",
								"totalCost": "230714"
							},
							"external": {
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferOwnership(address)": "27997"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "8F32D59B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastClaimable.sol",
								"contracts/Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BlastClaimable.sol": {
				"ast": {
					"absolutePath": "contracts/BlastClaimable.sol",
					"exportedSymbols": {
						"BlastClaimable": [
							133
						],
						"IBlast": [
							15
						],
						"Ownable": [
							238
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 134,
							"sourceUnit": 239,
							"src": "59:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBlast",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "IBlast",
							"nameLocation": "96:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4e606c47",
									"id": 5,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureClaimableGas",
									"nameLocation": "116:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:0:0"
									},
									"scope": 15,
									"src": "107:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "954fa5ee",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAllGas",
									"nameLocation": "163:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "183:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "175:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "208:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "200:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:44:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "237:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:0"
									},
									"scope": 15,
									"src": "154:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "86:163:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 16,
										"name": "Ownable",
										"nameLocations": [
											"289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 238,
										"src": "289:7:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:0"
								}
							],
							"canonicalName": "BlastClaimable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133,
								238
							],
							"name": "BlastClaimable",
							"nameLocation": "271:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "97d75776",
									"id": 20,
									"mutability": "mutable",
									"name": "BLAST",
									"nameLocation": "315:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "301:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBlast_$15",
										"typeString": "contract IBlast"
									},
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "IBlast",
											"nameLocations": [
												"301:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 15,
											"src": "301:6:0"
										},
										"referencedDeclaration": 15,
										"src": "301:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBlast_$15",
											"typeString": "contract IBlast"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_lastBlastClaim",
									"nameLocation": "352:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "324:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "324:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "343:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4addc0e8",
									"id": 27,
									"mutability": "mutable",
									"name": "_blastClaimInterval",
									"nameLocation": "388:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "373:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "410:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_feesClaimed",
									"nameLocation": "437:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 133,
									"src": "420:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "420:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "490:376:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "recipient",
														"nameLocation": "503:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "495:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 32,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "495:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"expression": {
														"id": 34,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "515:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "519:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "515:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "495:30:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "lastClaim",
														"nameLocation": "538:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "530:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"baseExpression": {
														"id": 39,
														"name": "_lastBlastClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "550:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 41,
													"indexExpression": {
														"id": 40,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "550:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "530:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 43,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "587:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 44,
															"name": "_blastClaimInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "599:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "587:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 46,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "621:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "627:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "621:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "587:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "583:73:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "638:18:0",
													"statements": [
														{
															"functionReturnParameters": 31,
															"id": 49,
															"nodeType": "Return",
															"src": "644:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 52,
															"name": "_lastBlastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "662:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 54,
														"indexExpression": {
															"id": 53,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "678:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "662:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 55,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "697:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "691:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "662:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "662:44:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "claimed",
														"nameLocation": "719:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 83,
														"src": "711:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 65,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "755:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BlastClaimable_$133",
																		"typeString": "contract BlastClaimable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BlastClaimable_$133",
																		"typeString": "contract BlastClaimable"
																	}
																],
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "747:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 63,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "747:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 67,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "762:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 61,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "729:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$15",
																"typeString": "contract IBlast"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "735:11:0",
														"memberName": "claimAllGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "729:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) external returns (uint256)"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "711:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "793:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "783:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "779:83:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "796:66:0",
													"statements": [
														{
															"expression": {
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 73,
																	"name": "_feesClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "802:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 74,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "802:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "802:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 78,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "848:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 77,
																	"name": "blastFeesClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "831:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "831:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "831:25:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "23084e5f",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimMyGasFees",
									"nameLocation": "464:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "478:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:0:0"
									},
									"scope": 133,
									"src": "455:411:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "929:168:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "blastAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "938:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "951:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 92,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "951:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "951:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "938:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "IfStatement",
												"src": "934:95:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "963:66:0",
													"statements": [
														{
															"expression": {
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 97,
																	"name": "blastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "969:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "307834333030303030303030303030303030303030303030303030303030303030303030303030303032",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x4300000000000000000000000000000000000002"
																},
																"src": "969:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 100,
															"nodeType": "ExpressionStatement",
															"src": "969:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "BLAST",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1033:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlast_$15",
															"typeString": "contract IBlast"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 105,
																"name": "blastAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1048:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 104,
															"name": "IBlast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBlast_$15_$",
																"typeString": "type(contract IBlast)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1041:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBlast_$15",
															"typeString": "contract IBlast"
														}
													},
													"src": "1033:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBlast_$15",
														"typeString": "contract IBlast"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1033:25:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 109,
															"name": "BLAST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBlast_$15",
																"typeString": "contract IBlast"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1069:21:0",
														"memberName": "configureClaimableGas",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1063:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1063:29:0"
											}
										]
									},
									"functionSelector": "f2e809e0",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 89,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "onlyOwner",
												"nameLocations": [
													"919:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 173,
												"src": "919:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:9:0"
										}
									],
									"name": "setupBlast",
									"nameLocation": "880:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "blastAddr",
												"nameLocation": "899:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "891:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:19:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:0"
									},
									"scope": 133,
									"src": "871:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1170:40:0",
										"statements": [
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 122,
														"name": "_blastClaimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1175:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 123,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1175:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1175:30:0"
											}
										]
									},
									"functionSelector": "eaca243b",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "onlyOwner",
												"nameLocations": [
													"1160:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 173,
												"src": "1160:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1160:9:0"
										}
									],
									"name": "setBlastClaimInterval",
									"nameLocation": "1111:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "1141:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1133:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:18:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1170:0:0"
									},
									"scope": 133,
									"src": "1102:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blastFeesClaimed",
									"nameLocation": "1224:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:15:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:0"
									},
									"scope": 133,
									"src": "1215:58:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 134,
							"src": "253:1023:0",
							"usedErrors": [],
							"usedEvents": [
								141,
								147
							]
						}
					],
					"src": "33:1245:0"
				},
				"id": 0
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							238
						]
					},
					"id": 239,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238
							],
							"name": "Ownable",
							"nameLocation": "70:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "98:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "82:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 136,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 141,
									"name": "OwnershipRenounced",
									"nameLocation": "116:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "151:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "135:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:31:1"
									},
									"src": "110:56:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 147,
									"name": "OwnershipTransferred",
									"nameLocation": "177:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "214:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "198:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "245:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "229:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:57:1"
									},
									"src": "171:84:1"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "274:29:1",
										"statements": [
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "279:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 151,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "288:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "292:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "288:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "279:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "279:19:1"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:0:1"
									},
									"scope": 238,
									"src": "260:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "355:23:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "367:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "360:13:1"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "317:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "346:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:1"
									},
									"scope": 238,
									"src": "308:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "404:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 167,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "417:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "417:9:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "409:18:1"
											},
											{
												"id": 171,
												"nodeType": "PlaceholderStatement",
												"src": "432:1:1"
											}
										]
									},
									"id": 173,
									"name": "onlyOwner",
									"nameLocation": "392:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:1"
									},
									"src": "383:55:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "489:37:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 178,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "501:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "501:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 180,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "515:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "501:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 177,
												"id": 182,
												"nodeType": "Return",
												"src": "494:27:1"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "452:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "483:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:6:1"
									},
									"scope": 238,
									"src": "443:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "577:65:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 190,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "587:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "EmitStatement",
												"src": "582:31:1"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "618:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "627:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 194,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "627:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "627:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "618:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "618:19:1"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyOwner",
												"nameLocations": [
													"567:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 173,
												"src": "567:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "567:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "540:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:1"
									},
									"scope": 238,
									"src": "531:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "709:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 209,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "733:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 208,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "714:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "714:28:1"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 205,
												"name": "onlyOwner",
												"nameLocations": [
													"699:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 173,
												"src": "699:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "699:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "656:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "682:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "674:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:18:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:1"
									},
									"scope": 238,
									"src": "647:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "807:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "820:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "840:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "832:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 220,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "832:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "832:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "820:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "812:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "812:31:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 228,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "874:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "882:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 227,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "853:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "EmitStatement",
												"src": "848:43:1"
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "896:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 233,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "905:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "896:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "896:17:1"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "761:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "788:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "780:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:18:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:0:1"
									},
									"scope": 238,
									"src": "752:166:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 239,
							"src": "61:860:1",
							"usedErrors": [],
							"usedEvents": [
								141,
								147
							]
						}
					],
					"src": "33:890:1"
				},
				"id": 1
			}
		}
	}
}