{
	"id": "cf027cdf9a87aee48d8c45931ac984be",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BlastFurnace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n/*\r\n\r\n    ,---,.   ,--,                             ___                ,---,.\r\n  ,'  .'  \\,--.'|                           ,--.'|_            ,'  .' |\r\n,---.' .' ||  | :                           |  | :,'         ,---.'   |         ,--,  __  ,-.      ,---,\r\n|   |  |: |:  : '                 .--.--.   :  : ' :         |   |   .'       ,'_ /|,' ,'/ /|  ,-+-. /  |\r\n:   :  :  /|  ' |     ,--.--.    /  /    '.;__,'  /          :   :  :    .--. |  | :'  | |' | ,--.'|'   |  ,--.--.     ,---.     ,---.\r\n:   |    ; '  | |    /       \\  |  :  /`./|  |   |           :   |  |-,,'_ /| :  . ||  |   ,'|   |  ,\"' | /       \\   /     \\   /     \\\r\n|   :     \\|  | :   .--.  .-. | |  :  ;_  :__,'| :           |   :  ;/||  ' | |  . .'  :  /  |   | /  | |.--.  .-. | /    / '  /    /  |\r\n|   |   . |'  : |__  \\__\\/: . .  \\  \\    `. '  : |__         |   |   .'|  | ' |  | ||  | '   |   | |  | | \\__\\/: . ..    ' /  .    ' / |\r\n'   :  '; ||  | '.'| ,\" .--.; |   `----.   \\|  | '.'|        '   :  '  :  | : ;  ; |;  : |   |   | |  |/  ,\" .--.; |'   ; :__ '   ;   /|\r\n|   |  | ; ;  :    ;/  /  ,.  |  /  /`--'  /;  :    ;        |   |  |  '  :  `--'   \\  , ;   |   | |--'  /  /  ,.  |'   | '.'|'   |  / |\r\n|   :   /  |  ,   /;  :   .'   \\'--'.     / |  ,   /         |   :  \\  :  ,      .-./---'    |   |/     ;  :   .'   \\   :    :|   :    |\r\n|   | ,'    ---`-' |  ,     .-./  `--'---'   ---`-'          |   | ,'   `--`----'            '---'      |  ,     .-./\\   \\  /  \\   \\  /\r\n`----'              `--`---'                                 `----'                                      `--`---'     `----'    `----'\r\n*/\r\n\r\npragma solidity ^0.8.24;\r\nimport \"./Ownable.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n\tfunction _msgSender() internal view virtual returns (address) {\r\n\t\treturn msg.sender;\r\n\t}\r\n\r\n\tfunction _msgData() internal view virtual returns (bytes calldata) {\r\n\t\treturn msg.data;\r\n\t}\r\n}\r\n\r\ncontract BlastFurnace is Context, Ownable {\r\n\tusing SafeMath for uint256;\r\n\r\n\tuint256 private EGGS_TO_HATCH_1MINERS = 1080000; //for final version should be seconds in a day\r\n\tuint256 private PSN = 10000;\r\n\tuint256 private PSNH = 5000;\r\n\tuint256 private devFeeVal = 3;\r\n\tbool private initialized = false;\r\n\taddress payable private recAdd;\r\n\tmapping(address => uint256) private hatcheryMiners;\r\n\tmapping(address => uint256) private claimedEggs;\r\n\tmapping(address => uint256) private lastHatch;\r\n\tmapping(address => address) private referrals;\r\n\tuint256 private marketEggs;\r\n\r\n\tconstructor() {\r\n\t\trecAdd = payable(msg.sender);\r\n\t}\r\n\r\n\tfunction hatchEggs(address ref) public {\r\n\t\trequire(initialized);\r\n\r\n\t\tif (ref == msg.sender) {\r\n\t\t\tref = address(0);\r\n\t\t}\r\n\r\n\t\tif (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {\r\n\t\t\treferrals[msg.sender] = ref;\r\n\t\t}\r\n\r\n\t\tuint256 eggsUsed = getMyEggs(msg.sender);\r\n\t\tuint256 newMiners = SafeMath.div(eggsUsed, EGGS_TO_HATCH_1MINERS);\r\n\t\thatcheryMiners[msg.sender] = SafeMath.add(hatcheryMiners[msg.sender], newMiners);\r\n\t\tclaimedEggs[msg.sender] = 0;\r\n\t\tlastHatch[msg.sender] = block.timestamp;\r\n\r\n\t\t//send referral eggs\r\n\t\tclaimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 8));\r\n\r\n\t\t//boost market to nerf miners hoarding\r\n\t\tmarketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 5));\r\n\t}\r\n\r\n\tfunction sellEggs() public {\r\n\t\trequire(initialized);\r\n\t\tuint256 hasEggs = getMyEggs(msg.sender);\r\n\t\tuint256 eggValue = calculateEggSell(hasEggs);\r\n\t\tuint256 fee = devFee(eggValue);\r\n\t\tclaimedEggs[msg.sender] = 0;\r\n\t\tlastHatch[msg.sender] = block.timestamp;\r\n\t\tmarketEggs = SafeMath.add(marketEggs, hasEggs);\r\n\t\trecAdd.transfer(fee);\r\n\t\tpayable(msg.sender).transfer(SafeMath.sub(eggValue, fee));\r\n\t}\r\n\r\n\tfunction furnaceRewards(address adr) public view returns (uint256) {\r\n\t\tuint256 hasEggs = getMyEggs(adr);\r\n\t\tuint256 eggValue = calculateEggSell(hasEggs);\r\n\t\treturn eggValue;\r\n\t}\r\n\r\n\tfunction buyEggs(address ref) public payable {\r\n\t\trequire(initialized);\r\n\t\tuint256 eggsBought = calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value));\r\n\t\teggsBought = SafeMath.sub(eggsBought, devFee(eggsBought));\r\n\t\tuint256 fee = devFee(msg.value);\r\n\t\trecAdd.transfer(fee);\r\n\t\tclaimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender], eggsBought);\r\n\t\thatchEggs(ref);\r\n\t}\r\n\r\n\tfunction calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {\r\n\t\treturn SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)));\r\n\t}\r\n\r\n\tfunction calculateEggSell(uint256 eggs) public view returns (uint256) {\r\n\t\treturn calculateTrade(eggs, marketEggs, address(this).balance);\r\n\t}\r\n\r\n\tfunction calculateEggBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {\r\n\t\treturn calculateTrade(eth, contractBalance, marketEggs);\r\n\t}\r\n\r\n\tfunction calculateEggBuySimple(uint256 eth) public view returns (uint256) {\r\n\t\treturn calculateEggBuy(eth, address(this).balance);\r\n\t}\r\n\r\n\tfunction devFee(uint256 amount) private view returns (uint256) {\r\n\t\treturn SafeMath.div(SafeMath.mul(amount, devFeeVal), 100);\r\n\t}\r\n\r\n\tfunction seedMarket() public payable onlyOwner {\r\n\t\trequire(marketEggs == 0);\r\n\t\tinitialized = true;\r\n\t\tmarketEggs = 108000000000;\r\n\t}\r\n\r\n\tfunction getBalance() public view returns (uint256) {\r\n\t\treturn address(this).balance;\r\n\t}\r\n\r\n\tfunction getMyMiners(address adr) public view returns (uint256) {\r\n\t\treturn hatcheryMiners[adr];\r\n\t}\r\n\r\n\tfunction getMyEggs(address adr) public view returns (uint256) {\r\n\t\treturn SafeMath.add(claimedEggs[adr], getEggsSinceLastHatch(adr));\r\n\t}\r\n\r\n\tfunction getEggsSinceLastHatch(address adr) public view returns (uint256) {\r\n\t\tuint256 secondsPassed = min(EGGS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr]));\r\n\t\treturn SafeMath.mul(secondsPassed, hatcheryMiners[adr]);\r\n\t}\r\n\r\n\tfunction min(uint256 a, uint256 b) private pure returns (uint256) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n}\r\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nlibrary SafeMath {\r\n\t/**\r\n\t * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tuint256 c = a + b;\r\n\t\t\tif (c < a) return (false, 0);\r\n\t\t\treturn (true, c);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b > a) return (false, 0);\r\n\t\t\treturn (true, a - b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\t// Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n\t\t\t// benefit is lost if 'b' is also tested.\r\n\t\t\t// See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n\t\t\tif (a == 0) return (true, 0);\r\n\t\t\tuint256 c = a * b;\r\n\t\t\tif (c / a != b) return (false, 0);\r\n\t\t\treturn (true, c);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b == 0) return (false, 0);\r\n\t\t\treturn (true, a / b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n\t *\r\n\t * _Available since v3.4._\r\n\t */\r\n\tfunction tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n\t\tunchecked {\r\n\t\t\tif (b == 0) return (false, 0);\r\n\t\t\treturn (true, a % b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the addition of two unsigned integers, reverting on\r\n\t * overflow.\r\n\t *\r\n\t * Counterpart to Solidity's `+` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Addition cannot overflow.\r\n\t */\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a + b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the subtraction of two unsigned integers, reverting on\r\n\t * overflow (when the result is negative).\r\n\t *\r\n\t * Counterpart to Solidity's `-` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Subtraction cannot overflow.\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the multiplication of two unsigned integers, reverting on\r\n\t * overflow.\r\n\t *\r\n\t * Counterpart to Solidity's `*` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Multiplication cannot overflow.\r\n\t */\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a * b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the integer division of two unsigned integers, reverting on\r\n\t * division by zero. The result is rounded towards zero.\r\n\t *\r\n\t * Counterpart to Solidity's `/` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n\t * reverting when dividing by zero.\r\n\t *\r\n\t * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n\t * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n\t * invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a % b;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n\t * overflow (when the result is negative).\r\n\t *\r\n\t * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n\t * message unnecessarily. For custom revert reasons use {trySub}.\r\n\t *\r\n\t * Counterpart to Solidity's `-` operator.\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - Subtraction cannot overflow.\r\n\t */\r\n\tfunction sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b <= a, errorMessage);\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n\t * division by zero. The result is rounded towards zero.\r\n\t *\r\n\t * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n\t * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n\t * uses an invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b > 0, errorMessage);\r\n\t\t\treturn a / b;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n\t * reverting with custom message when dividing by zero.\r\n\t *\r\n\t * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n\t * message unnecessarily. For custom revert reasons use {tryMod}.\r\n\t *\r\n\t * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n\t * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n\t * invalid opcode to revert (consuming all remaining gas).\r\n\t *\r\n\t * Requirements:\r\n\t *\r\n\t * - The divisor cannot be zero.\r\n\t */\r\n\tfunction mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tunchecked {\r\n\t\t\trequire(b > 0, errorMessage);\r\n\t\t\treturn a % b;\r\n\t\t}\r\n\t}\r\n}\r\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\ncontract Ownable {\r\n\taddress private _owner;\r\n\r\n\tevent OwnershipRenounced(address indexed previousOwner);\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor() {\r\n\t\t_owner = msg.sender;\r\n\t}\r\n\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn _owner;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(isOwner());\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction isOwner() public view returns (bool) {\r\n\t\treturn msg.sender == _owner;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public onlyOwner {\r\n\t\temit OwnershipRenounced(_owner);\r\n\t\t_owner = address(0);\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\t_transferOwnership(newOwner);\r\n\t}\r\n\r\n\tfunction _transferOwnership(address newOwner) internal {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(_owner, newOwner);\r\n\t\t_owner = newOwner;\r\n\t}\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/BlastFurnace.sol": {
				"BlastFurnace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								}
							],
							"name": "buyEggs",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractBalance",
									"type": "uint256"
								}
							],
							"name": "calculateEggBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "calculateEggBuySimple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eggs",
									"type": "uint256"
								}
							],
							"name": "calculateEggSell",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "furnaceRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getEggsSinceLastHatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getMyEggs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getMyMiners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								}
							],
							"name": "hatchEggs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seedMarket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellEggs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BlastFurnace.sol\":2459:6528  contract BlastFurnace is Context, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BlastFurnace.sol\":2577:2584  1080000 */\n  0x107ac0\n    /* \"contracts/BlastFurnace.sol\":2537:2584  uint256 private EGGS_TO_HATCH_1MINERS = 1080000 */\n  0x01\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2657:2662  10000 */\n  0x2710\n    /* \"contracts/BlastFurnace.sol\":2635:2662  uint256 private PSN = 10000 */\n  0x02\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2689:2693  5000 */\n  0x1388\n    /* \"contracts/BlastFurnace.sol\":2666:2693  uint256 private PSNH = 5000 */\n  0x03\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2725:2726  3 */\n  0x03\n    /* \"contracts/BlastFurnace.sol\":2697:2726  uint256 private devFeeVal = 3 */\n  0x04\n  sstore\n    /* \"contracts/BlastFurnace.sol\":2757:2762  false */\n  0x00\n    /* \"contracts/BlastFurnace.sol\":2730:2762  bool private initialized = false */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":3035:3087  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":3071:3081  msg.sender */\n  caller\n    /* \"contracts/BlastFurnace.sol\":3054:3060  recAdd */\n  0x05\n  0x01\n    /* \"contracts/BlastFurnace.sol\":3054:3082  recAdd = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BlastFurnace.sol\":2459:6528  contract BlastFurnace is Context, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BlastFurnace.sol\":2459:6528  contract BlastFurnace is Context, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x8f32d59b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd7c8843b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdb663865\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7e56fde5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8e316327\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x3c5f07cb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x3c5f07cb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ec862a8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x450c9d7d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4b634b06\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x26fd8422\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2ef6a743\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3955f0fe\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BlastFurnace.sol\":5841:5931  function getBalance() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5265:5423  function calculateEggBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":6041:6178  function getMyEggs(address adr) public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":3882:4281  function sellEggs() public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5702:5836  function seedMarket() public payable onlyOwner {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/BlastFurnace.sol\":3092:3877  function hatchEggs(address ref) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BlastFurnace.sol\":4286:4464  function furnaceRewards(address adr) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5936:6036  function getMyMiners(address adr) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5428:5562  function calculateEggBuySimple(uint256 eth) public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":5118:5260  function calculateEggSell(uint256 eggs) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":6183:6424  function getEggsSinceLastHatch(address adr) public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlastFurnace.sol\":4469:4866  function buyEggs(address ref) public payable {... */\n    tag_16:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/BlastFurnace.sol\":5841:5931  function getBalance() public view returns (uint256) {... */\n    tag_23:\n        /* \"contracts/BlastFurnace.sol\":5884:5891  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5905:5926  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5898:5926  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5841:5931  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5265:5423  function calculateEggBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n    tag_30:\n        /* \"contracts/BlastFurnace.sol\":5349:5356  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5370:5418  calculateTrade(eth, contractBalance, marketEggs) */\n      tag_95\n        /* \"contracts/BlastFurnace.sol\":5385:5388  eth */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5390:5405  contractBalance */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5407:5417  marketEggs */\n      sload(0x0a)\n        /* \"contracts/BlastFurnace.sol\":5370:5384  calculateTrade */\n      tag_96\n        /* \"contracts/BlastFurnace.sol\":5370:5418  calculateTrade(eth, contractBalance, marketEggs) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/BlastFurnace.sol\":5363:5418  return calculateTrade(eth, contractBalance, marketEggs) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5265:5423  function calculateEggBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6041:6178  function getMyEggs(address adr) public view returns (uint256) {... */\n    tag_36:\n        /* \"contracts/BlastFurnace.sol\":6094:6101  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6115:6173  SafeMath.add(claimedEggs[adr], getEggsSinceLastHatch(adr)) */\n      tag_98\n        /* \"contracts/BlastFurnace.sol\":6128:6139  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":6128:6144  claimedEggs[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6140:6143  adr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6128:6144  claimedEggs[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6146:6172  getEggsSinceLastHatch(adr) */\n      tag_99\n        /* \"contracts/BlastFurnace.sol\":6168:6171  adr */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":6146:6167  getEggsSinceLastHatch */\n      tag_84\n        /* \"contracts/BlastFurnace.sol\":6146:6172  getEggsSinceLastHatch(adr) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/BlastFurnace.sol\":6115:6127  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":6115:6173  SafeMath.add(claimedEggs[adr], getEggsSinceLastHatch(adr)) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BlastFurnace.sol\":6108:6173  return SafeMath.add(claimedEggs[adr], getEggsSinceLastHatch(adr)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6041:6178  function getMyEggs(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":3882:4281  function sellEggs() public {... */\n    tag_40:\n        /* \"contracts/BlastFurnace.sol\":3922:3933  initialized */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":3914:3934  require(initialized) */\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n        /* \"contracts/BlastFurnace.sol\":3939:3954  uint256 hasEggs */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3957:3978  getMyEggs(msg.sender) */\n      tag_103\n        /* \"contracts/BlastFurnace.sol\":3967:3977  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3957:3966  getMyEggs */\n      tag_36\n        /* \"contracts/BlastFurnace.sol\":3957:3978  getMyEggs(msg.sender) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/BlastFurnace.sol\":3939:3978  uint256 hasEggs = getMyEggs(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3983:3999  uint256 eggValue */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4002:4027  calculateEggSell(hasEggs) */\n      tag_104\n        /* \"contracts/BlastFurnace.sol\":4019:4026  hasEggs */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4002:4018  calculateEggSell */\n      tag_74\n        /* \"contracts/BlastFurnace.sol\":4002:4027  calculateEggSell(hasEggs) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/BlastFurnace.sol\":3983:4027  uint256 eggValue = calculateEggSell(hasEggs) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4032:4043  uint256 fee */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4046:4062  devFee(eggValue) */\n      tag_105\n        /* \"contracts/BlastFurnace.sol\":4053:4061  eggValue */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4046:4052  devFee */\n      tag_106\n        /* \"contracts/BlastFurnace.sol\":4046:4062  devFee(eggValue) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/BlastFurnace.sol\":4032:4062  uint256 fee = devFee(eggValue) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4093:4094  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4067:4078  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":4067:4090  claimedEggs[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4079:4089  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4067:4090  claimedEggs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":4067:4094  claimedEggs[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4123:4138  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":4099:4108  lastHatch */\n      0x08\n        /* \"contracts/BlastFurnace.sol\":4099:4120  lastHatch[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4109:4119  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4099:4120  lastHatch[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":4099:4138  lastHatch[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4156:4189  SafeMath.add(marketEggs, hasEggs) */\n      tag_107\n        /* \"contracts/BlastFurnace.sol\":4169:4179  marketEggs */\n      sload(0x0a)\n        /* \"contracts/BlastFurnace.sol\":4181:4188  hasEggs */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4156:4168  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":4156:4189  SafeMath.add(marketEggs, hasEggs) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/BlastFurnace.sol\":4143:4153  marketEggs */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":4143:4189  marketEggs = SafeMath.add(marketEggs, hasEggs) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4194:4200  recAdd */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4194:4209  recAdd.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4194:4214  recAdd.transfer(fee) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4210:4213  fee */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4194:4214  recAdd.transfer(fee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n        /* \"contracts/BlastFurnace.sol\":4227:4237  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4219:4247  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4219:4276  payable(msg.sender).transfer(SafeMath.sub(eggValue, fee)) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4248:4275  SafeMath.sub(eggValue, fee) */\n      tag_110\n        /* \"contracts/BlastFurnace.sol\":4261:4269  eggValue */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4271:4274  fee */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4248:4260  SafeMath.sub */\n      tag_111\n        /* \"contracts/BlastFurnace.sol\":4248:4275  SafeMath.sub(eggValue, fee) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/BlastFurnace.sol\":4219:4276  payable(msg.sender).transfer(SafeMath.sub(eggValue, fee)) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n        /* \"contracts/BlastFurnace.sol\":3909:4281  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":3882:4281  function sellEggs() public {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5702:5836  function seedMarket() public payable onlyOwner {... */\n    tag_42:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_115\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_78\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n        /* \"contracts/BlastFurnace.sol\":5776:5777  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5762:5772  marketEggs */\n      sload(0x0a)\n        /* \"contracts/BlastFurnace.sol\":5762:5777  marketEggs == 0 */\n      eq\n        /* \"contracts/BlastFurnace.sol\":5754:5778  require(marketEggs == 0) */\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n        /* \"contracts/BlastFurnace.sol\":5797:5801  true */\n      0x01\n        /* \"contracts/BlastFurnace.sol\":5783:5794  initialized */\n      0x05\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5783:5801  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":5819:5831  108000000000 */\n      0x19254d3800\n        /* \"contracts/BlastFurnace.sol\":5806:5816  marketEggs */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":5806:5831  marketEggs = 108000000000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":5702:5836  function seedMarket() public payable onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":3092:3877  function hatchEggs(address ref) public {... */\n    tag_46:\n        /* \"contracts/BlastFurnace.sol\":3144:3155  initialized */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":3136:3156  require(initialized) */\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n        /* \"contracts/BlastFurnace.sol\":3174:3184  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3167:3184  ref == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3167:3170  ref */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":3167:3184  ref == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BlastFurnace.sol\":3163:3214  if (ref == msg.sender) {... */\n      tag_121\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3206:3207  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3192:3208  ref = address(0) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3163:3214  if (ref == msg.sender) {... */\n    tag_121:\n        /* \"contracts/BlastFurnace.sol\":3257:3258  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3224:3259  referrals[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3224:3233  referrals */\n      0x09\n        /* \"contracts/BlastFurnace.sol\":3224:3245  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3234:3244  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3224:3245  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3224:3259  referrals[msg.sender] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BlastFurnace.sol\":3224:3298  referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/BlastFurnace.sol\":3288:3298  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3263:3298  referrals[msg.sender] != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3263:3272  referrals */\n      0x09\n        /* \"contracts/BlastFurnace.sol\":3263:3284  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3273:3283  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3263:3284  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3263:3298  referrals[msg.sender] != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BlastFurnace.sol\":3224:3298  referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender */\n    tag_122:\n        /* \"contracts/BlastFurnace.sol\":3220:3339  if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":3330:3333  ref */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":3306:3315  referrals */\n      0x09\n        /* \"contracts/BlastFurnace.sol\":3306:3327  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3316:3326  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3306:3327  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3306:3333  referrals[msg.sender] = ref */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3220:3339  if (referrals[msg.sender] == address(0) && referrals[msg.sender] != msg.sender) {... */\n    tag_123:\n        /* \"contracts/BlastFurnace.sol\":3345:3361  uint256 eggsUsed */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3364:3385  getMyEggs(msg.sender) */\n      tag_124\n        /* \"contracts/BlastFurnace.sol\":3374:3384  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3364:3373  getMyEggs */\n      tag_36\n        /* \"contracts/BlastFurnace.sol\":3364:3385  getMyEggs(msg.sender) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/BlastFurnace.sol\":3345:3385  uint256 eggsUsed = getMyEggs(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3390:3407  uint256 newMiners */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3410:3455  SafeMath.div(eggsUsed, EGGS_TO_HATCH_1MINERS) */\n      tag_125\n        /* \"contracts/BlastFurnace.sol\":3423:3431  eggsUsed */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3433:3454  EGGS_TO_HATCH_1MINERS */\n      sload(0x01)\n        /* \"contracts/BlastFurnace.sol\":3410:3422  SafeMath.div */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":3410:3455  SafeMath.div(eggsUsed, EGGS_TO_HATCH_1MINERS) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/BlastFurnace.sol\":3390:3455  uint256 newMiners = SafeMath.div(eggsUsed, EGGS_TO_HATCH_1MINERS) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":3489:3540  SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      tag_127\n        /* \"contracts/BlastFurnace.sol\":3502:3516  hatcheryMiners */\n      0x06\n        /* \"contracts/BlastFurnace.sol\":3502:3528  hatcheryMiners[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3517:3527  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3502:3528  hatcheryMiners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":3530:3539  newMiners */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":3489:3501  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":3489:3540  SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/BlastFurnace.sol\":3460:3474  hatcheryMiners */\n      0x06\n        /* \"contracts/BlastFurnace.sol\":3460:3486  hatcheryMiners[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3475:3485  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3460:3486  hatcheryMiners[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3460:3540  hatcheryMiners[msg.sender] = SafeMath.add(hatcheryMiners[msg.sender], newMiners) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3571:3572  0 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3545:3556  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":3545:3568  claimedEggs[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3557:3567  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3545:3568  claimedEggs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3545:3572  claimedEggs[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3601:3616  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":3577:3586  lastHatch */\n      0x08\n        /* \"contracts/BlastFurnace.sol\":3577:3598  lastHatch[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3587:3597  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3577:3598  lastHatch[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3577:3616  lastHatch[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3684:3759  SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 8)) */\n      tag_128\n        /* \"contracts/BlastFurnace.sol\":3697:3708  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":3697:3731  claimedEggs[referrals[msg.sender]] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3709:3718  referrals */\n      0x09\n        /* \"contracts/BlastFurnace.sol\":3709:3730  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3719:3729  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3709:3730  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3697:3731  claimedEggs[referrals[msg.sender]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":3733:3758  SafeMath.div(eggsUsed, 8) */\n      tag_129\n        /* \"contracts/BlastFurnace.sol\":3746:3754  eggsUsed */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":3756:3757  8 */\n      0x08\n        /* \"contracts/BlastFurnace.sol\":3733:3745  SafeMath.div */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":3733:3758  SafeMath.div(eggsUsed, 8) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/BlastFurnace.sol\":3684:3696  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":3684:3759  SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 8)) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BlastFurnace.sol\":3647:3658  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":3647:3681  claimedEggs[referrals[msg.sender]] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3659:3668  referrals */\n      0x09\n        /* \"contracts/BlastFurnace.sol\":3659:3680  referrals[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":3669:3679  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":3659:3680  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":3647:3681  claimedEggs[referrals[msg.sender]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":3647:3759  claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 8)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3821:3872  SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 5)) */\n      tag_130\n        /* \"contracts/BlastFurnace.sol\":3834:3844  marketEggs */\n      sload(0x0a)\n        /* \"contracts/BlastFurnace.sol\":3846:3871  SafeMath.div(eggsUsed, 5) */\n      tag_131\n        /* \"contracts/BlastFurnace.sol\":3859:3867  eggsUsed */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":3869:3870  5 */\n      0x05\n        /* \"contracts/BlastFurnace.sol\":3846:3858  SafeMath.div */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":3846:3871  SafeMath.div(eggsUsed, 5) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/BlastFurnace.sol\":3821:3833  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":3821:3872  SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 5)) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/BlastFurnace.sol\":3808:3818  marketEggs */\n      0x0a\n        /* \"contracts/BlastFurnace.sol\":3808:3872  marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 5)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":3131:3877  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":3092:3877  function hatchEggs(address ref) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4286:4464  function furnaceRewards(address adr) public view returns (uint256) {... */\n    tag_50:\n        /* \"contracts/BlastFurnace.sol\":4344:4351  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4358:4373  uint256 hasEggs */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":4376:4390  getMyEggs(adr) */\n      tag_133\n        /* \"contracts/BlastFurnace.sol\":4386:4389  adr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4376:4385  getMyEggs */\n      tag_36\n        /* \"contracts/BlastFurnace.sol\":4376:4390  getMyEggs(adr) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/BlastFurnace.sol\":4358:4390  uint256 hasEggs = getMyEggs(adr) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4395:4411  uint256 eggValue */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4414:4439  calculateEggSell(hasEggs) */\n      tag_134\n        /* \"contracts/BlastFurnace.sol\":4431:4438  hasEggs */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4414:4430  calculateEggSell */\n      tag_74\n        /* \"contracts/BlastFurnace.sol\":4414:4439  calculateEggSell(hasEggs) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/BlastFurnace.sol\":4395:4439  uint256 eggValue = calculateEggSell(hasEggs) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4451:4459  eggValue */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":4444:4459  return eggValue */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":4286:4464  function furnaceRewards(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5936:6036  function getMyMiners(address adr) public view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/BlastFurnace.sol\":5991:5998  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6012:6026  hatcheryMiners */\n      0x06\n        /* \"contracts/BlastFurnace.sol\":6012:6031  hatcheryMiners[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6027:6030  adr */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6012:6031  hatcheryMiners[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6005:6031  return hatcheryMiners[adr] */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5936:6036  function getMyMiners(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_59:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_137\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_78\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5428:5562  function calculateEggBuySimple(uint256 eth) public view returns (uint256) {... */\n    tag_64:\n        /* \"contracts/BlastFurnace.sol\":5493:5500  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5514:5557  calculateEggBuy(eth, address(this).balance) */\n      tag_141\n        /* \"contracts/BlastFurnace.sol\":5530:5533  eth */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":5535:5556  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5514:5529  calculateEggBuy */\n      tag_30\n        /* \"contracts/BlastFurnace.sol\":5514:5557  calculateEggBuy(eth, address(this).balance) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/BlastFurnace.sol\":5507:5557  return calculateEggBuy(eth, address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5428:5562  function calculateEggBuySimple(uint256 eth) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_68:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5118:5260  function calculateEggSell(uint256 eggs) public view returns (uint256) {... */\n    tag_74:\n        /* \"contracts/BlastFurnace.sol\":5179:5186  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5200:5255  calculateTrade(eggs, marketEggs, address(this).balance) */\n      tag_144\n        /* \"contracts/BlastFurnace.sol\":5215:5219  eggs */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":5221:5231  marketEggs */\n      sload(0x0a)\n        /* \"contracts/BlastFurnace.sol\":5233:5254  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":5200:5214  calculateTrade */\n      tag_96\n        /* \"contracts/BlastFurnace.sol\":5200:5255  calculateTrade(eggs, marketEggs, address(this).balance) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/BlastFurnace.sol\":5193:5255  return calculateTrade(eggs, marketEggs, address(this).balance) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5118:5260  function calculateEggSell(uint256 eggs) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_78:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6183:6424  function getEggsSinceLastHatch(address adr) public view returns (uint256) {... */\n    tag_84:\n        /* \"contracts/BlastFurnace.sol\":6248:6255  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6262:6283  uint256 secondsPassed */\n      dup1\n        /* \"contracts/BlastFurnace.sol\":6286:6359  min(EGGS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr])) */\n      tag_147\n        /* \"contracts/BlastFurnace.sol\":6290:6311  EGGS_TO_HATCH_1MINERS */\n      sload(0x01)\n        /* \"contracts/BlastFurnace.sol\":6313:6358  SafeMath.sub(block.timestamp, lastHatch[adr]) */\n      tag_148\n        /* \"contracts/BlastFurnace.sol\":6326:6341  block.timestamp */\n      timestamp\n        /* \"contracts/BlastFurnace.sol\":6343:6352  lastHatch */\n      0x08\n        /* \"contracts/BlastFurnace.sol\":6343:6357  lastHatch[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6353:6356  adr */\n      dup9\n        /* \"contracts/BlastFurnace.sol\":6343:6357  lastHatch[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6313:6325  SafeMath.sub */\n      tag_111\n        /* \"contracts/BlastFurnace.sol\":6313:6358  SafeMath.sub(block.timestamp, lastHatch[adr]) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/BlastFurnace.sol\":6286:6289  min */\n      tag_149\n        /* \"contracts/BlastFurnace.sol\":6286:6359  min(EGGS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr])) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/BlastFurnace.sol\":6262:6359  uint256 secondsPassed = min(EGGS_TO_HATCH_1MINERS, SafeMath.sub(block.timestamp, lastHatch[adr])) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6371:6419  SafeMath.mul(secondsPassed, hatcheryMiners[adr]) */\n      tag_150\n        /* \"contracts/BlastFurnace.sol\":6384:6397  secondsPassed */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6399:6413  hatcheryMiners */\n      0x06\n        /* \"contracts/BlastFurnace.sol\":6399:6418  hatcheryMiners[adr] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6414:6417  adr */\n      dup7\n        /* \"contracts/BlastFurnace.sol\":6399:6418  hatcheryMiners[adr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":6371:6383  SafeMath.mul */\n      tag_151\n        /* \"contracts/BlastFurnace.sol\":6371:6419  SafeMath.mul(secondsPassed, hatcheryMiners[adr]) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/BlastFurnace.sol\":6364:6419  return SafeMath.mul(secondsPassed, hatcheryMiners[adr]) */\n      swap2\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":6183:6424  function getEggsSinceLastHatch(address adr) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4469:4866  function buyEggs(address ref) public payable {... */\n    tag_88:\n        /* \"contracts/BlastFurnace.sol\":4527:4538  initialized */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlastFurnace.sol\":4519:4539  require(initialized) */\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n        /* \"contracts/BlastFurnace.sol\":4544:4562  uint256 eggsBought */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4565:4639  calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      tag_154\n        /* \"contracts/BlastFurnace.sol\":4581:4590  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4592:4638  SafeMath.sub(address(this).balance, msg.value) */\n      tag_155\n        /* \"contracts/BlastFurnace.sol\":4605:4626  address(this).balance */\n      selfbalance\n        /* \"contracts/BlastFurnace.sol\":4628:4637  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4592:4604  SafeMath.sub */\n      tag_111\n        /* \"contracts/BlastFurnace.sol\":4592:4638  SafeMath.sub(address(this).balance, msg.value) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/BlastFurnace.sol\":4565:4580  calculateEggBuy */\n      tag_30\n        /* \"contracts/BlastFurnace.sol\":4565:4639  calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/BlastFurnace.sol\":4544:4639  uint256 eggsBought = calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4657:4701  SafeMath.sub(eggsBought, devFee(eggsBought)) */\n      tag_156\n        /* \"contracts/BlastFurnace.sol\":4670:4680  eggsBought */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":4682:4700  devFee(eggsBought) */\n      tag_157\n        /* \"contracts/BlastFurnace.sol\":4689:4699  eggsBought */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4682:4688  devFee */\n      tag_106\n        /* \"contracts/BlastFurnace.sol\":4682:4700  devFee(eggsBought) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/BlastFurnace.sol\":4657:4669  SafeMath.sub */\n      tag_111\n        /* \"contracts/BlastFurnace.sol\":4657:4701  SafeMath.sub(eggsBought, devFee(eggsBought)) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/BlastFurnace.sol\":4644:4701  eggsBought = SafeMath.sub(eggsBought, devFee(eggsBought)) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4706:4717  uint256 fee */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4720:4737  devFee(msg.value) */\n      tag_158\n        /* \"contracts/BlastFurnace.sol\":4727:4736  msg.value */\n      callvalue\n        /* \"contracts/BlastFurnace.sol\":4720:4726  devFee */\n      tag_106\n        /* \"contracts/BlastFurnace.sol\":4720:4737  devFee(msg.value) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/BlastFurnace.sol\":4706:4737  uint256 fee = devFee(msg.value) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4742:4748  recAdd */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4742:4757  recAdd.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlastFurnace.sol\":4742:4762  recAdd.transfer(fee) */\n      0x08fc\n        /* \"contracts/BlastFurnace.sol\":4758:4761  fee */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":4742:4762  recAdd.transfer(fee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n        /* \"contracts/BlastFurnace.sol\":4793:4842  SafeMath.add(claimedEggs[msg.sender], eggsBought) */\n      tag_161\n        /* \"contracts/BlastFurnace.sol\":4806:4817  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":4806:4829  claimedEggs[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4818:4828  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4806:4829  claimedEggs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BlastFurnace.sol\":4831:4841  eggsBought */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4793:4805  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":4793:4842  SafeMath.add(claimedEggs[msg.sender], eggsBought) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/BlastFurnace.sol\":4767:4778  claimedEggs */\n      0x07\n        /* \"contracts/BlastFurnace.sol\":4767:4790  claimedEggs[msg.sender] */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4779:4789  msg.sender */\n      caller\n        /* \"contracts/BlastFurnace.sol\":4767:4790  claimedEggs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BlastFurnace.sol\":4767:4842  claimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender], eggsBought) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlastFurnace.sol\":4847:4861  hatchEggs(ref) */\n      tag_162\n        /* \"contracts/BlastFurnace.sol\":4857:4860  ref */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":4847:4856  hatchEggs */\n      tag_46\n        /* \"contracts/BlastFurnace.sol\":4847:4861  hatchEggs(ref) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/BlastFurnace.sol\":4514:4866  {... */\n      pop\n      pop\n        /* \"contracts/BlastFurnace.sol\":4469:4866  function buyEggs(address ref) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_92:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_164\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_78\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_167\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_168\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":4871:5113  function calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/BlastFurnace.sol\":4953:4960  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":4974:5108  SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      tag_170\n        /* \"contracts/BlastFurnace.sol\":4987:5008  SafeMath.mul(PSN, bs) */\n      tag_171\n        /* \"contracts/BlastFurnace.sol\":5000:5003  PSN */\n      sload(0x02)\n        /* \"contracts/BlastFurnace.sol\":5005:5007  bs */\n      dup5\n        /* \"contracts/BlastFurnace.sol\":4987:4999  SafeMath.mul */\n      tag_151\n        /* \"contracts/BlastFurnace.sol\":4987:5008  SafeMath.mul(PSN, bs) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/BlastFurnace.sol\":5010:5107  SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)) */\n      tag_172\n        /* \"contracts/BlastFurnace.sol\":5023:5027  PSNH */\n      sload(0x03)\n        /* \"contracts/BlastFurnace.sol\":5029:5106  SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt) */\n      tag_173\n        /* \"contracts/BlastFurnace.sol\":5042:5101  SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)) */\n      tag_174\n        /* \"contracts/BlastFurnace.sol\":5055:5076  SafeMath.mul(PSN, rs) */\n      tag_175\n        /* \"contracts/BlastFurnace.sol\":5068:5071  PSN */\n      sload(0x02)\n        /* \"contracts/BlastFurnace.sol\":5073:5075  rs */\n      dup11\n        /* \"contracts/BlastFurnace.sol\":5055:5067  SafeMath.mul */\n      tag_151\n        /* \"contracts/BlastFurnace.sol\":5055:5076  SafeMath.mul(PSN, rs) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/BlastFurnace.sol\":5078:5100  SafeMath.mul(PSNH, rt) */\n      tag_176\n        /* \"contracts/BlastFurnace.sol\":5091:5095  PSNH */\n      sload(0x03)\n        /* \"contracts/BlastFurnace.sol\":5097:5099  rt */\n      dup13\n        /* \"contracts/BlastFurnace.sol\":5078:5090  SafeMath.mul */\n      tag_151\n        /* \"contracts/BlastFurnace.sol\":5078:5100  SafeMath.mul(PSNH, rt) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/BlastFurnace.sol\":5042:5054  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":5042:5101  SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/BlastFurnace.sol\":5103:5105  rt */\n      dup10\n        /* \"contracts/BlastFurnace.sol\":5029:5041  SafeMath.div */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":5029:5106  SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/BlastFurnace.sol\":5010:5022  SafeMath.add */\n      tag_100\n        /* \"contracts/BlastFurnace.sol\":5010:5107  SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/BlastFurnace.sol\":4974:4986  SafeMath.div */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":4974:5108  SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/BlastFurnace.sol\":4967:5108  return SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt))) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":4871:5113  function calculateTrade(uint256 rt, uint256 rs, uint256 bs) private view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2070:2159  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"contracts/libraries/SafeMath.sol\":2128:2135  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2153:2154  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2149:2150  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2149:2154  a + b */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"contracts/libraries/SafeMath.sol\":2142:2154  return a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2070:2159  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":5567:5697  function devFee(uint256 amount) private view returns (uint256) {... */\n    tag_106:\n        /* \"contracts/BlastFurnace.sol\":5621:5628  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":5642:5692  SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      tag_181\n        /* \"contracts/BlastFurnace.sol\":5655:5686  SafeMath.mul(amount, devFeeVal) */\n      tag_182\n        /* \"contracts/BlastFurnace.sol\":5668:5674  amount */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":5676:5685  devFeeVal */\n      sload(0x04)\n        /* \"contracts/BlastFurnace.sol\":5655:5667  SafeMath.mul */\n      tag_151\n        /* \"contracts/BlastFurnace.sol\":5655:5686  SafeMath.mul(amount, devFeeVal) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/BlastFurnace.sol\":5688:5691  100 */\n      0x64\n        /* \"contracts/BlastFurnace.sol\":5642:5654  SafeMath.div */\n      tag_126\n        /* \"contracts/BlastFurnace.sol\":5642:5692  SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/BlastFurnace.sol\":5635:5692  return SafeMath.div(SafeMath.mul(amount, devFeeVal), 100) */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":5567:5697  function devFee(uint256 amount) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2409:2498  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"contracts/libraries/SafeMath.sol\":2467:2474  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2492:2493  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2488:2489  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2488:2493  a - b */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/libraries/SafeMath.sol\":2481:2493  return a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2409:2498  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":3081:3170  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"contracts/libraries/SafeMath.sol\":3139:3146  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":3164:3165  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":3160:3161  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":3160:3165  a / b */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"contracts/libraries/SafeMath.sol\":3153:3165  return a / b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":3081:3170  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlastFurnace.sol\":6429:6525  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n    tag_149:\n        /* \"contracts/BlastFurnace.sol\":6486:6493  uint256 */\n      0x00\n        /* \"contracts/BlastFurnace.sol\":6511:6512  b */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6507:6508  a */\n      dup4\n        /* \"contracts/BlastFurnace.sol\":6507:6512  a < b */\n      lt\n        /* \"contracts/BlastFurnace.sol\":6507:6520  a < b ? a : b */\n      tag_190\n      jumpi\n        /* \"contracts/BlastFurnace.sol\":6519:6520  b */\n      dup2\n        /* \"contracts/BlastFurnace.sol\":6507:6520  a < b ? a : b */\n      jump(tag_191)\n    tag_190:\n        /* \"contracts/BlastFurnace.sol\":6515:6516  a */\n      dup3\n        /* \"contracts/BlastFurnace.sol\":6507:6520  a < b ? a : b */\n    tag_191:\n        /* \"contracts/BlastFurnace.sol\":6500:6520  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/BlastFurnace.sol\":6429:6525  function min(uint256 a, uint256 b) private pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2724:2813  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_151:\n        /* \"contracts/libraries/SafeMath.sol\":2782:2789  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2807:2808  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2803:2804  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2803:2808  a * b */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/libraries/SafeMath.sol\":2796:2808  return a * b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2724:2813  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_168:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_197:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_198:\n        /* \"#utility.yul\":177:201   */\n      tag_216\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_197\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_218\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_198\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_200:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_202:\n        /* \"#utility.yul\":842:866   */\n      tag_223\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_197\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_224:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_203:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_226\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_202\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1516   */\n    tag_29:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1167:1169   */\n      0x40\n        /* \"#utility.yul\":1155:1164   */\n      dup4\n        /* \"#utility.yul\":1146:1153   */\n      dup6\n        /* \"#utility.yul\":1142:1165   */\n      sub\n        /* \"#utility.yul\":1138:1170   */\n      slt\n        /* \"#utility.yul\":1135:1254   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1173:1252   */\n      tag_229\n      tag_200\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1135:1254   */\n    tag_228:\n        /* \"#utility.yul\":1293:1294   */\n      0x00\n        /* \"#utility.yul\":1318:1371   */\n      tag_230\n        /* \"#utility.yul\":1363:1370   */\n      dup6\n        /* \"#utility.yul\":1354:1360   */\n      dup3\n        /* \"#utility.yul\":1343:1352   */\n      dup7\n        /* \"#utility.yul\":1339:1361   */\n      add\n        /* \"#utility.yul\":1318:1371   */\n      tag_203\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1308:1371   */\n      swap3\n      pop\n        /* \"#utility.yul\":1264:1381   */\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1446:1499   */\n      tag_231\n        /* \"#utility.yul\":1491:1498   */\n      dup6\n        /* \"#utility.yul\":1482:1488   */\n      dup3\n        /* \"#utility.yul\":1471:1480   */\n      dup7\n        /* \"#utility.yul\":1467:1489   */\n      add\n        /* \"#utility.yul\":1446:1499   */\n      tag_203\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1436:1499   */\n      swap2\n      pop\n        /* \"#utility.yul\":1391:1509   */\n      pop\n        /* \"#utility.yul\":1042:1516   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1648   */\n    tag_204:\n        /* \"#utility.yul\":1559:1566   */\n      0x00\n        /* \"#utility.yul\":1599:1641   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1592:1597   */\n      dup3\n        /* \"#utility.yul\":1588:1642   */\n      and\n        /* \"#utility.yul\":1577:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1750   */\n    tag_205:\n        /* \"#utility.yul\":1691:1698   */\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_234\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_204\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1709:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1878   */\n    tag_206:\n        /* \"#utility.yul\":1829:1853   */\n      tag_236\n        /* \"#utility.yul\":1847:1852   */\n      dup2\n        /* \"#utility.yul\":1829:1853   */\n      tag_205\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1822:1827   */\n      dup2\n        /* \"#utility.yul\":1819:1854   */\n      eq\n        /* \"#utility.yul\":1809:1872   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1868:1869   */\n      0x00\n        /* \"#utility.yul\":1865:1866   */\n      dup1\n        /* \"#utility.yul\":1858:1870   */\n      revert\n        /* \"#utility.yul\":1809:1872   */\n    tag_237:\n        /* \"#utility.yul\":1756:1878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2023   */\n    tag_207:\n        /* \"#utility.yul\":1930:1935   */\n      0x00\n        /* \"#utility.yul\":1968:1974   */\n      dup2\n        /* \"#utility.yul\":1955:1975   */\n      calldataload\n        /* \"#utility.yul\":1946:1975   */\n      swap1\n      pop\n        /* \"#utility.yul\":1984:2017   */\n      tag_239\n        /* \"#utility.yul\":2011:2016   */\n      dup2\n        /* \"#utility.yul\":1984:2017   */\n      tag_206\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1884:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_35:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_242\n      tag_200\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2105:2224   */\n    tag_241:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_243\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_207\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_63:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_246\n      tag_200\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2440:2559   */\n    tag_245:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_247\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_203\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_208:\n        /* \"#utility.yul\":2786:2810   */\n      tag_249\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_205\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_70:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_251\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_208\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3141   */\n    tag_209:\n        /* \"#utility.yul\":3085:3092   */\n      0x00\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3121:3134   */\n      iszero\n        /* \"#utility.yul\":3114:3135   */\n      iszero\n        /* \"#utility.yul\":3103:3135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3051:3141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3256   */\n    tag_210:\n        /* \"#utility.yul\":3228:3249   */\n      tag_254\n        /* \"#utility.yul\":3243:3248   */\n      dup2\n        /* \"#utility.yul\":3228:3249   */\n      tag_209\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3223:3226   */\n      dup3\n        /* \"#utility.yul\":3216:3250   */\n      mstore\n        /* \"#utility.yul\":3147:3256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3472   */\n    tag_80:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3465   */\n      tag_256\n        /* \"#utility.yul\":3462:3463   */\n      0x00\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3447:3464   */\n      add\n        /* \"#utility.yul\":3438:3444   */\n      dup5\n        /* \"#utility.yul\":3400:3465   */\n      tag_210\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3262:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3658   */\n    tag_211:\n        /* \"#utility.yul\":3526:3603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3523:3524   */\n      0x00\n        /* \"#utility.yul\":3516:3604   */\n      mstore\n        /* \"#utility.yul\":3623:3627   */\n      0x11\n        /* \"#utility.yul\":3620:3621   */\n      0x04\n        /* \"#utility.yul\":3613:3628   */\n      mstore\n        /* \"#utility.yul\":3647:3651   */\n      0x24\n        /* \"#utility.yul\":3644:3645   */\n      0x00\n        /* \"#utility.yul\":3637:3652   */\n      revert\n        /* \"#utility.yul\":3664:3855   */\n    tag_179:\n        /* \"#utility.yul\":3704:3707   */\n      0x00\n        /* \"#utility.yul\":3723:3743   */\n      tag_259\n        /* \"#utility.yul\":3741:3742   */\n      dup3\n        /* \"#utility.yul\":3723:3743   */\n      tag_197\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3718:3743   */\n      swap2\n      pop\n        /* \"#utility.yul\":3757:3777   */\n      tag_260\n        /* \"#utility.yul\":3775:3776   */\n      dup4\n        /* \"#utility.yul\":3757:3777   */\n      tag_197\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3752:3777   */\n      swap3\n      pop\n        /* \"#utility.yul\":3800:3801   */\n      dup3\n        /* \"#utility.yul\":3797:3798   */\n      dup3\n        /* \"#utility.yul\":3793:3802   */\n      add\n        /* \"#utility.yul\":3786:3802   */\n      swap1\n      pop\n        /* \"#utility.yul\":3821:3824   */\n      dup1\n        /* \"#utility.yul\":3818:3819   */\n      dup3\n        /* \"#utility.yul\":3815:3825   */\n      gt\n        /* \"#utility.yul\":3812:3848   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3828:3846   */\n      tag_262\n      tag_211\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3812:3848   */\n    tag_261:\n        /* \"#utility.yul\":3664:3855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3861:4055   */\n    tag_185:\n        /* \"#utility.yul\":3901:3905   */\n      0x00\n        /* \"#utility.yul\":3921:3941   */\n      tag_264\n        /* \"#utility.yul\":3939:3940   */\n      dup3\n        /* \"#utility.yul\":3921:3941   */\n      tag_197\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3916:3941   */\n      swap2\n      pop\n        /* \"#utility.yul\":3955:3975   */\n      tag_265\n        /* \"#utility.yul\":3973:3974   */\n      dup4\n        /* \"#utility.yul\":3955:3975   */\n      tag_197\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3950:3975   */\n      swap3\n      pop\n        /* \"#utility.yul\":3999:4000   */\n      dup3\n        /* \"#utility.yul\":3996:3997   */\n      dup3\n        /* \"#utility.yul\":3992:4001   */\n      sub\n        /* \"#utility.yul\":3984:4001   */\n      swap1\n      pop\n        /* \"#utility.yul\":4023:4024   */\n      dup2\n        /* \"#utility.yul\":4017:4021   */\n      dup2\n        /* \"#utility.yul\":4014:4025   */\n      gt\n        /* \"#utility.yul\":4011:4048   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4028:4046   */\n      tag_267\n      tag_211\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4011:4048   */\n    tag_266:\n        /* \"#utility.yul\":3861:4055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4061:4241   */\n    tag_212:\n        /* \"#utility.yul\":4109:4186   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4106:4107   */\n      0x00\n        /* \"#utility.yul\":4099:4187   */\n      mstore\n        /* \"#utility.yul\":4206:4210   */\n      0x12\n        /* \"#utility.yul\":4203:4204   */\n      0x04\n        /* \"#utility.yul\":4196:4211   */\n      mstore\n        /* \"#utility.yul\":4230:4234   */\n      0x24\n        /* \"#utility.yul\":4227:4228   */\n      0x00\n        /* \"#utility.yul\":4220:4235   */\n      revert\n        /* \"#utility.yul\":4247:4432   */\n    tag_188:\n        /* \"#utility.yul\":4287:4288   */\n      0x00\n        /* \"#utility.yul\":4304:4324   */\n      tag_270\n        /* \"#utility.yul\":4322:4323   */\n      dup3\n        /* \"#utility.yul\":4304:4324   */\n      tag_197\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4299:4324   */\n      swap2\n      pop\n        /* \"#utility.yul\":4338:4358   */\n      tag_271\n        /* \"#utility.yul\":4356:4357   */\n      dup4\n        /* \"#utility.yul\":4338:4358   */\n      tag_197\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4333:4358   */\n      swap3\n      pop\n        /* \"#utility.yul\":4377:4378   */\n      dup3\n        /* \"#utility.yul\":4367:4402   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4382:4400   */\n      tag_273\n      tag_212\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4367:4402   */\n    tag_272:\n        /* \"#utility.yul\":4424:4425   */\n      dup3\n        /* \"#utility.yul\":4421:4422   */\n      dup3\n        /* \"#utility.yul\":4417:4426   */\n      div\n        /* \"#utility.yul\":4412:4426   */\n      swap1\n      pop\n        /* \"#utility.yul\":4247:4432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4848   */\n    tag_194:\n        /* \"#utility.yul\":4478:4485   */\n      0x00\n        /* \"#utility.yul\":4501:4521   */\n      tag_275\n        /* \"#utility.yul\":4519:4520   */\n      dup3\n        /* \"#utility.yul\":4501:4521   */\n      tag_197\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4496:4521   */\n      swap2\n      pop\n        /* \"#utility.yul\":4535:4555   */\n      tag_276\n        /* \"#utility.yul\":4553:4554   */\n      dup4\n        /* \"#utility.yul\":4535:4555   */\n      tag_197\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4530:4555   */\n      swap3\n      pop\n        /* \"#utility.yul\":4590:4591   */\n      dup3\n        /* \"#utility.yul\":4587:4588   */\n      dup3\n        /* \"#utility.yul\":4583:4592   */\n      mul\n        /* \"#utility.yul\":4612:4642   */\n      tag_277\n        /* \"#utility.yul\":4630:4641   */\n      dup2\n        /* \"#utility.yul\":4612:4642   */\n      tag_197\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4601:4642   */\n      swap2\n      pop\n        /* \"#utility.yul\":4791:4792   */\n      dup3\n        /* \"#utility.yul\":4782:4789   */\n      dup3\n        /* \"#utility.yul\":4778:4793   */\n      div\n        /* \"#utility.yul\":4775:4776   */\n      dup5\n        /* \"#utility.yul\":4772:4794   */\n      eq\n        /* \"#utility.yul\":4752:4753   */\n      dup4\n        /* \"#utility.yul\":4745:4754   */\n      iszero\n        /* \"#utility.yul\":4725:4808   */\n      or\n        /* \"#utility.yul\":4702:4841   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4821:4839   */\n      tag_279\n      tag_211\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4702:4841   */\n    tag_278:\n        /* \"#utility.yul\":4486:4848   */\n      pop\n        /* \"#utility.yul\":4438:4848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122049d105fea2f80899fb5f37b4a00e14c1d0794908e897bb4ff2a53db0999504d364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_607": {
									"entryPoint": null,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x107AC0 PUSH1 0x1 SSTORE PUSH2 0x2710 PUSH1 0x2 SSTORE PUSH2 0x1388 PUSH1 0x3 SSTORE PUSH1 0x3 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1322 DUP1 PUSH2 0xCE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0x8F32D59B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xD7C8843B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xDB663865 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x392 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x7E56FDE5 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8E316327 EQ PUSH2 0x2D4 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x3C5F07CB GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x3EC862A8 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x450C9D7D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x4B634B06 EQ PUSH2 0x21C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x26FD8422 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x2EF6A743 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x3955F0FE EQ PUSH2 0x198 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x42E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0xAE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xE29 JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3CF DUP4 DUP4 PUSH1 0xA SLOAD PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x427 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x422 DUP5 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x44F CALLER PUSH2 0x3D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x45B DUP3 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x467 DUP3 PUSH2 0xEAC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4F9 PUSH1 0xA SLOAD DUP5 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x589 DUP5 DUP5 PUSH2 0xECA JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xA SLOAD EQ PUSH2 0x5D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH5 0x19254D3800 PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x613 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64A JUMPI PUSH0 SWAP1 POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x769 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7EA JUMPI DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH2 0x7F4 CALLER PUSH2 0x3D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x803 DUP3 PUSH1 0x1 SLOAD PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP PUSH2 0x84C PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9BE PUSH1 0x7 PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x9B9 DUP5 PUSH1 0x8 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA71 PUSH1 0xA SLOAD PUSH2 0xA6C DUP5 PUSH1 0x5 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA87 DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA93 DUP3 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAED PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xAF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBA3 DUP3 SELFBALANCE PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xBDF DUP3 PUSH1 0xA SLOAD SELFBALANCE PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC8F PUSH1 0x1 SLOAD PUSH2 0xC8A TIMESTAMP PUSH1 0x8 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xECA JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP PUSH2 0xCD8 DUP2 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF0C JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD0B CALLVALUE PUSH2 0xD06 SELFBALANCE CALLVALUE PUSH2 0xECA JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD1F DUP2 PUSH2 0xD1A DUP4 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD2B CALLVALUE PUSH2 0xEAC JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xDDA PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE24 DUP4 PUSH2 0x5FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE31 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xE39 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xF21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE8E PUSH2 0xE55 PUSH1 0x2 SLOAD DUP5 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xE89 PUSH1 0x3 SLOAD PUSH2 0xE84 PUSH2 0xE7E PUSH2 0xE6D PUSH1 0x2 SLOAD DUP11 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xE79 PUSH1 0x3 SLOAD DUP13 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST DUP10 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC3 PUSH2 0xEBC DUP4 PUSH1 0x4 SLOAD PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x64 PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xF02 JUMPI DUP2 PUSH2 0xF04 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1025 DUP2 PUSH2 0x1013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103E PUSH0 DUP4 ADD DUP5 PUSH2 0x101C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1051 DUP2 PUSH2 0x1013 JUMP JUMPDEST DUP2 EQ PUSH2 0x105B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x106C DUP2 PUSH2 0x1048 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1088 JUMPI PUSH2 0x1087 PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1095 DUP6 DUP3 DUP7 ADD PUSH2 0x105E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10A6 DUP6 DUP3 DUP7 ADD PUSH2 0x105E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D9 DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E9 DUP2 PUSH2 0x10CF JUMP JUMPDEST DUP2 EQ PUSH2 0x10F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1104 DUP2 PUSH2 0x10E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111F JUMPI PUSH2 0x111E PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x112C DUP5 DUP3 DUP6 ADD PUSH2 0x10F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1157 DUP5 DUP3 DUP6 ADD PUSH2 0x105E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x10CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1182 PUSH0 DUP4 ADD DUP5 PUSH2 0x1160 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119C DUP2 PUSH2 0x1188 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11F2 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FD DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x11BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1225 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1230 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1248 JUMPI PUSH2 0x1247 PUSH2 0x11BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1285 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1290 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A0 JUMPI PUSH2 0x129F PUSH2 0x124E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B5 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C0 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x12CE DUP2 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0x11BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xD1 SDIV INVALID LOG2 0xF8 ADDMOD SWAP10 0xFB PUSH0 CALLDATACOPY 0xB4 LOG0 0xE EQ 0xC1 0xD0 PUSH26 0x4908E897BB4FF2A53DB0999504D364736F6C6343000818003300 ",
							"sourceMap": "2459:4069:0:-:0;;;2577:7;2537:47;;2657:5;2635:27;;2689:4;2666:27;;2725:1;2697:29;;2757:5;2730:32;;;;;;;;;;;;;;;;;;;;3035:52;;;;;;;;;;288:10:1;279:6;;:19;;;;;;;;;;;;;;;;;;3071:10:0;3054:6;;:28;;;;;;;;;;;;;;;;;;2459:4069;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_688": {
									"entryPoint": 3873,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_864": {
									"entryPoint": 3735,
									"id": 864,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyEggs_363": {
									"entryPoint": 3296,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateEggBuySimple_456": {
									"entryPoint": 2968,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateEggBuy_439": {
									"entryPoint": 961,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateEggSell_423": {
									"entryPoint": 3025,
									"id": 423,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTrade_405": {
									"entryPoint": 3653,
									"id": 405,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@devFee_474": {
									"entryPoint": 3756,
									"id": 474,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_909": {
									"entryPoint": 3807,
									"id": 909,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@furnaceRewards_295": {
									"entryPoint": 2684,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_506": {
									"entryPoint": 954,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getEggsSinceLastHatch_566": {
									"entryPoint": 3131,
									"id": 566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyEggs_536": {
									"entryPoint": 983,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyMiners_518": {
									"entryPoint": 2719,
									"id": 518,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hatchEggs_204": {
									"entryPoint": 1532,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_635": {
									"entryPoint": 3046,
									"id": 635,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_583": {
									"entryPoint": 3828,
									"id": 583,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_894": {
									"entryPoint": 3852,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_615": {
									"entryPoint": 2986,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_652": {
									"entryPoint": 2789,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@seedMarket_494": {
									"entryPoint": 1463,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellEggs_273": {
									"entryPoint": 1070,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_879": {
									"entryPoint": 3786,
									"id": 879,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_664": {
									"entryPoint": 3625,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4851:3",
										"nodeType": "YulBlock",
										"src": "0:4851:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:3",
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nativeSrc": "62:16:3",
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:3",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nativeSrc": "155:53:3",
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nativeSrc": "177:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nativeSrc": "165:37:3",
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nativeSrc": "165:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:3",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:3",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nativeSrc": "312:124:3",
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nativeSrc": "322:26:3",
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nativeSrc": "330:18:3",
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:3",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nativeSrc": "411:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nativeSrc": "358:71:3",
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nativeSrc": "358:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:3",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:3",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:3",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nativeSrc": "482:35:3",
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nativeSrc": "492:19:3",
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:3",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nativeSrc": "502:9:3",
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:3",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nativeSrc": "612:28:3",
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:3",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:3",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nativeSrc": "622:12:3",
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nativeSrc": "622:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nativeSrc": "735:28:3",
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:3",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:3",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nativeSrc": "745:12:3",
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nativeSrc": "745:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nativeSrc": "812:79:3",
													"nodeType": "YulBlock",
													"src": "812:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:3",
																"nodeType": "YulBlock",
																"src": "869:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:3",
																					"nodeType": "YulLiteral",
																					"src": "878:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:3",
																					"nodeType": "YulLiteral",
																					"src": "881:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:3"
																			},
																			"nativeSrc": "871:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:3"
																		},
																		"nativeSrc": "871:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:3"
																				},
																				"nativeSrc": "842:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:3"
																		},
																		"nativeSrc": "832:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:3"
																},
																"nativeSrc": "825:43:3",
																"nodeType": "YulFunctionCall",
																"src": "825:43:3"
															},
															"nativeSrc": "822:63:3",
															"nodeType": "YulIf",
															"src": "822:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:3",
														"nodeType": "YulTypedName",
														"src": "805:5:3",
														"type": ""
													}
												],
												"src": "769:122:3"
											},
											{
												"body": {
													"nativeSrc": "949:87:3",
													"nodeType": "YulBlock",
													"src": "949:87:3",
													"statements": [
														{
															"nativeSrc": "959:29:3",
															"nodeType": "YulAssignment",
															"src": "959:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:3"
																},
																"nativeSrc": "968:20:3",
																"nodeType": "YulFunctionCall",
																"src": "968:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:3"
																},
																"nativeSrc": "997:33:3",
																"nodeType": "YulFunctionCall",
																"src": "997:33:3"
															},
															"nativeSrc": "997:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:3",
														"nodeType": "YulTypedName",
														"src": "927:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:3",
														"nodeType": "YulTypedName",
														"src": "935:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:3",
														"nodeType": "YulTypedName",
														"src": "943:5:3",
														"type": ""
													}
												],
												"src": "897:139:3"
											},
											{
												"body": {
													"nativeSrc": "1125:391:3",
													"nodeType": "YulBlock",
													"src": "1125:391:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1171:83:3",
																"nodeType": "YulBlock",
																"src": "1171:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1173:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1173:77:3"
																			},
																			"nativeSrc": "1173:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1173:79:3"
																		},
																		"nativeSrc": "1173:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1146:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1155:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1155:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1142:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:3"
																		},
																		"nativeSrc": "1142:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1142:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1167:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1167:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1138:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:3"
																},
																"nativeSrc": "1138:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1138:32:3"
															},
															"nativeSrc": "1135:119:3",
															"nodeType": "YulIf",
															"src": "1135:119:3"
														},
														{
															"nativeSrc": "1264:117:3",
															"nodeType": "YulBlock",
															"src": "1264:117:3",
															"statements": [
																{
																	"nativeSrc": "1279:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1279:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1293:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1293:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1283:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1283:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1308:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1308:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1343:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1343:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1354:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1354:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1339:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:3"
																				},
																				"nativeSrc": "1339:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1339:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1318:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1318:20:3"
																		},
																		"nativeSrc": "1318:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1308:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1308:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1391:118:3",
															"nodeType": "YulBlock",
															"src": "1391:118:3",
															"statements": [
																{
																	"nativeSrc": "1406:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1406:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1420:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1410:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1410:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1436:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1436:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1471:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1471:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1482:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1467:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:3"
																				},
																				"nativeSrc": "1467:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1467:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1491:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1491:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1446:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1446:20:3"
																		},
																		"nativeSrc": "1446:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1446:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1436:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1436:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1042:474:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1087:9:3",
														"nodeType": "YulTypedName",
														"src": "1087:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1098:7:3",
														"nodeType": "YulTypedName",
														"src": "1098:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1110:6:3",
														"nodeType": "YulTypedName",
														"src": "1110:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1118:6:3",
														"nodeType": "YulTypedName",
														"src": "1118:6:3",
														"type": ""
													}
												],
												"src": "1042:474:3"
											},
											{
												"body": {
													"nativeSrc": "1567:81:3",
													"nodeType": "YulBlock",
													"src": "1567:81:3",
													"statements": [
														{
															"nativeSrc": "1577:65:3",
															"nodeType": "YulAssignment",
															"src": "1577:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1592:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1592:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:42:3",
																		"nodeType": "YulLiteral",
																		"src": "1599:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1588:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1588:3:3"
																},
																"nativeSrc": "1588:54:3",
																"nodeType": "YulFunctionCall",
																"src": "1588:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1577:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1577:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1522:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1549:5:3",
														"nodeType": "YulTypedName",
														"src": "1549:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1559:7:3",
														"nodeType": "YulTypedName",
														"src": "1559:7:3",
														"type": ""
													}
												],
												"src": "1522:126:3"
											},
											{
												"body": {
													"nativeSrc": "1699:51:3",
													"nodeType": "YulBlock",
													"src": "1699:51:3",
													"statements": [
														{
															"nativeSrc": "1709:35:3",
															"nodeType": "YulAssignment",
															"src": "1709:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1738:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1720:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:3"
																},
																"nativeSrc": "1720:24:3",
																"nodeType": "YulFunctionCall",
																"src": "1720:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1709:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1709:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1654:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1681:5:3",
														"nodeType": "YulTypedName",
														"src": "1681:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1691:7:3",
														"nodeType": "YulTypedName",
														"src": "1691:7:3",
														"type": ""
													}
												],
												"src": "1654:96:3"
											},
											{
												"body": {
													"nativeSrc": "1799:79:3",
													"nodeType": "YulBlock",
													"src": "1799:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1856:16:3",
																"nodeType": "YulBlock",
																"src": "1856:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1865:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1865:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1868:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1868:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1858:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:3"
																			},
																			"nativeSrc": "1858:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1858:12:3"
																		},
																		"nativeSrc": "1858:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1858:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1822:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1822:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1847:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1847:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1829:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1829:17:3"
																				},
																				"nativeSrc": "1829:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1829:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1819:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1819:2:3"
																		},
																		"nativeSrc": "1819:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1812:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:3"
																},
																"nativeSrc": "1812:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1812:43:3"
															},
															"nativeSrc": "1809:63:3",
															"nodeType": "YulIf",
															"src": "1809:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1756:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1792:5:3",
														"nodeType": "YulTypedName",
														"src": "1792:5:3",
														"type": ""
													}
												],
												"src": "1756:122:3"
											},
											{
												"body": {
													"nativeSrc": "1936:87:3",
													"nodeType": "YulBlock",
													"src": "1936:87:3",
													"statements": [
														{
															"nativeSrc": "1946:29:3",
															"nodeType": "YulAssignment",
															"src": "1946:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1968:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1968:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1955:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1955:12:3"
																},
																"nativeSrc": "1955:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1955:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1946:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1946:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2011:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2011:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1984:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1984:26:3"
																},
																"nativeSrc": "1984:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1984:33:3"
															},
															"nativeSrc": "1984:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1984:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1884:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1914:6:3",
														"nodeType": "YulTypedName",
														"src": "1914:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1922:3:3",
														"nodeType": "YulTypedName",
														"src": "1922:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1930:5:3",
														"nodeType": "YulTypedName",
														"src": "1930:5:3",
														"type": ""
													}
												],
												"src": "1884:139:3"
											},
											{
												"body": {
													"nativeSrc": "2095:263:3",
													"nodeType": "YulBlock",
													"src": "2095:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:3",
																"nodeType": "YulBlock",
																"src": "2141:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:3"
																			},
																			"nativeSrc": "2143:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:3"
																		},
																		"nativeSrc": "2143:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:3"
																		},
																		"nativeSrc": "2112:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:3"
																},
																"nativeSrc": "2108:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:3"
															},
															"nativeSrc": "2105:119:3",
															"nodeType": "YulIf",
															"src": "2105:119:3"
														},
														{
															"nativeSrc": "2234:117:3",
															"nodeType": "YulBlock",
															"src": "2234:117:3",
															"statements": [
																{
																	"nativeSrc": "2249:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:3"
																				},
																				"nativeSrc": "2309:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:3"
																		},
																		"nativeSrc": "2288:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:3",
														"nodeType": "YulTypedName",
														"src": "2065:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:3",
														"nodeType": "YulTypedName",
														"src": "2076:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:3",
														"nodeType": "YulTypedName",
														"src": "2088:6:3",
														"type": ""
													}
												],
												"src": "2029:329:3"
											},
											{
												"body": {
													"nativeSrc": "2430:263:3",
													"nodeType": "YulBlock",
													"src": "2430:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:3",
																"nodeType": "YulBlock",
																"src": "2476:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:3"
																			},
																			"nativeSrc": "2478:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:3"
																		},
																		"nativeSrc": "2478:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:3"
																		},
																		"nativeSrc": "2447:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:3"
																},
																"nativeSrc": "2443:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:3"
															},
															"nativeSrc": "2440:119:3",
															"nodeType": "YulIf",
															"src": "2440:119:3"
														},
														{
															"nativeSrc": "2569:117:3",
															"nodeType": "YulBlock",
															"src": "2569:117:3",
															"statements": [
																{
																	"nativeSrc": "2584:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:3"
																				},
																				"nativeSrc": "2644:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2623:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:3"
																		},
																		"nativeSrc": "2623:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2364:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:3",
														"nodeType": "YulTypedName",
														"src": "2400:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:3",
														"nodeType": "YulTypedName",
														"src": "2411:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:3",
														"nodeType": "YulTypedName",
														"src": "2423:6:3",
														"type": ""
													}
												],
												"src": "2364:329:3"
											},
											{
												"body": {
													"nativeSrc": "2764:53:3",
													"nodeType": "YulBlock",
													"src": "2764:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2781:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2804:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2786:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:3"
																		},
																		"nativeSrc": "2786:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2774:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:3"
																},
																"nativeSrc": "2774:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2774:37:3"
															},
															"nativeSrc": "2774:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2699:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:3",
														"nodeType": "YulTypedName",
														"src": "2752:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2759:3:3",
														"nodeType": "YulTypedName",
														"src": "2759:3:3",
														"type": ""
													}
												],
												"src": "2699:118:3"
											},
											{
												"body": {
													"nativeSrc": "2921:124:3",
													"nodeType": "YulBlock",
													"src": "2921:124:3",
													"statements": [
														{
															"nativeSrc": "2931:26:3",
															"nodeType": "YulAssignment",
															"src": "2931:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2943:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2954:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2939:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:3"
																},
																"nativeSrc": "2939:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2939:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2931:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3011:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3024:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3035:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3020:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:3"
																		},
																		"nativeSrc": "3020:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2967:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:3"
																},
																"nativeSrc": "2967:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2967:71:3"
															},
															"nativeSrc": "2967:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2823:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2893:9:3",
														"nodeType": "YulTypedName",
														"src": "2893:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2905:6:3",
														"nodeType": "YulTypedName",
														"src": "2905:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2916:4:3",
														"nodeType": "YulTypedName",
														"src": "2916:4:3",
														"type": ""
													}
												],
												"src": "2823:222:3"
											},
											{
												"body": {
													"nativeSrc": "3093:48:3",
													"nodeType": "YulBlock",
													"src": "3093:48:3",
													"statements": [
														{
															"nativeSrc": "3103:32:3",
															"nodeType": "YulAssignment",
															"src": "3103:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3128:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3121:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:3"
																		},
																		"nativeSrc": "3121:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3114:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:3"
																},
																"nativeSrc": "3114:21:3",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3103:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3103:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3051:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3075:5:3",
														"nodeType": "YulTypedName",
														"src": "3075:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3085:7:3",
														"nodeType": "YulTypedName",
														"src": "3085:7:3",
														"type": ""
													}
												],
												"src": "3051:90:3"
											},
											{
												"body": {
													"nativeSrc": "3206:50:3",
													"nodeType": "YulBlock",
													"src": "3206:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3223:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3223:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3243:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3243:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3228:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "3228:14:3"
																		},
																		"nativeSrc": "3228:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3216:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:3"
																},
																"nativeSrc": "3216:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3216:34:3"
															},
															"nativeSrc": "3216:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "3216:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3147:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3194:5:3",
														"nodeType": "YulTypedName",
														"src": "3194:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3201:3:3",
														"nodeType": "YulTypedName",
														"src": "3201:3:3",
														"type": ""
													}
												],
												"src": "3147:109:3"
											},
											{
												"body": {
													"nativeSrc": "3354:118:3",
													"nodeType": "YulBlock",
													"src": "3354:118:3",
													"statements": [
														{
															"nativeSrc": "3364:26:3",
															"nodeType": "YulAssignment",
															"src": "3364:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:3"
																},
																"nativeSrc": "3372:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3438:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3451:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3462:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3462:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:3"
																		},
																		"nativeSrc": "3447:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3400:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "3400:37:3"
																},
																"nativeSrc": "3400:65:3",
																"nodeType": "YulFunctionCall",
																"src": "3400:65:3"
															},
															"nativeSrc": "3400:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "3400:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3262:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:3",
														"nodeType": "YulTypedName",
														"src": "3326:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:3",
														"nodeType": "YulTypedName",
														"src": "3338:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:3",
														"nodeType": "YulTypedName",
														"src": "3349:4:3",
														"type": ""
													}
												],
												"src": "3262:210:3"
											},
											{
												"body": {
													"nativeSrc": "3506:152:3",
													"nodeType": "YulBlock",
													"src": "3506:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3523:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3523:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3526:77:3",
																		"nodeType": "YulLiteral",
																		"src": "3526:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3516:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3516:6:3"
																},
																"nativeSrc": "3516:88:3",
																"nodeType": "YulFunctionCall",
																"src": "3516:88:3"
															},
															"nativeSrc": "3516:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "3516:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3620:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3620:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3623:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3623:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3613:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:3"
																},
																"nativeSrc": "3613:15:3",
																"nodeType": "YulFunctionCall",
																"src": "3613:15:3"
															},
															"nativeSrc": "3613:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "3613:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3644:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3644:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3647:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3647:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3637:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:3"
																},
																"nativeSrc": "3637:15:3",
																"nodeType": "YulFunctionCall",
																"src": "3637:15:3"
															},
															"nativeSrc": "3637:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "3637:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3478:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "3478:180:3"
											},
											{
												"body": {
													"nativeSrc": "3708:147:3",
													"nodeType": "YulBlock",
													"src": "3708:147:3",
													"statements": [
														{
															"nativeSrc": "3718:25:3",
															"nodeType": "YulAssignment",
															"src": "3718:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3741:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3741:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3723:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3723:17:3"
																},
																"nativeSrc": "3723:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3723:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3718:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3718:1:3"
																}
															]
														},
														{
															"nativeSrc": "3752:25:3",
															"nodeType": "YulAssignment",
															"src": "3752:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3775:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3775:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3757:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3757:17:3"
																},
																"nativeSrc": "3757:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3757:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3752:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3752:1:3"
																}
															]
														},
														{
															"nativeSrc": "3786:16:3",
															"nodeType": "YulAssignment",
															"src": "3786:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3797:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3797:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3800:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3800:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3793:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:3"
																},
																"nativeSrc": "3793:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3793:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3786:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3786:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3826:22:3",
																"nodeType": "YulBlock",
																"src": "3826:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3828:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3828:16:3"
																			},
																			"nativeSrc": "3828:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3828:18:3"
																		},
																		"nativeSrc": "3828:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3828:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3818:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3818:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3821:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3821:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3815:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3815:2:3"
																},
																"nativeSrc": "3815:10:3",
																"nodeType": "YulFunctionCall",
																"src": "3815:10:3"
															},
															"nativeSrc": "3812:36:3",
															"nodeType": "YulIf",
															"src": "3812:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3664:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3695:1:3",
														"nodeType": "YulTypedName",
														"src": "3695:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3698:1:3",
														"nodeType": "YulTypedName",
														"src": "3698:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3704:3:3",
														"nodeType": "YulTypedName",
														"src": "3704:3:3",
														"type": ""
													}
												],
												"src": "3664:191:3"
											},
											{
												"body": {
													"nativeSrc": "3906:149:3",
													"nodeType": "YulBlock",
													"src": "3906:149:3",
													"statements": [
														{
															"nativeSrc": "3916:25:3",
															"nodeType": "YulAssignment",
															"src": "3916:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3939:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3939:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3921:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3921:17:3"
																},
																"nativeSrc": "3921:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3921:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3916:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3916:1:3"
																}
															]
														},
														{
															"nativeSrc": "3950:25:3",
															"nodeType": "YulAssignment",
															"src": "3950:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3973:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3973:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3955:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3955:17:3"
																},
																"nativeSrc": "3955:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3955:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3950:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3950:1:3"
																}
															]
														},
														{
															"nativeSrc": "3984:17:3",
															"nodeType": "YulAssignment",
															"src": "3984:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3996:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3996:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3999:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3999:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3992:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3992:3:3"
																},
																"nativeSrc": "3992:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3992:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3984:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3984:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4026:22:3",
																"nodeType": "YulBlock",
																"src": "4026:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4028:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4028:16:3"
																			},
																			"nativeSrc": "4028:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4028:18:3"
																		},
																		"nativeSrc": "4028:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4028:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4017:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4017:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4023:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4023:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4014:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4014:2:3"
																},
																"nativeSrc": "4014:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4014:11:3"
															},
															"nativeSrc": "4011:37:3",
															"nodeType": "YulIf",
															"src": "4011:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3861:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3892:1:3",
														"nodeType": "YulTypedName",
														"src": "3892:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3895:1:3",
														"nodeType": "YulTypedName",
														"src": "3895:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3901:4:3",
														"nodeType": "YulTypedName",
														"src": "3901:4:3",
														"type": ""
													}
												],
												"src": "3861:194:3"
											},
											{
												"body": {
													"nativeSrc": "4089:152:3",
													"nodeType": "YulBlock",
													"src": "4089:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4106:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4106:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4109:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4109:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4099:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:3"
																},
																"nativeSrc": "4099:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4099:88:3"
															},
															"nativeSrc": "4099:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4099:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4203:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4203:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4206:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4206:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4196:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:3"
																},
																"nativeSrc": "4196:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4196:15:3"
															},
															"nativeSrc": "4196:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4196:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4227:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4230:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4230:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4220:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:3"
																},
																"nativeSrc": "4220:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4220:15:3"
															},
															"nativeSrc": "4220:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4220:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4061:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4061:180:3"
											},
											{
												"body": {
													"nativeSrc": "4289:143:3",
													"nodeType": "YulBlock",
													"src": "4289:143:3",
													"statements": [
														{
															"nativeSrc": "4299:25:3",
															"nodeType": "YulAssignment",
															"src": "4299:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4322:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4322:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4304:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4304:17:3"
																},
																"nativeSrc": "4304:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4304:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4299:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4299:1:3"
																}
															]
														},
														{
															"nativeSrc": "4333:25:3",
															"nodeType": "YulAssignment",
															"src": "4333:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4356:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4356:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4338:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4338:17:3"
																},
																"nativeSrc": "4338:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4338:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4333:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4333:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4380:22:3",
																"nodeType": "YulBlock",
																"src": "4380:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4382:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4382:16:3"
																			},
																			"nativeSrc": "4382:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4382:18:3"
																		},
																		"nativeSrc": "4382:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4382:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4377:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4377:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4370:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:3"
																},
																"nativeSrc": "4370:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4370:9:3"
															},
															"nativeSrc": "4367:35:3",
															"nodeType": "YulIf",
															"src": "4367:35:3"
														},
														{
															"nativeSrc": "4412:14:3",
															"nodeType": "YulAssignment",
															"src": "4412:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4421:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4421:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4424:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4424:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4417:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4417:3:3"
																},
																"nativeSrc": "4417:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4417:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4412:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4412:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4247:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4278:1:3",
														"nodeType": "YulTypedName",
														"src": "4278:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4281:1:3",
														"nodeType": "YulTypedName",
														"src": "4281:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4287:1:3",
														"nodeType": "YulTypedName",
														"src": "4287:1:3",
														"type": ""
													}
												],
												"src": "4247:185:3"
											},
											{
												"body": {
													"nativeSrc": "4486:362:3",
													"nodeType": "YulBlock",
													"src": "4486:362:3",
													"statements": [
														{
															"nativeSrc": "4496:25:3",
															"nodeType": "YulAssignment",
															"src": "4496:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4519:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4519:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4501:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4501:17:3"
																},
																"nativeSrc": "4501:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4501:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4496:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4496:1:3"
																}
															]
														},
														{
															"nativeSrc": "4530:25:3",
															"nodeType": "YulAssignment",
															"src": "4530:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4553:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4553:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4535:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4535:17:3"
																},
																"nativeSrc": "4535:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4535:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4530:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4530:1:3"
																}
															]
														},
														{
															"nativeSrc": "4564:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4564:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4587:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4587:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4590:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4590:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4583:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:3"
																},
																"nativeSrc": "4583:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4583:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4568:11:3",
																	"nodeType": "YulTypedName",
																	"src": "4568:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4601:41:3",
															"nodeType": "YulAssignment",
															"src": "4601:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4630:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "4630:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4612:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4612:17:3"
																},
																"nativeSrc": "4612:30:3",
																"nodeType": "YulFunctionCall",
																"src": "4612:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4601:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4601:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4819:22:3",
																"nodeType": "YulBlock",
																"src": "4819:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4821:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4821:16:3"
																			},
																			"nativeSrc": "4821:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4821:18:3"
																		},
																		"nativeSrc": "4821:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4752:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4752:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4745:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "4745:6:3"
																				},
																				"nativeSrc": "4745:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4745:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4775:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "4775:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4782:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "4782:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4791:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "4791:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4778:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "4778:3:3"
																						},
																						"nativeSrc": "4778:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "4778:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4772:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "4772:2:3"
																				},
																				"nativeSrc": "4772:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4772:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4725:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4725:2:3"
																		},
																		"nativeSrc": "4725:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4705:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4705:6:3"
																},
																"nativeSrc": "4705:113:3",
																"nodeType": "YulFunctionCall",
																"src": "4705:113:3"
															},
															"nativeSrc": "4702:139:3",
															"nodeType": "YulIf",
															"src": "4702:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4438:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4469:1:3",
														"nodeType": "YulTypedName",
														"src": "4469:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4472:1:3",
														"nodeType": "YulTypedName",
														"src": "4472:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4478:7:3",
														"nodeType": "YulTypedName",
														"src": "4478:7:3",
														"type": ""
													}
												],
												"src": "4438:410:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c8063715018a6116100895780638f32d59b116100585780638f32d59b14610310578063d7c8843b1461033a578063db66386514610376578063f2fde38b14610392576100f2565b8063715018a6146102585780637e56fde51461026e5780638da5cb5b146102aa5780638e316327146102d4576100f2565b80633c5f07cb116100c55780633c5f07cb146101ae5780633ec862a8146101b8578063450c9d7d146101e05780634b634b061461021c576100f2565b806312065fe0146100f657806326fd8422146101205780632ef6a7431461015c5780633955f0fe14610198575b5f80fd5b348015610101575f80fd5b5061010a6103ba565b604051610117919061102b565b60405180910390f35b34801561012b575f80fd5b5061014660048036038101906101419190611072565b6103c1565b604051610153919061102b565b60405180910390f35b348015610167575f80fd5b50610182600480360381019061017d919061110a565b6103d7565b60405161018f919061102b565b60405180910390f35b3480156101a3575f80fd5b506101ac61042e565b005b6101b66105b7565b005b3480156101c3575f80fd5b506101de60048036038101906101d9919061110a565b6105fc565b005b3480156101eb575f80fd5b506102066004803603810190610201919061110a565b610a7c565b604051610213919061102b565b60405180910390f35b348015610227575f80fd5b50610242600480360381019061023d919061110a565b610a9f565b60405161024f919061102b565b60405180910390f35b348015610263575f80fd5b5061026c610ae5565b005b348015610279575f80fd5b50610294600480360381019061028f9190611135565b610b98565b6040516102a1919061102b565b60405180910390f35b3480156102b5575f80fd5b506102be610baa565b6040516102cb919061116f565b60405180910390f35b3480156102df575f80fd5b506102fa60048036038101906102f59190611135565b610bd1565b604051610307919061102b565b60405180910390f35b34801561031b575f80fd5b50610324610be6565b60405161033191906111a2565b60405180910390f35b348015610345575f80fd5b50610360600480360381019061035b919061110a565b610c3b565b60405161036d919061102b565b60405180910390f35b610390600480360381019061038b919061110a565b610ce0565b005b34801561039d575f80fd5b506103b860048036038101906103b3919061110a565b610e29565b005b5f47905090565b5f6103cf8383600a54610e45565b905092915050565b5f61042760075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461042284610c3b565b610e97565b9050919050565b60055f9054906101000a900460ff16610445575f80fd5b5f61044f336103d7565b90505f61045b82610bd1565b90505f61046782610eac565b90505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506104f9600a5484610e97565b600a81905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610564573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc6105898484610eca565b90811502906040515f60405180830381858888f193505050501580156105b1573d5f803e3d5ffd5b50505050565b6105bf610be6565b6105c7575f80fd5b5f600a54146105d4575f80fd5b600160055f6101000a81548160ff0219169083151502179055506419254d3800600a81905550565b60055f9054906101000a900460ff16610613575f80fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361064a575f90505b5f73ffffffffffffffffffffffffffffffffffffffff1660095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561076957503373ffffffffffffffffffffffffffffffffffffffff1660095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156107ea578060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5f6107f4336103d7565b90505f61080382600154610edf565b905061084c60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205482610e97565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109be60075f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109b9846008610edf565b610e97565b60075f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610a71600a54610a6c846005610edf565b610e97565b600a81905550505050565b5f80610a87836103d7565b90505f610a9382610bd1565b90508092505050919050565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610aed610be6565b610af5575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f610ba382476103c1565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f610bdf82600a5447610e45565b9050919050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b5f80610c8f600154610c8a4260085f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610eca565b610ef4565b9050610cd88160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f0c565b915050919050565b60055f9054906101000a900460ff16610cf7575f80fd5b5f610d0b34610d064734610eca565b6103c1565b9050610d1f81610d1a83610eac565b610eca565b90505f610d2b34610eac565b9050600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610d92573d5f803e3d5ffd5b50610dda60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483610e97565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e24836105fc565b505050565b610e31610be6565b610e39575f80fd5b610e4281610f21565b50565b5f610e8e610e5560025484610f0c565b610e89600354610e84610e7e610e6d6002548a610f0c565b610e796003548c610f0c565b610e97565b89610edf565b610e97565b610edf565b90509392505050565b5f8183610ea491906111e8565b905092915050565b5f610ec3610ebc83600454610f0c565b6064610edf565b9050919050565b5f8183610ed7919061121b565b905092915050565b5f8183610eec919061127b565b905092915050565b5f818310610f025781610f04565b825b905092915050565b5f8183610f1991906112ab565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f58575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f819050919050565b61102581611013565b82525050565b5f60208201905061103e5f83018461101c565b92915050565b5f80fd5b61105181611013565b811461105b575f80fd5b50565b5f8135905061106c81611048565b92915050565b5f806040838503121561108857611087611044565b5b5f6110958582860161105e565b92505060206110a68582860161105e565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110d9826110b0565b9050919050565b6110e9816110cf565b81146110f3575f80fd5b50565b5f81359050611104816110e0565b92915050565b5f6020828403121561111f5761111e611044565b5b5f61112c848285016110f6565b91505092915050565b5f6020828403121561114a57611149611044565b5b5f6111578482850161105e565b91505092915050565b611169816110cf565b82525050565b5f6020820190506111825f830184611160565b92915050565b5f8115159050919050565b61119c81611188565b82525050565b5f6020820190506111b55f830184611193565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111f282611013565b91506111fd83611013565b9250828201905080821115611215576112146111bb565b5b92915050565b5f61122582611013565b915061123083611013565b9250828203905081811115611248576112476111bb565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128582611013565b915061129083611013565b9250826112a05761129f61124e565b5b828204905092915050565b5f6112b582611013565b91506112c083611013565b92508282026112ce81611013565b915082820484148315176112e5576112e46111bb565b5b509291505056fea264697066735822122049d105fea2f80899fb5f37b4a00e14c1d0794908e897bb4ff2a53db0999504d364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0x8F32D59B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xD7C8843B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xDB663865 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x392 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x7E56FDE5 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x8E316327 EQ PUSH2 0x2D4 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x3C5F07CB GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x3EC862A8 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x450C9D7D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x4B634B06 EQ PUSH2 0x21C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x26FD8422 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x2EF6A743 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x3955F0FE EQ PUSH2 0x198 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x42E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0xAE5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1135 JUMP JUMPDEST PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xE29 JUMP JUMPDEST STOP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3CF DUP4 DUP4 PUSH1 0xA SLOAD PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x427 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x422 DUP5 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x44F CALLER PUSH2 0x3D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x45B DUP3 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x467 DUP3 PUSH2 0xEAC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4F9 PUSH1 0xA SLOAD DUP5 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x589 DUP5 DUP5 PUSH2 0xECA JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xA SLOAD EQ PUSH2 0x5D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH5 0x19254D3800 PUSH1 0xA DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x613 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64A JUMPI PUSH0 SWAP1 POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x769 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7EA JUMPI DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH2 0x7F4 CALLER PUSH2 0x3D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x803 DUP3 PUSH1 0x1 SLOAD PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP PUSH2 0x84C PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9BE PUSH1 0x7 PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x9B9 DUP5 PUSH1 0x8 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA71 PUSH1 0xA SLOAD PUSH2 0xA6C DUP5 PUSH1 0x5 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA87 DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA93 DUP3 PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAED PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xAF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBA3 DUP3 SELFBALANCE PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xBDF DUP3 PUSH1 0xA SLOAD SELFBALANCE PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC8F PUSH1 0x1 SLOAD PUSH2 0xC8A TIMESTAMP PUSH1 0x8 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xECA JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP PUSH2 0xCD8 DUP2 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF0C JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xD0B CALLVALUE PUSH2 0xD06 SELFBALANCE CALLVALUE PUSH2 0xECA JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD1F DUP2 PUSH2 0xD1A DUP4 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD2B CALLVALUE PUSH2 0xEAC JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD92 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xDDA PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE24 DUP4 PUSH2 0x5FC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE31 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xE39 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xF21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE8E PUSH2 0xE55 PUSH1 0x2 SLOAD DUP5 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xE89 PUSH1 0x3 SLOAD PUSH2 0xE84 PUSH2 0xE7E PUSH2 0xE6D PUSH1 0x2 SLOAD DUP11 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xE79 PUSH1 0x3 SLOAD DUP13 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST DUP10 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0xE97 JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC3 PUSH2 0xEBC DUP4 PUSH1 0x4 SLOAD PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x64 PUSH2 0xEDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xF02 JUMPI DUP2 PUSH2 0xF04 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1025 DUP2 PUSH2 0x1013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x103E PUSH0 DUP4 ADD DUP5 PUSH2 0x101C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1051 DUP2 PUSH2 0x1013 JUMP JUMPDEST DUP2 EQ PUSH2 0x105B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x106C DUP2 PUSH2 0x1048 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1088 JUMPI PUSH2 0x1087 PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1095 DUP6 DUP3 DUP7 ADD PUSH2 0x105E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10A6 DUP6 DUP3 DUP7 ADD PUSH2 0x105E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D9 DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E9 DUP2 PUSH2 0x10CF JUMP JUMPDEST DUP2 EQ PUSH2 0x10F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1104 DUP2 PUSH2 0x10E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111F JUMPI PUSH2 0x111E PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x112C DUP5 DUP3 DUP6 ADD PUSH2 0x10F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x1044 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1157 DUP5 DUP3 DUP6 ADD PUSH2 0x105E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1169 DUP2 PUSH2 0x10CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1182 PUSH0 DUP4 ADD DUP5 PUSH2 0x1160 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119C DUP2 PUSH2 0x1188 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1193 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11F2 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FD DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x11BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1225 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1230 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1248 JUMPI PUSH2 0x1247 PUSH2 0x11BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1285 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x1290 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A0 JUMPI PUSH2 0x129F PUSH2 0x124E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B5 DUP3 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C0 DUP4 PUSH2 0x1013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x12CE DUP2 PUSH2 0x1013 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0x11BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH 0xD1 SDIV INVALID LOG2 0xF8 ADDMOD SWAP10 0xFB PUSH0 CALLDATACOPY 0xB4 LOG0 0xE EQ 0xC1 0xD0 PUSH26 0x4908E897BB4FF2A53DB0999504D364736F6C6343000818003300 ",
							"sourceMap": "2459:4069:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5841:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5265:158;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6041:137;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3882:399;;;;;;;;;;;;;:::i;:::-;;5702:134;;;:::i;:::-;;3092:785;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4286:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5936:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:111:1;;;;;;;;;;;;;:::i;:::-;;5428:134:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:70:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5118:142:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6183:241:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4469:397;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;647:100:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5841:90:0;5884:7;5905:21;5898:28;;5841:90;:::o;5265:158::-;5349:7;5370:48;5385:3;5390:15;5407:10;;5370:14;:48::i;:::-;5363:55;;5265:158;;;;:::o;6041:137::-;6094:7;6115:58;6128:11;:16;6140:3;6128:16;;;;;;;;;;;;;;;;6146:26;6168:3;6146:21;:26::i;:::-;6115:12;:58::i;:::-;6108:65;;6041:137;;;:::o;3882:399::-;3922:11;;;;;;;;;;;3914:20;;;;;;3939:15;3957:21;3967:10;3957:9;:21::i;:::-;3939:39;;3983:16;4002:25;4019:7;4002:16;:25::i;:::-;3983:44;;4032:11;4046:16;4053:8;4046:6;:16::i;:::-;4032:30;;4093:1;4067:11;:23;4079:10;4067:23;;;;;;;;;;;;;;;:27;;;;4123:15;4099:9;:21;4109:10;4099:21;;;;;;;;;;;;;;;:39;;;;4156:33;4169:10;;4181:7;4156:12;:33::i;:::-;4143:10;:46;;;;4194:6;;;;;;;;;;;:15;;:20;4210:3;4194:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4227:10;4219:28;;:57;4248:27;4261:8;4271:3;4248:12;:27::i;:::-;4219:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3909:372;;;3882:399::o;5702:134::-;417:9:1;:7;:9::i;:::-;409:18;;;;;;5776:1:0::1;5762:10;;:15;5754:24;;;::::0;::::1;;5797:4;5783:11;;:18;;;;;;;;;;;;;;;;;;5819:12;5806:10;:25;;;;5702:134::o:0;3092:785::-;3144:11;;;;;;;;;;;3136:20;;;;;;3174:10;3167:17;;:3;:17;;;3163:51;;3206:1;3192:16;;3163:51;3257:1;3224:35;;:9;:21;3234:10;3224:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;:74;;;;;3288:10;3263:35;;:9;:21;3273:10;3263:21;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;3224:74;3220:119;;;3330:3;3306:9;:21;3316:10;3306:21;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3220:119;3345:16;3364:21;3374:10;3364:9;:21::i;:::-;3345:40;;3390:17;3410:45;3423:8;3433:21;;3410:12;:45::i;:::-;3390:65;;3489:51;3502:14;:26;3517:10;3502:26;;;;;;;;;;;;;;;;3530:9;3489:12;:51::i;:::-;3460:14;:26;3475:10;3460:26;;;;;;;;;;;;;;;:80;;;;3571:1;3545:11;:23;3557:10;3545:23;;;;;;;;;;;;;;;:27;;;;3601:15;3577:9;:21;3587:10;3577:21;;;;;;;;;;;;;;;:39;;;;3684:75;3697:11;:34;3709:9;:21;3719:10;3709:21;;;;;;;;;;;;;;;;;;;;;;;;;3697:34;;;;;;;;;;;;;;;;3733:25;3746:8;3756:1;3733:12;:25::i;:::-;3684:12;:75::i;:::-;3647:11;:34;3659:9;:21;3669:10;3659:21;;;;;;;;;;;;;;;;;;;;;;;;;3647:34;;;;;;;;;;;;;;;:112;;;;3821:51;3834:10;;3846:25;3859:8;3869:1;3846:12;:25::i;:::-;3821:12;:51::i;:::-;3808:10;:64;;;;3131:746;;3092:785;:::o;4286:178::-;4344:7;4358:15;4376:14;4386:3;4376:9;:14::i;:::-;4358:32;;4395:16;4414:25;4431:7;4414:16;:25::i;:::-;4395:44;;4451:8;4444:15;;;;4286:178;;;:::o;5936:100::-;5991:7;6012:14;:19;6027:3;6012:19;;;;;;;;;;;;;;;;6005:26;;5936:100;;;:::o;531:111:1:-;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;5428:134:0:-;5493:7;5514:43;5530:3;5535:21;5514:15;:43::i;:::-;5507:50;;5428:134;;;:::o;308:70:1:-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;5118:142:0:-;5179:7;5200:55;5215:4;5221:10;;5233:21;5200:14;:55::i;:::-;5193:62;;5118:142;;;:::o;443:83:1:-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;6183:241:0:-;6248:7;6262:21;6286:73;6290:21;;6313:45;6326:15;6343:9;:14;6353:3;6343:14;;;;;;;;;;;;;;;;6313:12;:45::i;:::-;6286:3;:73::i;:::-;6262:97;;6371:48;6384:13;6399:14;:19;6414:3;6399:19;;;;;;;;;;;;;;;;6371:12;:48::i;:::-;6364:55;;;6183:241;;;:::o;4469:397::-;4527:11;;;;;;;;;;;4519:20;;;;;;4544:18;4565:74;4581:9;4592:46;4605:21;4628:9;4592:12;:46::i;:::-;4565:15;:74::i;:::-;4544:95;;4657:44;4670:10;4682:18;4689:10;4682:6;:18::i;:::-;4657:12;:44::i;:::-;4644:57;;4706:11;4720:17;4727:9;4720:6;:17::i;:::-;4706:31;;4742:6;;;;;;;;;;;:15;;:20;4758:3;4742:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4793:49;4806:11;:23;4818:10;4806:23;;;;;;;;;;;;;;;;4831:10;4793:12;:49::i;:::-;4767:11;:23;4779:10;4767:23;;;;;;;;;;;;;;;:75;;;;4847:14;4857:3;4847:9;:14::i;:::-;4514:352;;4469:397;:::o;647:100:1:-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;4871:242:0:-;4953:7;4974:134;4987:21;5000:3;;5005:2;4987:12;:21::i;:::-;5010:97;5023:4;;5029:77;5042:59;5055:21;5068:3;;5073:2;5055:12;:21::i;:::-;5078:22;5091:4;;5097:2;5078:12;:22::i;:::-;5042:12;:59::i;:::-;5103:2;5029:12;:77::i;:::-;5010:12;:97::i;:::-;4974:12;:134::i;:::-;4967:141;;4871:242;;;;;:::o;2070:89:2:-;2128:7;2153:1;2149;:5;;;;:::i;:::-;2142:12;;2070:89;;;;:::o;5567:130:0:-;5621:7;5642:50;5655:31;5668:6;5676:9;;5655:12;:31::i;:::-;5688:3;5642:12;:50::i;:::-;5635:57;;5567:130;;;:::o;2409:89:2:-;2467:7;2492:1;2488;:5;;;;:::i;:::-;2481:12;;2409:89;;;;:::o;3081:::-;3139:7;3164:1;3160;:5;;;;:::i;:::-;3153:12;;3081:89;;;;:::o;6429:96:0:-;6486:7;6511:1;6507;:5;:13;;6519:1;6507:13;;;6515:1;6507:13;6500:20;;6429:96;;;;:::o;2724:89:2:-;2782:7;2807:1;2803;:5;;;;:::i;:::-;2796:12;;2724:89;;;;:::o;752:166:1:-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:122::-;1829:24;1847:5;1829:24;:::i;:::-;1822:5;1819:35;1809:63;;1868:1;1865;1858:12;1809:63;1756:122;:::o;1884:139::-;1930:5;1968:6;1955:20;1946:29;;1984:33;2011:5;1984:33;:::i;:::-;1884:139;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:90::-;3085:7;3128:5;3121:13;3114:21;3103:32;;3051:90;;;:::o;3147:109::-;3228:21;3243:5;3228:21;:::i;:::-;3223:3;3216:34;3147:109;;:::o;3262:210::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:65;3462:1;3451:9;3447:17;3438:6;3400:65;:::i;:::-;3262:210;;;;:::o;3478:180::-;3526:77;3523:1;3516:88;3623:4;3620:1;3613:15;3647:4;3644:1;3637:15;3664:191;3704:3;3723:20;3741:1;3723:20;:::i;:::-;3718:25;;3757:20;3775:1;3757:20;:::i;:::-;3752:25;;3800:1;3797;3793:9;3786:16;;3821:3;3818:1;3815:10;3812:36;;;3828:18;;:::i;:::-;3812:36;3664:191;;;;:::o;3861:194::-;3901:4;3921:20;3939:1;3921:20;:::i;:::-;3916:25;;3955:20;3973:1;3955:20;:::i;:::-;3950:25;;3999:1;3996;3992:9;3984:17;;4023:1;4017:4;4014:11;4011:37;;;4028:18;;:::i;:::-;4011:37;3861:194;;;;:::o;4061:180::-;4109:77;4106:1;4099:88;4206:4;4203:1;4196:15;4230:4;4227:1;4220:15;4247:185;4287:1;4304:20;4322:1;4304:20;:::i;:::-;4299:25;;4338:20;4356:1;4338:20;:::i;:::-;4333:25;;4377:1;4367:35;;4382:18;;:::i;:::-;4367:35;4424:1;4421;4417:9;4412:14;;4247:185;;;;:::o;4438:410::-;4478:7;4501:20;4519:1;4501:20;:::i;:::-;4496:25;;4535:20;4553:1;4535:20;:::i;:::-;4530:25;;4590:1;4587;4583:9;4612:30;4630:11;4612:30;:::i;:::-;4601:41;;4791:1;4782:7;4778:15;4775:1;4772:22;4752:1;4745:9;4725:83;4702:139;;4821:18;;:::i;:::-;4702:139;4486:362;4438:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "979600",
								"executionCost": "162289",
								"totalCost": "1141889"
							},
							"external": {
								"buyEggs(address)": "infinite",
								"calculateEggBuy(uint256,uint256)": "infinite",
								"calculateEggBuySimple(uint256)": "infinite",
								"calculateEggSell(uint256)": "infinite",
								"furnaceRewards(address)": "infinite",
								"getBalance()": "358",
								"getEggsSinceLastHatch(address)": "infinite",
								"getMyEggs(address)": "infinite",
								"getMyMiners(address)": "2918",
								"hatchEggs(address)": "infinite",
								"isOwner()": "2512",
								"owner()": "2582",
								"renounceOwnership()": "29927",
								"seedMarket()": "50847",
								"sellEggs()": "infinite",
								"transferOwnership(address)": "30746"
							},
							"internal": {
								"calculateTrade(uint256,uint256,uint256)": "infinite",
								"devFee(uint256)": "infinite",
								"min(uint256,uint256)": "63"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2459,
									"end": 6528,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2577,
									"end": 2584,
									"name": "PUSH",
									"source": 0,
									"value": "107AC0"
								},
								{
									"begin": 2537,
									"end": 2584,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2537,
									"end": 2584,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 2662,
									"name": "PUSH",
									"source": 0,
									"value": "2710"
								},
								{
									"begin": 2635,
									"end": 2662,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2635,
									"end": 2662,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2689,
									"end": 2693,
									"name": "PUSH",
									"source": 0,
									"value": "1388"
								},
								{
									"begin": 2666,
									"end": 2693,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2666,
									"end": 2693,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2725,
									"end": 2726,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3035,
									"end": 3087,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3081,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3054,
									"end": 3082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2459,
									"end": 6528,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049d105fea2f80899fb5f37b4a00e14c1d0794908e897bb4ff2a53db0999504d364736f6c63430008180033",
									".code": [
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "D7C8843B"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "DB663865"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "7E56FDE5"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "8E316327"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "3C5F07CB"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "3C5F07CB"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "3EC862A8"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "450C9D7D"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4B634B06"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "26FD8422"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "2EF6A743"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "3955F0FE"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5841,
											"end": 5931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5841,
											"end": 5931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5265,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5265,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5265,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6041,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6041,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6041,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5702,
											"end": 5836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3092,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3092,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4286,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4286,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4286,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5936,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5936,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5936,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5428,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5428,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5428,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5118,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5118,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5118,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6183,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6183,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6183,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4469,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4469,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5926,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5898,
											"end": 5926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5898,
											"end": 5926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5385,
											"end": 5388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5370,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5418,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5370,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6128,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6168,
											"end": 6171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6146,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6146,
											"end": 6172,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6146,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6115,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6173,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6115,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6108,
											"end": 6173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6108,
											"end": 6173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6041,
											"end": 6178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3922,
											"end": 3933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3914,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3967,
											"end": 3977,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3957,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3957,
											"end": 3978,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3957,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4019,
											"end": 4026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4002,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4027,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4002,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 4027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4053,
											"end": 4061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4046,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4046,
											"end": 4062,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4046,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4078,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4138,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4119,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4138,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4169,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4169,
											"end": 4179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4181,
											"end": 4188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4156,
											"end": 4189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4143,
											"end": 4189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4189,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4194,
											"end": 4209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4210,
											"end": 4213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4237,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4248,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4261,
											"end": 4269,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4271,
											"end": 4274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4248,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4248,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4248,
											"end": 4275,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4248,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 4281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 4281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 4281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 4281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5702,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5762,
											"end": 5772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5777,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5754,
											"end": 5778,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5778,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5754,
											"end": 5778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5783,
											"end": 5794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5783,
											"end": 5794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5783,
											"end": 5801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "19254D3800"
										},
										{
											"begin": 5806,
											"end": 5816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5806,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5806,
											"end": 5831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5806,
											"end": 5831,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5806,
											"end": 5831,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3144,
											"end": 3155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3184,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3163,
											"end": 3214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3214,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3163,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3244,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3283,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3298,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3224,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3326,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3220,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3374,
											"end": 3384,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3364,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3385,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3364,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3423,
											"end": 3431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 3454,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3433,
											"end": 3454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3410,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3410,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3410,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3502,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3489,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3489,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3474,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3485,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3540,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3567,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3616,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3597,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3697,
											"end": 3708,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3746,
											"end": 3754,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3733,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3733,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3733,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3684,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3759,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3684,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3679,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3759,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3834,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3834,
											"end": 3844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3859,
											"end": 3867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3846,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3871,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3846,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3821,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 3872,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3821,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3808,
											"end": 3872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3872,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4386,
											"end": 4389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4376,
											"end": 4390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4390,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4376,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4358,
											"end": 4390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4431,
											"end": 4438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4414,
											"end": 4439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4414,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6012,
											"end": 6026,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6030,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6031,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6005,
											"end": 6031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6005,
											"end": 6031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5936,
											"end": 6036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5493,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5530,
											"end": 5533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5535,
											"end": 5556,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5514,
											"end": 5557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5557,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5514,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5507,
											"end": 5557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5428,
											"end": 5562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5254,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5200,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5255,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5200,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6290,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6290,
											"end": 6311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6356,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6313,
											"end": 6358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6313,
											"end": 6358,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6313,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6286,
											"end": 6359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6359,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6286,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6384,
											"end": 6397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6413,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6417,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6371,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6419,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6371,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4527,
											"end": 4538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4519,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4581,
											"end": 4590,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4592,
											"end": 4638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4638,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4592,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4565,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4565,
											"end": 4639,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4565,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4670,
											"end": 4680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4689,
											"end": 4699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4682,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4657,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4657,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4727,
											"end": 4736,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4720,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4737,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4720,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4742,
											"end": 4757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4758,
											"end": 4761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4806,
											"end": 4817,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4793,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4793,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4789,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4790,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4842,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4857,
											"end": 4860,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4847,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4861,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4847,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4987,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4987,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5008,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4987,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5042,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5055,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5091,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5091,
											"end": 5095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5078,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5100,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5078,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5042,
											"end": 5101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5101,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5042,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5105,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5029,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5106,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5029,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5010,
											"end": 5107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5010,
											"end": 5107,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5010,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4974,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4974,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4967,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4967,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 5113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 5113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2149,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5697,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5567,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5655,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5676,
											"end": 5685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5655,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 5655,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5691,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5642,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5642,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5692,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5642,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5567,
											"end": 5697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5567,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5567,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5567,
											"end": 5697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2488,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3160,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6429,
											"end": 6525,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6429,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6507,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6429,
											"end": 6525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2803,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1167,
											"end": 1169,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1164,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1170,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1173,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1318,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1446,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1641,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1642,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1720,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1829,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1854,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1870,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1975,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1984,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 1984,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2786,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2967,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3243,
											"end": 3248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3228,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3228,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3256,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3464,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3400,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3400,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3262,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3478,
											"end": 3658,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3478,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3523,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3620,
											"end": 3621,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3644,
											"end": 3645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3723,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 3723,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3743,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3757,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3757,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 3825,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3828,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3812,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4055,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3861,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3901,
											"end": 3905,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3921,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 3921,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 3941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 3941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3955,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3975,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3955,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3975,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4014,
											"end": 4025,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4011,
											"end": 4048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4028,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4011,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4241,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4061,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 4186,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4187,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4206,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4196,
											"end": 4211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4235,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4432,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4247,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4304,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4304,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4304,
											"end": 4324,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4304,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4324,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4356,
											"end": 4357,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4338,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4367,
											"end": 4402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4382,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4402,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4367,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4424,
											"end": 4425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4426,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4848,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4438,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4501,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4501,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4535,
											"end": 4555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4630,
											"end": 4641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4612,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4642,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4612,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4782,
											"end": 4789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4772,
											"end": 4794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4725,
											"end": 4808,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4702,
											"end": 4841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4821,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 4841,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4702,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4486,
											"end": 4848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4848,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastFurnace.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyEggs(address)": "db663865",
							"calculateEggBuy(uint256,uint256)": "26fd8422",
							"calculateEggBuySimple(uint256)": "7e56fde5",
							"calculateEggSell(uint256)": "8e316327",
							"furnaceRewards(address)": "450c9d7d",
							"getBalance()": "12065fe0",
							"getEggsSinceLastHatch(address)": "d7c8843b",
							"getMyEggs(address)": "2ef6a743",
							"getMyMiners(address)": "4b634b06",
							"hatchEggs(address)": "3ec862a8",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"seedMarket()": "3c5f07cb",
							"sellEggs()": "3955f0fe",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"buyEggs\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateEggBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateEggBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eggs\",\"type\":\"uint256\"}],\"name\":\"calculateEggSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"furnaceRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getEggsSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyEggs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"hatchEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastFurnace.sol\":\"BlastFurnace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastFurnace.sol\":{\"keccak256\":\"0xa3757865959344a90266360f1069d6a04e8c124e0c63660e3501d787c931cac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44d1e1e71ba7e627e0cec59d4d3157185346ca0401e14f48dc7dc884b6420002\",\"dweb:/ipfs/QmToJA9N7SqNfmVgJM17zfSWYGg4sPyf6TDVidUnqGWu3S\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 588,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 33,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "EGGS_TO_HATCH_1MINERS",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 36,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "PSN",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 39,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "PSNH",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 42,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "devFeeVal",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 45,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "initialized",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 47,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "recAdd",
								"offset": 1,
								"slot": "5",
								"type": "t_address_payable"
							},
							{
								"astId": 51,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "hatcheryMiners",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 55,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "claimedEggs",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 59,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "lastHatch",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 63,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "referrals",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 65,
								"contract": "contracts/BlastFurnace.sol:BlastFurnace",
								"label": "marketEggs",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlastFurnace.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlastFurnace.sol\":{\"keccak256\":\"0xa3757865959344a90266360f1069d6a04e8c124e0c63660e3501d787c931cac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44d1e1e71ba7e627e0cec59d4d3157185346ca0401e14f48dc7dc884b6420002\",\"dweb:/ipfs/QmToJA9N7SqNfmVgJM17zfSWYGg4sPyf6TDVidUnqGWu3S\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								}
							],
							"name": "OwnershipRenounced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":260:303  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":288:298  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":279:285  _owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":279:298  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":61:921  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n    tag_8:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_22\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":606:612  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":587:613  OwnershipRenounced(_owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Ownable.sol\":635:636  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":618:624  _owner */\n      dup1\n      0x00\n        /* \"contracts/Ownable.sol\":618:637  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":531:642  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n    tag_10:\n        /* \"contracts/Ownable.sol\":346:353  address */\n      0x00\n        /* \"contracts/Ownable.sol\":367:373  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":360:373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":308:378  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Ownable.sol\":483:487  bool */\n      0x00\n        /* \"contracts/Ownable.sol\":515:521  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":501:511  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":501:521  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":494:521  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":443:526  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      tag_28\n        /* \"contracts/Ownable.sol\":417:424  isOwner */\n      tag_14\n        /* \"contracts/Ownable.sol\":417:426  isOwner() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/Ownable.sol\":409:427  require(isOwner()) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      tag_31\n        /* \"contracts/Ownable.sol\":733:741  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":714:732  _transferOwnership */\n      tag_32\n        /* \"contracts/Ownable.sol\":714:742  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownable.sol\":647:747  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n    tag_32:\n        /* \"contracts/Ownable.sol\":840:841  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":820:828  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":820:842  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Ownable.sol\":812:843  require(newOwner != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"contracts/Ownable.sol\":882:890  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":874:880  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":853:891  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":905:913  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":896:902  _owner */\n      0x00\n      dup1\n        /* \"contracts/Ownable.sol\":896:913  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":752:918  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_48\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_50\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_52\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_38:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_39:\n        /* \"#utility.yul\":770:791   */\n      tag_55\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_16:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_57\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_41:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_43:\n        /* \"#utility.yul\":1420:1444   */\n      tag_62\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_63:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_44:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_65\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_19:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_68\n      tag_41\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1696:1815   */\n    tag_67:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_69\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_607": {
									"entryPoint": null,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104078061005c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:1:-:0;;;260:43;;;;;;;;;;288:10;279:6;;:19;;;;;;;;;;;;;;;;;;61:860;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_688": {
									"entryPoint": 507,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_635": {
									"entryPoint": 394,
									"id": 635,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_615": {
									"entryPoint": 355,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_652": {
									"entryPoint": 176,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_664": {
									"entryPoint": 479,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1952:3",
										"nodeType": "YulBlock",
										"src": "0:1952:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "635:48:3",
													"nodeType": "YulBlock",
													"src": "635:48:3",
													"statements": [
														{
															"nativeSrc": "645:32:3",
															"nodeType": "YulAssignment",
															"src": "645:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:3"
																		},
																		"nativeSrc": "663:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:3"
																},
																"nativeSrc": "656:21:3",
																"nodeType": "YulFunctionCall",
																"src": "656:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:3",
														"nodeType": "YulTypedName",
														"src": "617:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:3",
														"nodeType": "YulTypedName",
														"src": "627:7:3",
														"type": ""
													}
												],
												"src": "593:90:3"
											},
											{
												"body": {
													"nativeSrc": "748:50:3",
													"nodeType": "YulBlock",
													"src": "748:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:3"
																		},
																		"nativeSrc": "770:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:3"
																},
																"nativeSrc": "758:34:3",
																"nodeType": "YulFunctionCall",
																"src": "758:34:3"
															},
															"nativeSrc": "758:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:3",
														"nodeType": "YulTypedName",
														"src": "736:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:3",
														"nodeType": "YulTypedName",
														"src": "743:3:3",
														"type": ""
													}
												],
												"src": "689:109:3"
											},
											{
												"body": {
													"nativeSrc": "896:118:3",
													"nodeType": "YulBlock",
													"src": "896:118:3",
													"statements": [
														{
															"nativeSrc": "906:26:3",
															"nodeType": "YulAssignment",
															"src": "906:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:3",
																		"nodeType": "YulLiteral",
																		"src": "929:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:3"
																},
																"nativeSrc": "914:18:3",
																"nodeType": "YulFunctionCall",
																"src": "914:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:3"
																		},
																		"nativeSrc": "989:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:3"
																},
																"nativeSrc": "942:65:3",
																"nodeType": "YulFunctionCall",
																"src": "942:65:3"
															},
															"nativeSrc": "942:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:3",
														"nodeType": "YulTypedName",
														"src": "868:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:3",
														"nodeType": "YulTypedName",
														"src": "880:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:3",
														"nodeType": "YulTypedName",
														"src": "891:4:3",
														"type": ""
													}
												],
												"src": "804:210:3"
											},
											{
												"body": {
													"nativeSrc": "1060:35:3",
													"nodeType": "YulBlock",
													"src": "1060:35:3",
													"statements": [
														{
															"nativeSrc": "1070:19:3",
															"nodeType": "YulAssignment",
															"src": "1070:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:3"
																},
																"nativeSrc": "1080:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:3",
														"nodeType": "YulTypedName",
														"src": "1053:6:3",
														"type": ""
													}
												],
												"src": "1020:75:3"
											},
											{
												"body": {
													"nativeSrc": "1190:28:3",
													"nodeType": "YulBlock",
													"src": "1190:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:3"
																},
																"nativeSrc": "1200:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:3"
															},
															"nativeSrc": "1200:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:3"
											},
											{
												"body": {
													"nativeSrc": "1313:28:3",
													"nodeType": "YulBlock",
													"src": "1313:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:3"
																},
																"nativeSrc": "1323:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:3"
															},
															"nativeSrc": "1323:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:3"
											},
											{
												"body": {
													"nativeSrc": "1390:79:3",
													"nodeType": "YulBlock",
													"src": "1390:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:3",
																"nodeType": "YulBlock",
																"src": "1447:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:3"
																			},
																			"nativeSrc": "1449:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:3"
																		},
																		"nativeSrc": "1449:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:3"
																				},
																				"nativeSrc": "1420:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:3"
																		},
																		"nativeSrc": "1410:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:3"
																},
																"nativeSrc": "1403:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:3"
															},
															"nativeSrc": "1400:63:3",
															"nodeType": "YulIf",
															"src": "1400:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:3",
														"nodeType": "YulTypedName",
														"src": "1383:5:3",
														"type": ""
													}
												],
												"src": "1347:122:3"
											},
											{
												"body": {
													"nativeSrc": "1527:87:3",
													"nodeType": "YulBlock",
													"src": "1527:87:3",
													"statements": [
														{
															"nativeSrc": "1537:29:3",
															"nodeType": "YulAssignment",
															"src": "1537:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:3"
																},
																"nativeSrc": "1546:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:3"
																},
																"nativeSrc": "1575:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:3"
															},
															"nativeSrc": "1575:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:3",
														"nodeType": "YulTypedName",
														"src": "1505:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:3",
														"nodeType": "YulTypedName",
														"src": "1513:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:3",
														"nodeType": "YulTypedName",
														"src": "1521:5:3",
														"type": ""
													}
												],
												"src": "1475:139:3"
											},
											{
												"body": {
													"nativeSrc": "1686:263:3",
													"nodeType": "YulBlock",
													"src": "1686:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:3",
																"nodeType": "YulBlock",
																"src": "1732:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:3"
																			},
																			"nativeSrc": "1734:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:3"
																		},
																		"nativeSrc": "1734:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:3"
																		},
																		"nativeSrc": "1703:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:3"
																},
																"nativeSrc": "1699:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:3"
															},
															"nativeSrc": "1696:119:3",
															"nodeType": "YulIf",
															"src": "1696:119:3"
														},
														{
															"nativeSrc": "1825:117:3",
															"nodeType": "YulBlock",
															"src": "1825:117:3",
															"statements": [
																{
																	"nativeSrc": "1840:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:3"
																				},
																				"nativeSrc": "1900:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:3"
																		},
																		"nativeSrc": "1879:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:3",
														"nodeType": "YulTypedName",
														"src": "1656:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:3",
														"nodeType": "YulTypedName",
														"src": "1667:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:3",
														"nodeType": "YulTypedName",
														"src": "1679:6:3",
														"type": ""
													}
												],
												"src": "1620:329:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063715018a61461004e5780638da5cb5b146100585780638f32d59b14610076578063f2fde38b14610094575b5f80fd5b6100566100b0565b005b610060610163565b60405161006d919061032c565b60405180910390f35b61007e61018a565b60405161008b919061035f565b60405180910390f35b6100ae60048036038101906100a991906103a6565b6101df565b005b6100b861018a565b6100c0575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a25f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101e761018a565b6101ef575f80fd5b6101f8816101fb565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610232575f80fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610316826102ed565b9050919050565b6103268161030c565b82525050565b5f60208201905061033f5f83018461031d565b92915050565b5f8115159050919050565b61035981610345565b82525050565b5f6020820190506103725f830184610350565b92915050565b5f80fd5b6103858161030c565b811461038f575f80fd5b50565b5f813590506103a08161037c565b92915050565b5f602082840312156103bb576103ba610378565b5b5f6103c884828501610392565b9150509291505056fea26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x18A JUMP JUMPDEST PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1F8 DUP2 PUSH2 0x1FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x316 DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33F PUSH0 DUP4 ADD DUP5 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x359 DUP2 PUSH2 0x345 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x372 PUSH0 DUP4 ADD DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x30C JUMP JUMPDEST DUP2 EQ PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C8 DUP5 DUP3 DUP6 ADD PUSH2 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xA9 DUP5 EXTCODESIZE 0xBF 0xC9 0xB6 0xE2 SSTORE PUSH21 0x69FBD2BFEE41973E184CDB666EC43705A494F535F8 DUP9 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61:860:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:111;;;:::i;:::-;;308:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;647:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;531:111;417:9;:7;:9::i;:::-;409:18;;;;;;606:6:::1;::::0;::::1;;;;;;;;587:26;;;;;;;;;;;;635:1;618:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;531:111::o:0;308:70::-;346:7;367:6;;;;;;;;;;;360:13;;308:70;:::o;443:83::-;483:4;515:6;;;;;;;;;;;501:20;;:10;:20;;;494:27;;443:83;:::o;647:100::-;417:9;:7;:9::i;:::-;409:18;;;;;;714:28:::1;733:8;714:18;:28::i;:::-;647:100:::0;:::o;752:166::-;840:1;820:22;;:8;:22;;;812:31;;;;;;882:8;853:38;;874:6;;;;;;;;;;853:38;;;;;;;;;;;;905:8;896:6;;:17;;;;;;;;;;;;;;;;;;752:166;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "206200",
								"executionCost": "24514",
								"totalCost": "230714"
							},
							"external": {
								"isOwner()": "2512",
								"owner()": "2515",
								"renounceOwnership()": "29882",
								"transferOwnership(address)": "30702"
							},
							"internal": {
								"_transferOwnership(address)": "27997"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 303,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 260,
									"end": 303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 298,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 279,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 285,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 279,
									"end": 298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 279,
									"end": 298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 61,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 921,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aa9843bbfc9b6e2557469fbd2bfee41973e184cdb666ec43705a494f535f88864736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "8F32D59B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 921,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 531,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "F8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 613,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 360,
											"end": 373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 443,
											"end": 526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 515,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 511,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 501,
											"end": 521,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 494,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 494,
											"end": 521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 417,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 409,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 733,
											"end": 741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 714,
											"end": 742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 714,
											"end": 742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 752,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 820,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 820,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 820,
											"end": 842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 812,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 874,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 891,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 905,
											"end": 913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 896,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 752,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastFurnace.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xafa70445c6f3c9ee3078932e981089b2b597a05fd2b37755046e4f82090b2a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75ed7ccf82e7f2a4cda6b4e307d279f9d7d37d510fdd0d175473ce020014728\",\"dweb:/ipfs/QmQxnqNAfogYuQMtQ9GUun9VXX8TVt4a9cCHCmERMJzfWT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 588,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":61:5718  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":61:5718  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH24 0x3954B2506FD2555C37DD4481A8114673A049FC165BB79E1A PUSH7 0x855F7C61466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "61:5657:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH24 0x3954B2506FD2555C37DD4481A8114673A049FC165BB79E1A PUSH7 0x855F7C61466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "61:5657:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 61,
									"end": 5718,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011773954b2506fd2555c37dd4481a8114673a049fc165bb79e1a66855f7c614664736f6c63430008180033",
									".code": [
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 61,
											"end": 5718,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/BlastFurnace.sol",
								"contracts/Ownable.sol",
								"contracts/libraries/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x253745225d914ef5ab53ca81d88526a6e2591ff4dc44e602fa1481c14980e978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a535aa3d2394ca9cc933d940cf2395827b021d469afd17791f48d66b5147f4d1\",\"dweb:/ipfs/QmPpAXfzRCzVe6JUrD1FZwNx7yCEW917QtG468a9uCFntG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BlastFurnace.sol": {
				"ast": {
					"absolutePath": "contracts/BlastFurnace.sol",
					"exportedSymbols": {
						"BlastFurnace": [
							584
						],
						"Context": [
							23
						],
						"Ownable": [
							689
						],
						"SafeMath": [
							1000
						]
					},
					"id": 585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "1640:24:0"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 585,
							"sourceUnit": 690,
							"src": "1666:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 585,
							"sourceUnit": 1001,
							"src": "1691:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "1729:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "Context",
							"nameLocation": "2254:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "2328:27:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 9,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2340:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2344:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2340:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 8,
												"id": 11,
												"nodeType": "Return",
												"src": "2333:17:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "2275:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2285:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "2319:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:9:0"
									},
									"scope": 23,
									"src": "2266:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "2427:25:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 18,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2439:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2443:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2439:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 17,
												"id": 20,
												"nodeType": "Return",
												"src": "2432:15:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2369:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "2411:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2411:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:16:0"
									},
									"scope": 23,
									"src": "2360:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 585,
							"src": "2236:219:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nameLocations": [
											"2484:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 23,
										"src": "2484:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "2484:7:0"
								},
								{
									"baseName": {
										"id": 26,
										"name": "Ownable",
										"nameLocations": [
											"2493:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "2493:7:0"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "2493:7:0"
								}
							],
							"canonicalName": "BlastFurnace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 584,
							"linearizedBaseContracts": [
								584,
								689,
								23
							],
							"name": "BlastFurnace",
							"nameLocation": "2468:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 30,
									"libraryName": {
										"id": 28,
										"name": "SafeMath",
										"nameLocations": [
											"2511:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1000,
										"src": "2511:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "2505:27:0",
									"typeName": {
										"id": 29,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2524:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "EGGS_TO_HATCH_1MINERS",
									"nameLocation": "2553:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2537:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303830303030",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2577:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1080000_by_1",
											"typeString": "int_const 1080000"
										},
										"value": "1080000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "PSN",
									"nameLocation": "2651:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2635:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2635:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2657:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "PSNH",
									"nameLocation": "2682:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2666:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2666:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 38,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2689:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "devFeeVal",
									"nameLocation": "2713:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2697:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2697:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2725:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "2743:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2730:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 43,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2730:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 44,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2757:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "recAdd",
									"nameLocation": "2790:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2766:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 46,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2766:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "hatcheryMiners",
									"nameLocation": "2836:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2800:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 50,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 48,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2808:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2800:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 49,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2819:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 55,
									"mutability": "mutable",
									"name": "claimedEggs",
									"nameLocation": "2890:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2854:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 54,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 52,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2862:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2854:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 53,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2873:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 59,
									"mutability": "mutable",
									"name": "lastHatch",
									"nameLocation": "2941:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2905:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 58,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 56,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2913:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2905:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 57,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 63,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "2990:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "2954:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 62,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 60,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2962:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2954:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 61,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2973:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 65,
									"mutability": "mutable",
									"name": "marketEggs",
									"nameLocation": "3019:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 584,
									"src": "3003:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 64,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3003:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "3049:38:0",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "recAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "3054:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3071:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3075:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3063:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 69,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3063:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3063:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3054:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "3054:28:0"
											}
										]
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3046:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:0:0"
									},
									"scope": 584,
									"src": "3035:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "3131:746:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3144:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "3136:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 86,
														"name": "ref",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3167:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 87,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3174:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3178:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3174:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3167:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 98,
												"nodeType": "IfStatement",
												"src": "3163:51:0",
												"trueBody": {
													"id": 97,
													"nodeType": "Block",
													"src": "3186:28:0",
													"statements": [
														{
															"expression": {
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "3192:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3206:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3198:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 91,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3198:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3198:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3192:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 96,
															"nodeType": "ExpressionStatement",
															"src": "3192:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 99,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3224:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 102,
															"indexExpression": {
																"expression": {
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3234:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3238:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3234:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3224:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3257:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 103,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3249:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3224:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 108,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3263:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 111,
															"indexExpression": {
																"expression": {
																	"id": 109,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3273:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3277:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3273:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3263:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3288:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3292:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3288:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3263:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3224:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "IfStatement",
												"src": "3220:119:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "3300:39:0",
													"statements": [
														{
															"expression": {
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 116,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "3306:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 119,
																	"indexExpression": {
																		"expression": {
																			"id": 117,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3316:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3320:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3316:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3306:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 120,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "3330:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3306:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "3306:27:0"
														}
													]
												}
											},
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "eggsUsed",
														"nameLocation": "3353:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "3345:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3374:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3378:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3374:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 127,
														"name": "getMyEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "3364:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3364:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3345:40:0"
											},
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "newMiners",
														"nameLocation": "3398:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "3390:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"arguments": [
														{
															"id": 136,
															"name": "eggsUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 137,
															"name": "EGGS_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "3433:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 134,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "3410:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3419:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "3410:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3390:65:0"
											},
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 140,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "3460:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 143,
														"indexExpression": {
															"expression": {
																"id": 141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3475:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3479:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3475:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3460:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 146,
																	"name": "hatcheryMiners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "3502:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 149,
																"indexExpression": {
																	"expression": {
																		"id": 147,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3517:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3521:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3517:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3502:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 150,
																"name": "newMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "3530:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 144,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "3489:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3498:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3489:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3489:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3460:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3460:80:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 154,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3545:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 157,
														"indexExpression": {
															"expression": {
																"id": 155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3557:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3561:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3557:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3545:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3571:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3545:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "3545:27:0"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 161,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "3577:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 164,
														"indexExpression": {
															"expression": {
																"id": 162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3587:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3591:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3587:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3577:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 165,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3607:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3601:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3577:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "3577:39:0"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 169,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3647:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 174,
														"indexExpression": {
															"baseExpression": {
																"id": 170,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3659:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 173,
															"indexExpression": {
																"expression": {
																	"id": 171,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3669:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3673:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3669:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3659:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3647:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 177,
																	"name": "claimedEggs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "3697:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 182,
																"indexExpression": {
																	"baseExpression": {
																		"id": 178,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "3709:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 181,
																	"indexExpression": {
																		"expression": {
																			"id": 179,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3719:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3723:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3719:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3709:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3697:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 185,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "3746:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "38",
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		}
																	],
																	"expression": {
																		"id": 183,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "3733:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3742:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 909,
																	"src": "3733:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3733:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 175,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "3684:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3693:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3684:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3684:75:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3647:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "3647:112:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 191,
														"name": "marketEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3808:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 194,
																"name": "marketEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "3834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 197,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "3859:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "35",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		}
																	],
																	"expression": {
																		"id": 195,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "3846:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3855:3:0",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 909,
																	"src": "3846:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3846:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 192,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "3821:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3830:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "3821:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3821:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3808:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "3808:64:0"
											}
										]
									},
									"functionSelector": "3ec862a8",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hatchEggs",
									"nameLocation": "3101:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "3119:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "3111:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3110:13:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3131:0:0"
									},
									"scope": 584,
									"src": "3092:785:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3909:372:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3922:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3914:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "3914:20:0"
											},
											{
												"assignments": [
													212
												],
												"declarations": [
													{
														"constant": false,
														"id": 212,
														"mutability": "mutable",
														"name": "hasEggs",
														"nameLocation": "3947:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3939:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 214,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3967:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3971:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3967:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "getMyEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "3957:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3957:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3939:39:0"
											},
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "eggValue",
														"nameLocation": "3991:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "3983:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3983:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"arguments": [
														{
															"id": 221,
															"name": "hasEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "4019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 220,
														"name": "calculateEggSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4002:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4002:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3983:44:0"
											},
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4040:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "4032:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [
														{
															"id": 227,
															"name": "eggValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "4053:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "4046:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4046:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4032:30:0"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 230,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "4067:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 233,
														"indexExpression": {
															"expression": {
																"id": 231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4079:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4083:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4079:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4067:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4093:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4067:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "4067:27:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 237,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4099:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 240,
														"indexExpression": {
															"expression": {
																"id": 238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4109:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4113:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4109:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4099:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 241,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4123:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4129:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4123:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4099:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "4099:39:0"
											},
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "marketEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "4143:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 248,
																"name": "marketEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "4169:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 249,
																"name": "hasEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "4181:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 246,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "4156:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4165:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "4156:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4156:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4143:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "4143:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "4210:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 253,
															"name": "recAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "4194:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4201:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4194:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4194:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 267,
																	"name": "eggValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4261:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 268,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "4271:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 265,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "4248:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4257:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 879,
																"src": "4248:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4248:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 261,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4227:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4231:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4227:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4219:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4219:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4219:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4239:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4219:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4219:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "4219:57:0"
											}
										]
									},
									"functionSelector": "3955f0fe",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellEggs",
									"nameLocation": "3891:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3899:2:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3909:0:0"
									},
									"scope": 584,
									"src": "3882:399:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "4353:111:0",
										"statements": [
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "hasEggs",
														"nameLocation": "4366:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "4358:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"id": 283,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "4386:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "getMyEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "4376:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4358:32:0"
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "eggValue",
														"nameLocation": "4403:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 294,
														"src": "4395:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 286,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"arguments": [
														{
															"id": 289,
															"name": "hasEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "calculateEggSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4414:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4414:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4395:44:0"
											},
											{
												"expression": {
													"id": 292,
													"name": "eggValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "4451:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 279,
												"id": 293,
												"nodeType": "Return",
												"src": "4444:15:0"
											}
										]
									},
									"functionSelector": "450c9d7d",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "furnaceRewards",
									"nameLocation": "4295:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "4318:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4310:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:13:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:9:0"
									},
									"scope": 584,
									"src": "4286:178:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "4514:352:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4527:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4519:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "4519:20:0"
											},
											{
												"assignments": [
													305
												],
												"declarations": [
													{
														"constant": false,
														"id": 305,
														"mutability": "mutable",
														"name": "eggsBought",
														"nameLocation": "4552:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "4544:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4585:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4581:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 313,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4613:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BlastFurnace_$584",
																					"typeString": "contract BlastFurnace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BlastFurnace_$584",
																					"typeString": "contract BlastFurnace"
																				}
																			],
																			"id": 312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4605:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 311,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4605:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4605:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4619:7:0",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "4605:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 316,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4628:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4632:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4628:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 309,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "4592:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4601:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 879,
																"src": "4592:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4592:46:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "calculateEggBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "4565:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4565:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4544:95:0"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 321,
														"name": "eggsBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "4644:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 324,
																"name": "eggsBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "4670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 326,
																		"name": "eggsBought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "4689:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 325,
																	"name": "devFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "4682:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4682:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 322,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "4657:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4666:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 879,
															"src": "4657:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4657:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4644:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4644:57:0"
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4714:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "4706:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4727:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4731:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4727:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "4720:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4758:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 338,
															"name": "recAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "4742:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4749:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4742:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4742:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "4742:20:0"
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 344,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "4767:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 347,
														"indexExpression": {
															"expression": {
																"id": 345,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4779:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4783:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4779:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4767:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 350,
																	"name": "claimedEggs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "4806:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"expression": {
																		"id": 351,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4818:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4822:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4818:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4806:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 354,
																"name": "eggsBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "4831:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 348,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "4793:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4802:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "4793:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4793:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4767:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4767:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "ref",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4857:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "hatchEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "4847:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4847:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "4847:14:0"
											}
										]
									},
									"functionSelector": "db663865",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyEggs",
									"nameLocation": "4478:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "ref",
												"nameLocation": "4494:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4486:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:13:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4514:0:0"
									},
									"scope": 584,
									"src": "4469:397:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "4962:151:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 378,
																	"name": "PSN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "5000:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 379,
																	"name": "bs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5005:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 376,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "4987:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4996:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 894,
																"src": "4987:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4987:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 383,
																	"name": "PSNH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "5023:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 390,
																							"name": "PSN",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 36,
																							"src": "5068:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 391,
																							"name": "rs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 367,
																							"src": "5073:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 388,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1000,
																							"src": "5055:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5064:3:0",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 894,
																						"src": "5055:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 392,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5055:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 395,
																							"name": "PSNH",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 39,
																							"src": "5091:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 396,
																							"name": "rt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 365,
																							"src": "5097:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 393,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1000,
																							"src": "5078:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5087:3:0",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 894,
																						"src": "5078:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 397,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5078:22:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 386,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "5042:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5051:3:0",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "5042:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5042:59:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 399,
																			"name": "rt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "5103:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 384,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "5029:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5038:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 909,
																		"src": "5029:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5029:77:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 381,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "5010:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5019:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 864,
																"src": "5010:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5010:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 374,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "4974:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4983:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "4974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4974:134:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 403,
												"nodeType": "Return",
												"src": "4967:141:0"
											}
										]
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTrade",
									"nameLocation": "4880:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "rt",
												"nameLocation": "4903:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4895:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "rs",
												"nameLocation": "4915:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4907:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "bs",
												"nameLocation": "4927:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4919:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:36:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4952:9:0"
									},
									"scope": 584,
									"src": "4871:242:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "5188:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "eggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "5215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 414,
															"name": "marketEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "5221:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 417,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5241:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BlastFurnace_$584",
																			"typeString": "contract BlastFurnace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BlastFurnace_$584",
																			"typeString": "contract BlastFurnace"
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5233:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5233:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5233:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5247:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5233:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "5200:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 411,
												"id": 421,
												"nodeType": "Return",
												"src": "5193:62:0"
											}
										]
									},
									"functionSelector": "8e316327",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEggSell",
									"nameLocation": "5127:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "eggs",
												"nameLocation": "5152:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "5144:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:14:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "5179:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5178:9:0"
									},
									"scope": 584,
									"src": "5118:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "5358:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 433,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "5385:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 434,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "5390:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 435,
															"name": "marketEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "5407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "5370:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5370:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "5363:55:0"
											}
										]
									},
									"functionSelector": "26fd8422",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEggBuy",
									"nameLocation": "5274:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "5298:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5290:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "contractBalance",
												"nameLocation": "5311:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5303:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5289:38:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:9:0"
									},
									"scope": 584,
									"src": "5265:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "5502:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "5530:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 450,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5543:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BlastFurnace_$584",
																			"typeString": "contract BlastFurnace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BlastFurnace_$584",
																			"typeString": "contract BlastFurnace"
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5535:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 448,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5535:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5535:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5549:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5535:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "calculateEggBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "5514:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5514:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 445,
												"id": 454,
												"nodeType": "Return",
												"src": "5507:50:0"
											}
										]
									},
									"functionSelector": "7e56fde5",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEggBuySimple",
									"nameLocation": "5437:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "5467:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5459:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5458:13:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:0"
									},
									"scope": 584,
									"src": "5428:134:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "5630:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 467,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "5668:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 468,
																	"name": "devFeeVal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "5676:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 465,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "5655:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5664:3:0",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 894,
																"src": "5655:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5655:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313030",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5688:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"id": 463,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "5642:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5651:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "5642:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 462,
												"id": 472,
												"nodeType": "Return",
												"src": "5635:57:0"
											}
										]
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "devFee",
									"nameLocation": "5576:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5591:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "5583:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:16:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "5621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5620:9:0"
									},
									"scope": 584,
									"src": "5567:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "5749:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "marketEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "5762:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5762:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5754:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "5754:24:0"
											},
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "5783:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5797:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5783:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5783:18:0"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 489,
														"name": "marketEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "5806:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313038303030303030303030",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_108000000000_by_1",
															"typeString": "int_const 108000000000"
														},
														"value": "108000000000"
													},
													"src": "5806:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "5806:25:0"
											}
										]
									},
									"functionSelector": "3c5f07cb",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 477,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 476,
												"name": "onlyOwner",
												"nameLocations": [
													"5739:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 624,
												"src": "5739:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5739:9:0"
										}
									],
									"name": "seedMarket",
									"nameLocation": "5711:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5721:2:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5749:0:0"
									},
									"scope": 584,
									"src": "5702:134:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "5893:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 501,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5913:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BlastFurnace_$584",
																	"typeString": "contract BlastFurnace"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BlastFurnace_$584",
																	"typeString": "contract BlastFurnace"
																}
															],
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 499,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5905:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5905:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5919:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5905:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 498,
												"id": 504,
												"nodeType": "Return",
												"src": "5898:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "5850:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5860:2:0"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5883:9:0"
									},
									"scope": 584,
									"src": "5841:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "6000:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 513,
														"name": "hatcheryMiners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "6012:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 515,
													"indexExpression": {
														"id": 514,
														"name": "adr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "6027:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6012:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 512,
												"id": 516,
												"nodeType": "Return",
												"src": "6005:26:0"
											}
										]
									},
									"functionSelector": "4b634b06",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyMiners",
									"nameLocation": "5945:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "5965:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "5957:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:13:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "5991:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:9:0"
									},
									"scope": 584,
									"src": "5936:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "6103:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 527,
																"name": "claimedEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "6128:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 529,
															"indexExpression": {
																"id": 528,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6140:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6128:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 531,
																	"name": "adr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "6168:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 530,
																"name": "getEggsSinceLastHatch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "6146:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6146:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 525,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "6115:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6124:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "6115:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6115:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 534,
												"nodeType": "Return",
												"src": "6108:65:0"
											}
										]
									},
									"functionSelector": "2ef6a743",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyEggs",
									"nameLocation": "6050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "6068:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6060:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:13:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "6094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6093:9:0"
									},
									"scope": 584,
									"src": "6041:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "6257:167:0",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "secondsPassed",
														"nameLocation": "6270:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "6262:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 546,
															"name": "EGGS_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "6290:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 549,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6326:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6332:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6326:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"id": 551,
																		"name": "lastHatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 59,
																		"src": "6343:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 553,
																	"indexExpression": {
																		"id": 552,
																		"name": "adr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "6353:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6343:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 547,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "6313:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6322:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 879,
																"src": "6313:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6313:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "6286:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "secondsPassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6384:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 560,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "6399:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 562,
															"indexExpression": {
																"id": 561,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "6414:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6399:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 557,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "6371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$1000_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6380:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 894,
														"src": "6371:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6371:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 542,
												"id": 564,
												"nodeType": "Return",
												"src": "6364:55:0"
											}
										]
									},
									"functionSelector": "d7c8843b",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEggsSinceLastHatch",
									"nameLocation": "6192:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "6222:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6214:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6213:13:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:9:0"
									},
									"scope": 584,
									"src": "6183:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "6495:30:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6507:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 576,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6511:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6507:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 579,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "6519:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6507:13:0",
													"trueExpression": {
														"id": 578,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "6515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "6500:20:0"
											}
										]
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6438:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6450:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6442:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6461:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6453:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6441:22:0"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6485:9:0"
									},
									"scope": 584,
									"src": "6429:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 585,
							"src": "2459:4069:0",
							"usedErrors": [],
							"usedEvents": [
								592,
								598
							]
						}
					],
					"src": "1640:4890:0"
				},
				"id": 0
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689
							],
							"name": "Ownable",
							"nameLocation": "70:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 588,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "98:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "82:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 587,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "f8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820",
									"id": 592,
									"name": "OwnershipRenounced",
									"nameLocation": "116:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "151:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "135:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:31:1"
									},
									"src": "110:56:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 598,
									"name": "OwnershipTransferred",
									"nameLocation": "177:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "214:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "198:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "245:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "229:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:57:1"
									},
									"src": "171:84:1"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "274:29:1",
										"statements": [
											{
												"expression": {
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 601,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "279:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 602,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "288:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "292:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "288:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "279:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "279:19:1"
											}
										]
									},
									"id": 607,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:0:1"
									},
									"scope": 689,
									"src": "260:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "355:23:1",
										"statements": [
											{
												"expression": {
													"id": 612,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "367:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 611,
												"id": 613,
												"nodeType": "Return",
												"src": "360:13:1"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "317:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "346:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:1"
									},
									"scope": 689,
									"src": "308:70:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "404:34:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 618,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "417:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "417:9:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "409:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "409:18:1"
											},
											{
												"id": 622,
												"nodeType": "PlaceholderStatement",
												"src": "432:1:1"
											}
										]
									},
									"id": 624,
									"name": "onlyOwner",
									"nameLocation": "392:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:1"
									},
									"src": "383:55:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "489:37:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 629,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "501:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "501:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 631,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "515:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "501:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 628,
												"id": 633,
												"nodeType": "Return",
												"src": "494:27:1"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "452:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:1"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "483:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:6:1"
									},
									"scope": 689,
									"src": "443:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "577:65:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 641,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 640,
														"name": "OwnershipRenounced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "587:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "582:31:1"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "618:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "627:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "627:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "627:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "618:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "618:19:1"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 638,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 637,
												"name": "onlyOwner",
												"nameLocations": [
													"567:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 624,
												"src": "567:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "567:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "540:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:1"
									},
									"scope": 689,
									"src": "531:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "709:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "733:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 659,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "714:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "714:28:1"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 657,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 656,
												"name": "onlyOwner",
												"nameLocations": [
													"699:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 624,
												"src": "699:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "699:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "656:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "682:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "674:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:18:1"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:1"
									},
									"scope": 689,
									"src": "647:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "807:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "820:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "840:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "832:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "832:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "832:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "820:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "812:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "812:31:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 679,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "874:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "882:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 678,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "853:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "EmitStatement",
												"src": "848:43:1"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 683,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "896:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 684,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "905:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "896:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "896:17:1"
											}
										]
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "761:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "788:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "780:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:18:1"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:0:1"
									},
									"scope": 689,
									"src": "752:166:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "61:860:1",
							"usedErrors": [],
							"usedEvents": [
								592,
								598
							]
						}
					],
					"src": "33:890:1"
				},
				"id": 1
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1000
						]
					},
					"id": 1001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1000,
							"linearizedBaseContracts": [
								1000
							],
							"name": "SafeMath",
							"nameLocation": "69:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "284:104:2",
										"statements": [
											{
												"id": 721,
												"nodeType": "UncheckedBlock",
												"src": "289:95:2",
												"statements": [
													{
														"assignments": [
															704
														],
														"declarations": [
															{
																"constant": false,
																"id": 704,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "313:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 721,
																"src": "305:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 703,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "305:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 708,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "317:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 706,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "317:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "305:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 709,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "332:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 710,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "332:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 716,
														"nodeType": "IfStatement",
														"src": "328:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "347:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "354:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 714,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "346:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 702,
															"id": 715,
															"nodeType": "Return",
															"src": "339:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "370:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 718,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "376:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 719,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "369:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 702,
														"id": 720,
														"nodeType": "Return",
														"src": "362:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "82:123:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "217:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "232:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "224:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "243:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "235:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:22:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "269:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:15:2"
									},
									"scope": 1000,
									"src": "208:180:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "599:85:2",
										"statements": [
											{
												"id": 749,
												"nodeType": "UncheckedBlock",
												"src": "604:76:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "624:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 736,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "628:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "624:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 742,
														"nodeType": "IfStatement",
														"src": "620:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "638:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 734,
															"id": 741,
															"nodeType": "Return",
															"src": "631:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "662:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 744,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "668:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 745,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "672:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 747,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "661:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 734,
														"id": 748,
														"nodeType": "Return",
														"src": "654:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "393:127:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "532:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "547:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "539:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "558:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "550:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:22:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "584:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "590:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:15:2"
									},
									"scope": 1000,
									"src": "523:161:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "897:349:2",
										"statements": [
											{
												"id": 791,
												"nodeType": "UncheckedBlock",
												"src": "902:340:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 763,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1128:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1133:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1128:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 770,
														"nodeType": "IfStatement",
														"src": "1124:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1144:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1150:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1143:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 762,
															"id": 769,
															"nodeType": "Return",
															"src": "1136:16:2"
														}
													},
													{
														"assignments": [
															772
														],
														"declarations": [
															{
																"constant": false,
																"id": 772,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1166:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 791,
																"src": "1158:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1158:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 776,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1170:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1174:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1170:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1158:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 777,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "1185:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 778,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "1189:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1185:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1185:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 786,
														"nodeType": "IfStatement",
														"src": "1181:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1205:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1212:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1204:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 762,
															"id": 785,
															"nodeType": "Return",
															"src": "1197:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1228:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 788,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "1234:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 789,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1227:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 762,
														"id": 790,
														"nodeType": "Return",
														"src": "1220:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "689:129:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "830:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "845:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "837:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "856:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "848:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:22:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "882:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "888:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:15:2"
									},
									"scope": 1000,
									"src": "821:425:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1460:86:2",
										"statements": [
											{
												"id": 819,
												"nodeType": "UncheckedBlock",
												"src": "1465:77:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "1485:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1490:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1485:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 812,
														"nodeType": "IfStatement",
														"src": "1481:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1501:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1508:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1500:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 804,
															"id": 811,
															"nodeType": "Return",
															"src": "1493:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1524:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 814,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "1530:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 815,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1534:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1530:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 817,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1523:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 804,
														"id": 818,
														"nodeType": "Return",
														"src": "1516:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "1251:130:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1393:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1408:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1400:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1419:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1411:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:22:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1451:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:15:2"
									},
									"scope": 1000,
									"src": "1384:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "1770:86:2",
										"statements": [
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "1775:77:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1795:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1795:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "1791:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1811:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1818:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1810:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 832,
															"id": 839,
															"nodeType": "Return",
															"src": "1803:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1834:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 842,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "1840:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 843,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "1844:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1840:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 845,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1833:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 832,
														"id": 846,
														"nodeType": "Return",
														"src": "1826:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1551:140:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "1703:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1718:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1710:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1729:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1721:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:22:2"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1755:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1755:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1761:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:15:2"
									},
									"scope": 1000,
									"src": "1694:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "2137:22:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "2149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2153:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 858,
												"id": 862,
												"nodeType": "Return",
												"src": "2142:12:2"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "1861:206:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2079:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2091:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2083:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2102:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2094:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:22:2"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2128:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:9:2"
									},
									"scope": 1000,
									"src": "2070:89:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "2476:22:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "2488:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 875,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2492:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 877,
												"nodeType": "Return",
												"src": "2481:12:2"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2164:242:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2418:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2430:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2422:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2441:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2433:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:22:2"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2467:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:9:2"
									},
									"scope": 1000,
									"src": "2409:89:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2791:22:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2803:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 890,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2807:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2803:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 892,
												"nodeType": "Return",
												"src": "2796:12:2"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "2503:218:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2733:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2745:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2737:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2756:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2748:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:22:2"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:9:2"
									},
									"scope": 1000,
									"src": "2724:89:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "3148:22:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 904,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "3160:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 905,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "3164:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3160:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 903,
												"id": 907,
												"nodeType": "Return",
												"src": "3153:12:2"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2818:260:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3090:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3102:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3094:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3113:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3105:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:22:2"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "3139:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:9:2"
									},
									"scope": 1000,
									"src": "3081:89:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "3665:22:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "3677:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 920,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3681:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3677:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 922,
												"nodeType": "Return",
												"src": "3670:12:2"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "3175:420:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "3607:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3619:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3611:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3630:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3622:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3610:22:2"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3656:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:9:2"
									},
									"scope": 1000,
									"src": "3598:89:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "4219:78:2",
										"statements": [
											{
												"id": 947,
												"nodeType": "UncheckedBlock",
												"src": "4224:69:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 937,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "4248:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 938,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "4253:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4248:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 940,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "4256:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 936,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4240:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4240:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 942,
														"nodeType": "ExpressionStatement",
														"src": "4240:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 943,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "4282:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 944,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "4286:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4282:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 935,
														"id": 946,
														"nodeType": "Return",
														"src": "4275:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "3692:429:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4133:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4145:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4137:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4156:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4148:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4173:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4159:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 930,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:50:2"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "4210:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4209:9:2"
									},
									"scope": 1000,
									"src": "4124:173:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "4851:77:2",
										"statements": [
											{
												"id": 972,
												"nodeType": "UncheckedBlock",
												"src": "4856:68:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 962,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "4880:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4884:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4880:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 965,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "4887:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 961,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4872:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4872:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 967,
														"nodeType": "ExpressionStatement",
														"src": "4872:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "4913:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "4917:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 960,
														"id": 971,
														"nodeType": "Return",
														"src": "4906:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "4302:451:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4765:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4777:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4769:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4788:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4780:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4805:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4791:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4791:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:50:2"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4842:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:9:2"
									},
									"scope": 1000,
									"src": "4756:172:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "5638:77:2",
										"statements": [
											{
												"id": 997,
												"nodeType": "UncheckedBlock",
												"src": "5643:68:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 987,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "5667:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5671:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5667:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 990,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "5674:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 986,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5659:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5659:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 992,
														"nodeType": "ExpressionStatement",
														"src": "5659:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 993,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "5700:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 994,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "5704:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5700:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 985,
														"id": 996,
														"nodeType": "Return",
														"src": "5693:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "4933:607:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5552:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5564:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5556:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5556:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5575:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5567:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5592:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5578:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 980,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5578:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5555:50:2"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "5629:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:9:2"
									},
									"scope": 1000,
									"src": "5543:172:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1001,
							"src": "61:5657:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:5687:2"
				},
				"id": 2
			}
		}
	}
}